!BAT
#-#+ ATTRIBFT.LLL v0.8.1 (20241018), by deomsh\n (subroutines :checksumSFN and :help originated by Wonko the Sane)
#-#+ Functions: Find FAT12/ FAT16/ FAT32 file/ directory attributes,\n volume special case\n Further: get/ set directory entries related to Short and Long File Names
#-#+ Use: ATTRIBFT.LLL <function> [Optional Argument(s)] <FILE> [<parameter(s)>]
#-#+ Use: ATTRIBFT.LLL (without arguments) shows all function-names
#-#+ Use: ATTRIBFT.LLL <help> [<function-name>] <help function> gives specific help
#-#+ Mandatory Arguments: function FILE and function-specific parameter(s)
#-#+ Remark Mandatory Arguments: functionname not case sensitive, most functions too\n Without device/ path on current ROOT
#-#+ Remark Long File Names: between double-quotes or use escaped spaces: '\\ '\n (or '\\=')
#-#+ Remark Volume label: if searched give 8+3 filename. Uppercase supported only
#-#+ Remark Parameters: function-specific, AND after FILE
#-#+ Remark Returns: ONLY if 'success-variable' 'result' exists, content is\n function-specific. If any error: variable 'message' exists, containing\n textual error. Variable 'output' consists of set-variables, device-specific and mostly FAT-bootsector-specs
#-#+ Remark Optional Arguments: order is NOT free, MUST given before FILE
#-#+ 1 <mdbase=N-sectors> (no qoutes!) changes base-address of working memory\n  (default 0x1FE00, range 0x220:0x3FFFF). No check for ranges used by Grub4dos!
#-#+ 2 <input="%output%"> (only mandatory double-qoutes for second part!) for\n  inserting predefined set-variables (with '&&' ) to speed up operation
#-#+ Grub4Dos only, should work on version 0.46a 2017-05-05 and upwards\n  (Grub4dos for Uefi untested)
#-#+ \n<help> Show some help; function-specific: <help> <function-name|begin of name>
#-#+ \nOnly on ATTRIBFT.G4B: <viewentry> All relevant entries of first Long File Name\n of 'file' in FILE showed (if not exist as entry of Short File Name) with\n 'raw cat --hex' with all attributes\nExample 1: ATTRIBFT.G4B viewentry (fd1)/Program\\ Files or "(fd1)/Program Files"\nExample 2: ATTRIBFT.G4B viewentry (hd0,0)/IO.SYS
#-# <help> Show some help, function-specific: <help> <function-name>|<begin of name>
#-# <getattrib> file attributes of 'file' in FILE returned as set-variables r, s, h,\n v, d and a ("result=set r=%r% && set s=%s% && set h=%h% && set a=%a% &&\n set d=%d% && set v=%v%")
#-# <setattrib> <RSHA> set file attributes: FILE +/-[R][S][H][A] (spaces NOT mandatory). Changes only set-attributes, returns 'result=1' if success
#-# <getmoddate|getdate> date of last modification of 'file' in FILE returned as 'yyyymmdd'
#-# <getmodtime|gettime> time of last modification of 'file' in FILE returned as 'hhmmss'
#-# <getaccdate> date of last access of 'file' in FILE returned as 'yyyymmdd'
#-# <getcreadate> date of creation on disk of 'file' in FILE returned as 'yyyymmdd'
#-# <getcreatime> time of creation on disk of 'file' in FILE returned as 'hhmmss[hundreth]'
#-# <getdatetimeall> dates and times of 'file' in FILE returned as set-variables: moddate modtime accdate creadate creatime (if exist)
#-# <getdatetimeattriball> dates and times and file attributes of 'file' in FILE returned as set-variables: moddate modtime accdate creadate creatime and attributes r, s, h, v, d and a (if exist)
#-# <setmoddate|setdate> set date of last modification (=DOS-default) with: FILE yyyy[-]mm[-]dd - returns 'result=1' if success
#-# <setmodtime|settime> set time of last modification (=DOS-default) with: FILE hh[:]mm[:]ss - returns 'result=1' if success
#-# <setaccdate> set date of last access with: FILE yyyy[-]mm[-]dd - returns 'result=1' if success
#-# <setcreadate> set date of creation on disk with: FILE yyyy[-]mm[-]dd - returns 'result=1' if success
#-# <setcreatime> set time of creation on disk with: FILE hh[:]mm[:]ss[[:]hundreth] - returns 'result=1' if success
#-# <setmoddatetime|setdatetime> set date and time of last modification of 'file' in FILE yyyy[-]mm[-]dd hh[:]mm[:]ss - returns 'result=1' if success
#-# <setcreadatetime> set date and time of last modification of 'file' in FILE yyyy[-]mm[-]dd hh[:]mm[:]ss[[:]hundreth - returns 'result=1' if success
#-# <attribecho> returns attributes of 'file' in FILE in one pre-made variable - ready to echo (max 77 chars)
#-# <attriballecho> one pre-made variable - ready to echo of 'file' in FILE (max 77 chars): attributes moddate modtime accdate creadate creatime
#-# <datetimeecho> one pre-made variable - ready to echo of 'file' in FILE (max 77 chars): moddate modtime
#-# <datetimeallecho> one pre-made variable - ready to echo of 'file' in FILE (max 77 chars): moddate modtime accdate creadate creatime (if exist)
#-# <datetimeattribecho> one pre-made variable - ready to echo of 'file' in FILE (max 36 chars): moddate modtime attributes
#-# <getsfn> Short File Name of Long File Name of existing 'file' in FILE returned: 'sfnname.sfnext'
#-# <getsfnpath> Short File Name path of existing full path in FILE returned: '/sfnpath/'
#-# <getsfnfile> Short File Names of existing full FILE returned: '/sfnpath/sfnname.sfnext'
#-# <getlfn> Long File Name of Short File Name of existing 'file' in FILE, returned if exist: 'lfnname.lfnext'
#-# <makelfn> Writes full Long File Name of 'file' in FILE to disk to given Short File Name. Parameter: Short File Name (MUST EXIST already). Returns if success 'result=1'. Example: ATTRIBFT.LLL makelfn (fd1)/Program\\ Files progra~1 (or use "(fd1)/Program Files" progra~1)
#-# <dellfn> Deletes ALL found Long File Name entries of 'file' in FILE (writes E5 on disk). SFN is not 'touched' nor searched. Returns if success 'result=1'. Example: ATTRIBFT.LLL dellfn (fd1)/Program\\ Files (or use "(fd1)/Program Files")
#-# <getlabel> [<[0x]08|28>] get label of root directory '/' in FILE returns Volume-name (case-sensitive!). Optional: 08 (NT-style) or 28 (MS-DOS-style) label. Example 1: ATTRIBFT.LLL getlabel (fd1). Example 2: ATTRIBFT.LLL getlabel (fd1) 08. Example 3: ATTRIBFT.LLL getlabel (fd1) 0x28
#-# <isdir> If File Name of 'file' in FILE is a directory returns: 1
#-# <isreadonly> If File Name of 'file' in FILE is read-only returns: 1
#-# <getntcasebyte> get NT-case-byte in SFN-entry of 'file' in FILE returned as hex-byte (0x0: all uppercase; 0x8: name lowercase; 0x10: extension lowercase; 0x18: all lowercase)
#-# <setntcasebyte> set NT-case-byte in SFN-entry of 'file' in FILE (0x0: all uppercase; 0x8: name lowercase; 0x10: extension lowercase; 0x18: all lowercase)
#-# <geteapointer> get pointer to Extended Attribute on FAT12/16 of 'file' in FILE returned as hex-byte(s) IF non-zero
#-# <calcsfnchecksum> Checksum of Short File Name of 'file' in FILE returned: one hex-byte WITHOUT leading '0x' (sfn case-insensitive)
#-# <calclfnhash> NT-hash of Long File Name of 'file' in FILE returned: four hex-bytes WITHOUT leading '0x' (lfn case-sensitive!)
#-# <getsfnentry> Entry of Short File Name of 'file' in FILE returned as offset on partition
#-# <getlfnentry> First entry of Long File Name of 'file' in FILE returned as offset on partition (is last lfn-part, with 'terminating' ordinal-value, comes first on disk)
#-# <getlfnentries> All relevant entries of Long File Name of 'file' in FILE returned as set-variables in 'result': sfnpath, lfnentry lfnent01 lfnbyteA lfnbyteB n (if exist)
#-# <getfreeentry> First free entry in last directory in FILE (entry starting with zero) returned as offset on partition
#-# <getfreeentries> Returns number of free entries in last directory in FILE (entry starting with zero)
#-# <getdelentry> First deleted entry (of n CONTIGUOUS deleted entries - n=2-21) in last directory in FILE (SOME entry starting with E5), returned as offset on partition. Optional parameter: n
#-# <getdelsfnentry> First entry of deleted SFN in 'file' in FILE returned as offset on partition
#-# <getlabelentry> [<[0x8]08|28>] Entry of (first) label in root directory (='/') in FILE returned as offset on partition (path will be '/'). Optional: 08 (NT-style) or 28 (MS-DOS-style) label. Example 1: ATTRIBFT.LLL getlabelentry (fd1). Example 2: ATTRIBFT.LLL getlabelentry (fd1) 08. Example 3: ATTRIBFT.LLL getlabelentry (fd1) 0x28
#-# <getlastclusnum> Returns number of last used cluster in last directory in FILE
#-# <setlabelattrib> <DEVICE> <LABEL> <[0x8]08|28> Set label attribute to 'file' in FILE (case-insensitive), returns "labelentry" if success (as offset on partition). Argument: 08 (NT-style) or 28 (MS-DOS-style) label. Example 1: ATTRIBFT.LLL setlabelattrib (fd1) Volume_Name 08 Example 2: ATTRIBFT.LLL setlabelattrib (fd1) VOLUME_NAME 0x28
#-# <getchainclus> [<1-4096>] Investigate clusters in clusterchain of 'directory' in FILE. Returns without parameter: number of clusters in clusterchain. Optional: get nth clusternumber in clusterchain (highest number depends on clustersize, max 4096 for 512-byte clusters - if exist), returns: clusternumber in clusterchain. Example 1: ATTRIBFT.LLL getchainclus (fd1)/somedir/ Example 2: ATTRIBFT.LLL getchainclus (fd1)/somedir/ 2 Example 3: ATTRIBFT.LLL getchainclus (hd0,0)/ Example 4: ATTRIBFT.LLL getchainclus (hd0,0)/ 5 ('/' on FAT32 only)
#IN_ATTRIBFT.G4B#-# <viewentry> All relevant entries of first Long File Name of 'file' in FILE returned (if not exist entry of Short File Name) as preset 'raw cat --hex' in 'result'
#AGAIN?##-# <getnumclus> Returns total number of clusters on existing DEVICE in FILE
#notyet##-# <setsfnchecksum> Writes given checksum of Short File Name to all corresponding LFN entries. Parameter: one hex-byte with leading 0x
#notyet##-# <getlfnpath> Long File Name Path of existing full Short File Name Path, in FILE, returned
#notyet##-# <dolfncheck> Checks if sfnentry follows directly after the LFN, and if checkum of Short File Name of 'file', in FILE, is written correctly in all LFN entries, returns IF ALL ARE EQUAL the checksum hex-byte with leading 0x
if "%~1"=="" && clear && echo -e ATTRIBFT.LLL <function> [<mdbase=N-sectors>] [<input=\x22\x25output\x25\x22>] <FILE> [<parameters>] && echo && echo ATTRIBFT.LLL <help> [<function>] && echo && echo List of Functions && echo && echo Attribute: getattrib; setattrib && echo && echo Date and Time: getdate; gettime; getaccdate; getcreadate; getcreatime; getdatetimeall; getdatetimeattriball; setdate; settime; setaccdate; setcreadate; setcreatime; setdatetime; setcreadatetime && echo && echo Service: attribecho; attriballecho; datetimeecho; datetimeallecho; datetimeattribecho && echo && echo Long File Names: getsfn; getsfnpath; getsfnfile; getlfn; makelfn; dellfn && echo && echo Special: isdir; isreadonly; getlabel; setlabelattrib; getntcasebyte; setntcasebyte; geteapointer; calcsfnchecksum; calclfnhash; getlastclusnum; getchainclus && echo && echo Internals: getsfnentry; getlfnentry; getlfnentries; getfreeentry; getfreeentries; getdelentry; getdelsfnentry; getlabelentry && echo && goto :eof
if not /i "%~1"=="help" && if "%~2"=="" && set "message=Argument(s) missing" && goto :eof
set result=
debug msg=0
set "message=Function %~1 does not exist"
goto :%~1
goto :eof
::
:getattrib
#-#+  \n<getattrib> file attributes of 'file' in FILE returned as set-variables r, s,\n h, v, d and a ("result=set r=%r% && set s=%s% && set h=%h% && set a=%a% &&\n set d=%d% && set v=%v%")\nExample: ATTRIBFT.LLL getattrib (fd1)/io.sys
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist entry && set "result=set r=%r% && set s=%s% && set h=%h% && set v=%v% && set d=%d% && set a=%a%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:setattrib
#-#+  \n<setattrib> <RSHA> set file attributes: FILE +/-[R][S][H][A] (spaces NOT\n mandatory). Changes only set-attributes, returns 'result=1' if success\nExample: ATTRIBFT.LLL setattrib (fd1)/io.sys +r +s +h (or use +r+s+h)
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if not %result%==1 && set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:attribecho
#-#+  \n<attribecho> returns attributes of 'file' in FILE in one pre-made variable\n - ready to echo (max 77 chars)\nExample: ATTRIBFT.LLL attribecho (fd1)/io.sys
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if %r%==r && set "r=Read-only " ;; if %s%==s && set "s=System " ;; if %h%==h && set "h=Hidden " ;; if %v%==v && set "v=Volume label " ;; if %d%==d && set "d=Directory " ;; if %a%==a && set "a=Archive "
if exist entry && set "result=Attributes: %v%%%a%%%d%%%r%%%s%%%h%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:attriballecho
#-#+  \n<attriballecho> one pre-made variable - ready to echo of 'file' in FILE (max\n 77 chars): attributes moddate modtime accdate creadate creatime (if exist)\nExample: ATTRIBFT.LLL attriballecho (fd1)/io.sys
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if not exist v if not exist d if not exist a if not exist r if not exisst s if not exist h |; set /u "attrib=%v%%%d%%%a%%%r%%%s%%%h%" &; set "attrib=Attrib %attrib% "
if exist moddate && set moddate=%moddate:~0,4%-%moddate:~4,2%-%moddate:~6,2% ;; if exist creadate && set creadate=%creadate:~0,4%-%creadate:~4,2%-%creadate:~6,2% ;; if exist accdate && set accdate=%accdate:~0,4%-%accdate:~4,2%-%accdate:~6,2%
if exist modtime && set modtime=%modtime:~0,2%:%modtime:~2,2%:%modtime:~4,2% ;; if exist creatime &; if not exist hundreth && set creatime=%creatime:~0,2%:%creatime:~2,2%:%creatime:~4,2% ! set creatime=%creatime:~0,2%:%creatime:~2,2%:%creatime:~4,2%:%creatime:~6,2%
if exist moddate && set "moddate=Mod %moddate% %modtime%"
if exist accdate && set "accdate=Acc %accdate%" ;; if exist creadate && set "creadate=Wri %creadate% %creatime%"
if exist entry && set "result=%attrib% %moddate% %accdate% %creadate%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:datetimeattribecho
#-#+  \n<datetimeattribecho> one pre-made variable - ready to echo of 'file' in FILE\n (max 36 chars): moddate modtime attributes\nExample: ATTRIBFT.LLL datetimeattribecho (fd1)/io.sys
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if not exist v if not exist d if not exist a if not exist r if not exisst s if not exist h |; set /u "attrib=%v%%%d%%%a% %r%%%s%%%h%"
if exist moddate && set moddate=%moddate:~0,4%-%moddate:~4,2%-%moddate:~6,2%
if exist modtime && set modtime=%modtime:~0,2%:%modtime:~2,2%:%modtime:~4,2%
if exist entry && set "result=%moddate% %modtime%  %attrib%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:datetimeecho
#-#+  \n<datetimeecho> one pre-made variable - ready to echo of 'file' in FILE\n (max 77 chars): moddate modtime\nExample ATTRIBFT.LLL datetimeecho (fd1)/io.sys
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist moddate && set moddate=%moddate:~0,4%-%moddate:~4,2%-%moddate:~6,2%
if exist modtime && set modtime=%modtime:~0,2%:%modtime:~2,2%:%modtime:~4,2%
if exist entry && if exist moddate && set "result=Modified %moddate% %modtime%" ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:datetimeallecho
#-#+  \n<datetimeallecho> one pre-made variable - ready to echo of 'file' in FILE\n (max 77 chars): moddate modtime accdate creadate creatime (if exist)\nExample: ATTRIBFT.LLL datetimeallecho "(fd1)/System Volume Information"
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist moddate && set moddate=%moddate:~0,4%-%moddate:~4,2%-%moddate:~6,2% ;; if exist creadate && set creadate=%creadate:~0,4%-%creadate:~4,2%-%creadate:~6,2% ;; if exist accdate && set accdate=%accdate:~0,4%-%accdate:~4,2%-%accdate:~6,2%
if exist modtime && set modtime=%modtime:~0,2%:%modtime:~2,2%:%modtime:~4,2% ;; if exist creatime &; if not exist hundreth && set creatime=%creatime:~0,2%:%creatime:~2,2%:%creatime:~4,2% ! set creatime=%creatime:~0,2%:%creatime:~2,2%:%creatime:~4,2%:%creatime:~6,2%
if exist accdate && set "accdate=Accessed %accdate%" ;; if exist creadate && set "creadate=Written %creadate% %creatime%"
if exist moddate && set "moddate=Modified %moddate% %modtime%"
if exist entry && set "result=%moddate% %accdate% %creadate%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getdate
#-#+  \n<getdate> date of last modification of 'file' in FILE returned as 'yyyymmdd'\nExample ATTRIBFT.LLL getdate (hd0,0)/io.sys
set message=
setlocal && set *
set mode=getmoddate
call :main %*
set result=%moddate%
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:gettime
#-#+  \n<gettime> time of last modification of 'file' in FILE returned as 'hhmmss'\nExample: ATTRIBFT.LLL gettime (hd0,0)/io.sys
set message=
setlocal && set *
set mode=getmodtime
call :main %*
set result=%modtime%
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getaccdate
#-#+  \n<getaccdate> date of last access of 'file' in FILE returned as 'yyyymmdd'\nExample: ATTRIBFT.LLL getaccdate "(fd1)/System Volume Information"
set message=
setlocal && set *
set /l mode=%~1
call :main %*
set result=%accdate%
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getcreadate
#-#+  \n<getcreadate> date of creation on disk of 'file' in FILE returned as 'yyyymmdd'\nExample: ATTRIBFT.LLL getcreadate "(fd1)/System Volume Information"
set message=
setlocal && set *
set /l mode=%~1
call :main %*
set result=%creadate%
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getcreatime
#-#+  \n<getcreatime> time of creation on disk of 'file' in FILE returned as\n 'hhmmsshundreth'\nExample: ATTRIBFT.LLL getcreatime "(fd1)/System Volume Information"
set message=
setlocal && set *
set /l mode=%~1
call :main %*
set result=%creatime%
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getdatetimeall
#-#+  \n<getdatetimeall> dates and times of 'file' in FILE returned as set-variables:\n moddate modtime accdate creadate creatime (if exist)\nExample: ATTRIBFT.LLL getdatetimeall "(fd1)/System Volume Information"
set message=
setlocal && set *
set /l mode=%~1
call :main %*
set "result=set moddate=%moddate% && set modtime=%modtime% && set creadate=%creadate% && set creatime=%creatime% && set accdate=%accdate%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getdatetimeattriball
#-#+  \n<getdatetimeattriball> dates and times and file attributes of 'file' in FILE\n returned as set-variables: moddate modtime accdate creadate creatime AND\n attributes r, s, h, v, d, a (if exist)\nExample: ATTRIBFT.LLL getdatetimeattriball "(fd1)/System Volume Information"
set message=
setlocal && set *
set /l mode=%~1
call :main %*
set "result=set moddate=%moddate% && set modtime=%modtime% && set creadate=%creadate% && set creatime=%creatime% && set accdate=%accdate% && set r=%r% && set s=%s% && set h=%h% && set v=%v% && set d=%d% && set a=%a%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getsfn
#-#+  \n<getsfn> Short File Name of Long File Name of existing 'file' in FILE returned:\n 'SFNNAME.EXT'\nExample: ATTRIBFT.LLL getsfn (fd1)/Program\\ Files (or: "(fd1)/Program Files")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist sfnfile && set /u result=%sfnfile% ! set result=
if not exist message && if not exist entry && set "message=SFN of %device%%%path%%%name%%%ext% not found" && set result=
if not exist message && if not exist lfnentry && if exist entry && set "message=LFN of %device%%%path%%%name%%%ext% not found" && set result=
if not exist message && if not exist lfnentry && if not exist entry && set "message=%device%%%path%%%name%%%ext% not found" && set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getsfnfile
#-#+  \n<getsfnfile> Short File Names of existing full FILE returned:\n '/SFNPATH/SFNNAME.EXT'\nExample: ATTRIBFT.LLL getsfnfile (fd1)/Program\\ Files/Common\\ Files\n (or: "(fd1)/Program Files/Common Files")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist sfnpath && if exist sfnfile && set /u result=%sfnpath%%%sfnfile% ! set result=
endlocal && set "result=%result%" && set "output=%output%" && set "message=%message%"
goto :eof
::
:getsfnpath
#-#+  \n<getsfnpath> Short File Name path of existing full path in FILE returned:\n '/SFNPATH/'\nExample: ATTRIBFT.LLL getsfnpath (fd1)/Program\\ Files/Common\\ Files/\n (or: "(fd1)/Program Files/Common Files/")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if not exist message && if exist sfnpath && set /u result=%sfnpath% ! set result=
endlocal && set "result=%result%" && set "output=%output%" && set "message=%message%"
goto :eof
::
:getsfnentry
#-#+  \n<getsfnentry> Entry of Short File Name of 'file' in FILE returned as offset on\n partition\nExample: ATTRIBFT.LLL getsfnentry (fd1)/Program\\ Files/Common~1\n (or: "(fd1)/Program Files/Common~1", or: (fd1)/Progra~1/Common~1 IF\n '/Progra~1/' is the 'right' SFN-path)
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist entry && set result=%entry% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:isdir
#-#+  \n<isdir> If File Name of 'file' in FILE is a directory returns 'result=1'\nExample 1: ATTRIBFT.LLL isdir (fd1)/Program\\ Files or "(fd1)/Program Files"\n (or: (fd1)/Progra~1 if 'Progra~1' is 'right' SFN)\nExample 2: ATTRIBFT.LLL isdir (fd1)/somename.ext (8+3 SFN)
set message=
setlocal && set *
set /l mode=issfndir
call :main %*
if %issfndir%==1 && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:isreadonly
#-#+  \n<isreadonly> If File Name of 'file' in FILE is read-only returns 'result=1'\nExample: ATTRIBFT.LLL isreadonly (fd1)/command.com
set message=
setlocal && set *
set /l mode=issfnreadonly
call :main %*
if %issfnreo%==1 && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:calcsfnchecksum
#-#+  \n<calcsfnchecksum> Checksum of Short File Name of 'file' in FILE returned:\n one hex-byte WITHOUT leading '0x' (SFN is case-insensitive!)\nExample: ATTRIBFT.LLL calcsfnchecksum (fd1)/Progra~1
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist checksum && set result=%checksum% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:calclfnhash
#-#+  \n<calclfnhash> NT-hash of Long File Name of 'file' in FILE returned:\n four hex-bytes WITHOUT leading '0x' (LFN is case-sensitive!)\nExample: ATTRIBFT.LLL calclfnhash (fd1)/Program\\ Files\n (or: "(fd1)/Program Files")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist lfnhash && set result=%lfnhash% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getlfnentry
#-#+  \n<getlfnentry> First entry of Long File Name of 'file' in FILE returned as offset on partition (is last LFN-part, with 'terminating' ordinal-value, comes first\n on disk)\nExample: ATTRIBFT.LLL getlfnentry (fd1)/Program\\ Files\n (or: "(fd1)/Program Files")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist lfnentry && set result=%lfnentry% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:makelfn
#-#+  \n<makelfn> Writes full Long File Name of 'file' in FILE to disk to given\n Short File Name\n Parameter: Short File Name (MUST EXIST already)\n Returns if success 'result=1'\nExample: ATTRIBFT.LLL makelfn (fd1)/Program\\ Files progra~1\n (or: "(fd1)/Program Files" progra~1)
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist lfnentry && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:dellfn
#-#+  \n<dellfn> Deletes ALL found Long File Name entries of 'file' in FILE\n (writes E5 on disk). SFN is not 'touched' nor searched\n Returns if success 'result=1'\nExample: ATTRIBFT.LLL dellfn (fd1)/Program\\ Files (or: "(fd1)/Program Files")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
%dellfn%
if exist lfnentry && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getfreeentry
#-#+  \n<getfreeentry> First free entry in last directory in FILE returned as\n offset on partition (entry starting with zero: 00h)\nExample: ATTRIBFT.LLL getfreeentry (fd1)/Program\ Files/\n (or: "(fd1)/Program Files/")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist result && set /A result=%result% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getfreeentries
#-#+  \n<getfreeentries> Returns number of free entries in last directory in FILE\n (entries starting with zero: 00h)\nExample: ATTRIBFT.LLL getfreeentries (fd1)/Program\\ Files/\n (or: "(fd1)/Program Files/")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist numentry && set /a result=%numentry% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getlastclusnum
#-#+  \n<getlastclusnum> Returns number of last used cluster in last directory in FILE\nExample: ATTRIBFT.LLL getlastclusnum (fd1)/Program\\ Files/\n (or: "(fd1)/Program Files/")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if %bytedone%>=%dataarea% && if %clusnum%>=2 && set /a result=%clusnum% ! if %bytedone%>=%dataarea% && if %lastclus%>=2 && set /a result=%lastclus% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
#MaybeNotAgain#:getnumclus
#-#  \n<getnumclus> Returns total number of clusters on existing DEVICE in FILE\nExample: ATTRIBFT.LLL getnumclus (fd1)
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist numclus && set /a result=%numclus% ! set result=
#NotAvaileble#echo %0 fatsize=%fatsize%
set "output=set checkdev=%device% && set filesys=%filesys% && set root=%root% && set dataarea=%dataarea% && set clussize=%clussize% && set fat1=%fat1% && set fat2=%fat2% && set secpfat=%secpfat% && set devsect=%devsect% && set secpclus=%secpclus% && set numclus=%numclus%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getlfn
#-#+  \n<getlfn> Long File Name of Short File Name of existing 'file' in FILE returns\n if exist: 'lfnname.lfnext'\nExample: ATTRIBFT.LLL getlfn (fd1)/progra~1
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist lfnfile && set "result=%lfnfile%" ! set result=
set "output=%output% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set entry=%entry% && set lfnindex=%lfnindex%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getdelentry
#-#+  \n<getdelentry> First deleted entry returned as offset on partition\n of n CONTIGUOUS deleted entries: n=2-21, in last directory in FILE\n (SOME entry starting with E5h, can NOT find deleted File Names)\nOptional parameter: n\nExample 1: ATTRIBFT.LLL getdelentry (fd1)/Program\x5C Files/\nExample 2: ATTRIBFT.LLL getdelentry (fd1)/Program\x5C Files/ 2\n (or use "(fd1)/Program Files/")
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist result && set /A result=%result% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
#badidea#:getdelentries
#badidea#  <getdelentries> n-th deleted entry (n=1-21) in last directory in FILE (entry starting with E5), returned as offset on partition. parameter: n (1 if ommitted). Example 1: ATTRIBFT.LLL getdelentries (fd1)/Program\\ Files/ (or use "(fd1)/Program Files/"). Example 2: ATTRIBFT.LLL getdelentries (fd1)/Program\\ Files/ 2 (or use "(fd1)/Program Files/" 2)
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist result && set /A result=%result% ! set result=
#ORG#debug msg=3
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
#ORG#endlocal && set "result=%result%" && set "output=%output%" && set "message=%message%"
goto :eof
::
:getdelsfnentry
#-#+  \n<getdelsfnentry> First entry of deleted SFN in 'file' in FILE returned as\n offset on partition\nExample: ATTRIBFT.LLL getdelsnfentry (fd1)/Program\\ Files/common~1\n (or: "(fd1)/Program Files/common~1" or (fd1)/progra~1/common~1 IF '/Progra~1/'\n is 'right' SFN-path)
set message=
setlocal && set *
set /l mode=%~1
echo -e \xE5 | set del=
call :main %*
if exist entry && set /A result=%entry% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:setdate
#-#+  \n<setdate> set date of last modification (=DOS-default): FILE yyyy[-]mm[-]dd\n Returns 'result=1' if success\nExample: ATTRIBFT.LLL setdate (fd1)/somefile.ext 20211231 (or: 2021-12-31)
set message=
setlocal && set *
set mode=setmoddate
call :main %*
if exist result && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:settime
#-#+  \n<settime> set time of last modification (=DOS-default): FILE hh[:]mm[:]ss\n Returns 'result=1' if success\nExample: ATTRIBFT.LLL settime (fd1)/somefile.ext 235959 (or: 23:59:59)
set message=
setlocal && set *
set mode=setmodtime
call :main %*
if exist result && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:setaccdate
#-#+  \n<setaccdate> set date of last access: FILE yyyy[-]mm[-]dd\n Returns 'result=1' if success\nExample: ATTRIBFT.LLL setaccdate (fd1)/somefile.ext 20211231 (or: 2021-12-31)
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist result && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:setcreadate
#-#+  \n<setcreadate> set date of creation on disk: FILE yyyy[-]mm[-]dd\n Returns 'result=1' if success\nExample: ATTRIBFT.LLL setcreadate (fd1)/somefile.ext 20211231 (or: 2021-12-31)
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist result && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:setcreatime
#-#+  \n<setcreatime> set time of creation on disk: FILE hh[:]mm[:]ss[[:]hundreth]\n Returns 'result=1' if success\nExample: ATTRIBFT.LLL setcreatime (fd1)/somefile.ext 23595999 (or: 23:59:59:99)
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist result && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getntcasebyte
#-#+  \n<getntcasebyte> get NT-case-byte in SFN-entry of 'file' in FILE returned as hex\n (0x0: all uppercase; 0x8: name lowercase; 0x10: extension lowercase; 0x18: all\n lowercase)\nExample: ATTRIBFT.LLL getntcasebyte (fd1)/somefile.ext
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:setntcasebyte
#-#+  \n<setntcasebyte> set NT-case-byte in SFN-entry of 'file' in FILE with hex-byte\n (0x0: all uppercase; 0x8: name lowercase; 0x10: extension lowercase; 0x18: all\n lowercase)\nExample: ATTRIBFT.LLL setntcasebyte (fd1)/somefile.ext 0x18
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:geteapointer
#-#+  \n<geteapointer> get pointer to Extended Attribute on FAT12/16 of 'file' in FILE\n returned as hex-byte(s) IF non-zero\nExample: ATTRIBFT.LLL geteapointer (fd1)/somefile.ext
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if not %result%==0 && set "result=%result%" ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:setdatetime
#-#+  \n<setdatetime> set date and time of last modification of 'file'\n in FILE: yyyy[-]mm[-]dd hh[:]mm[:]ss\n Returns 'result=1' if success\nExample 1: ATTRIBFT.LLL setdatetime (fd1)/somefile.ext 20240918 231812\nExample 2: ATTRIBFT.LLL setdatetime (fd1)/somefile.ext \x25@date\x25 \x25@time\x25
set message=
setlocal && set *
set mode=setmoddatetime
call :main %*
if exist result && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:setcreadatetime
#-#+  \n<setcreadatetime> set date and time of last modification of 'file'\n in FILE: yyyy[-]mm[-]dd hh[:]mm[:]ss[[:]hundreth\n Returns 'result=1' if success\nExample 1: ATTRIBFT.LLL setdatetime (fd1)/somefile.ext 20240918 23181233\nExample 2: ATTRIBFT.LLL setdatetime (fd1)/somefile.ext \x25@date\x25 \x25@time\x25:33
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist result && set result=1 ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
#InATTRIBFT.G4Bonly#:viewentry
##  <viewentry> All relevant entries of first Long File Name of 'file' in FILE returned (if not exist entry of Short File Name) as preset 'raw cat --hex' in 'result': Example 1: ATTRIBFT.LLL viewentry (fd1)/Program\\ Files (or use "(fd1)/Program Files") Example 2: ATTRIBFT.LLL viewentry (hd0,0)/IO.SYS
setlocal && set * && set message=
setlocal && set mode=getsfnentry && call :main %* &; endlocal && set sfnentry=%entry% && set "output=%output%"
setlocal && set * && set sfnentry=%sfnentry% && set "output=%output%" &; %output%
if %sfnentry%>=%dataarea% && set /a cluster=%sfnentry%-%dataarea%/%clussize%+2 > nul
set /A start=%cluster% - 2 * %clussize% + %dataarea% > nul
calc %sfnentry% % %clussize% > nul || set "echo=echo"
if exist root && set "clusmsg=echo ROOT starting at %root%" ! set "clusmsg=echo Cluster %cluster% starting at %start%"
endlocal && set "echo=%echo%" && set "clusmsg=%clusmsg%" && set message=
if exist sfnentry && setlocal && set * && set "output=%output%" &; %output% &; call :attriballecho attriballecho %2 &; endlocal && set "attrib=%result%" && set "output=%output%" && set message=
if exist sfnentry && setlocal && set * && set "output=%output%" && set sfnentry=%sfnentry% &; %output% &; set /A address=%sfnentry%+28 > nul && set device=%checkdev% &; call :readendian "%address%" &; endlocal && set result=%result% &; set /A hexsize=%result%&0xffffffff > nul && set /a decisize=%result%&0xffffffff > nul && set result= && set message= &; %output% &; set /u filesys=%filesys%
if exist sfnentry && if not exist echo && set "catentry=raw cat --hex --skip=%sfnentry% --length=0x20 %checkdev%%0+%devsect% && echo %attrib% && echo Filesize %decisize% (HEX:%hexsize%) Byte(s)"
if exist sfnentry && if exist echo && set "catentry=%clusmsg% && raw cat --hex --skip=%sfnentry% --length=0x20 %checkdev%%0+%devsect% && echo %attrib% && echo Filesize %decisize% (HEX:%hexsize%) Byte(s)"
if not exist sfnentry && set "clusmsg=echo sfnentry of %~2 not found (%filesys%)"
setlocal && set * && set "catentry=%catentry%" && set "clusmsg=%clusmsg%"
set mode=getlfnentry
call :main %*
%output% &; set /u filesys=%filesys%
if exist lfnentry && set /a cluster0=%lfnentry%-%dataarea%/%clussize%+2 &; set /A start0=%cluster0% - 2 * %clussize% + %dataarea% &; if %lfnentry%>=%dataarea% && set "clusmsg0=echo Cluster %cluster0% starting at %start0% (%filesys%)" ! set "clusmsg0=echo ROOT starting at %root% (%filesys%)"
if exist lfnentryA && set /a clusterA=%lfnbyteA%-%dataarea%/%clussize%+2 &; set /A startA=%clusterA% - 2 * %clussize% + %dataarea% &; set "clusmsgA=echo Cluster %clusterA% starting at %startA%"
if exist lfnentryB && set /a clusterB=%lfnbyteB%-%dataarea%/%clussize%+2 &; set /A startB=%clusterB% - 2 * %clussize% + %dataarea% &; set "clusmsgB=echo Cluster %clusterA% starting at %startB%"
if exist lfnentry && if not exist lfnbyteA && if not exist lfnbyteB && set /a length=%n% * 0x20 &; set "result=%clusmsg0% && raw cat --hex --skip=%lfnentry% --length=%length% %checkdev%%0+%devsect%"
if exist lfnentry && if exist lfnbyteA && if not exist lfnbyteB && set /a length2=%lfnent01%+0x20-%lfnbyteA% &; set /a length1=%n% * 0x20 - %length2% &; set "result=%clusmsg0% && raw cat --hex --skip=%lfnentry% --length=%length1% %checkdev%%0+%devsect% && %clusmsgA% && raw cat --hex --skip=%lfnbyteA% --length=%length2% %checkdev%%0+%devsect%"
if exist lfnentry && if exist lfnbyteA && if exist lfnbyteB && set /a length3=%lfnent01%+0x20-%lfnbyteA% &; set length2=%clussize% && set /a length1=%n% * 0x20 - %length3% - %length2% &; set "result=raw cat --hex --skip=%lfnentry% --length=%length1% %checkdev%%0+%devsect% && %clusmsgB% && raw cat --hex --skip=%lfnbyteB% --length=%length2% %checkdev%%0+%devsect% && %clusmsgA% && raw cat --hex --skip=%lfnbyteA% --length=%length3% %checkdev%%0+%devsect%"
if exist catentry && if exist lfnentry && set "result=%result% && %catentry%"
if exist catentry && if not exist lfnentry && set "result=%clusmsg% (%filesys%) && %catentry%" && set message=
if not exist catentry && if exist lfnentry && set "result=%result% && echo Orphaned Long File Name" && set message=
if /i %filesys:~0,3%==fat && if not exist catentry && if not exist lfnentry && set "result=%clusmsg% && echo %message% (%filesys%)"
endlocal && set "result=%result%" && set "output=%output%" && set "message=%message%"
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getlfnentries
#-#+  \n<getlfnentries> All relevant entries of first Long File Name of 'file' in FILE\n returned as set-variables in 'result': sfnpath, lfnentry lfnbyteA lfnbyteB\n lfnent01 n (if exist)\n Variables lfnbyteA and lfnent01 will exist if LFN crosses FIRST cluster border\n lfnbyteB if NEXT cluster border is crossed\nExample: ATTRIBFT.LLL getlfnentries (fd1)/Program\\ Files\n (or: "(fd1)/Program Files")
set message=
setlocal && set *
set mode=getlfnentry
call :main %*
if exist lfnentry && set "result=set sfnpath=%sfnpath% && set clussize=%clussize% && set n=%n% && set lfnentry=%lfnentry% && set lfnbyteB=%lfnbyteB% && set lfnbyteA=%lfnbyteA% && set lfnent01=%lfnent01%" ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getlabel
#-#+  \n<getlabel> [<[0x]08|28>] get label of root directory '/' in FILE returns:\n Volume-name (case-sensitive!)\n Optional: 08 (NT-style) or 28 (MS-DOS-style) label\nExample 1: ATTRIBFT.LLL getlabel (fd1)\nExample 2: ATTRIBFT.LLL getlabel (fd1) 08\nExample 3: ATTRIBFT.LLL getlabel (fd1) 0x28
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist label && set "result=%label%" ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getlabelentry
#-#+  \n<getlabelentry> [<[0x]08|28>] Entry of first label in root directory in FILE\n returned as offset on partition (path will be '/')\n Optional: 08 (NT-style) or 28 (MS-DOS-style) label\nExample 1: ATTRIBFT.LLL getlabelentry (fd1)\nExample 2: ATTRIBFT.LLL getlabelentry (fd1) 08\nExample 3: ATTRIBFT.LLL getlabelentry (fd1) 0x28
set message=
setlocal && set *
set mode=getlabel
call :main %*
if exist volentry && set result=%volentry% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:setlabelattrib
#-#+  \n<setlabelattrib> <DEVICE> <LABEL> <[0x]08|28> Set label attribute to 'file'\n in FILE (LABEL is case-insensitive)\n Returns "labelentry" if success (as offset on partiton)\n Argument: 08 (NT-style) or 28 (MS-DOS-style) label\nExample 1: ATTRIBFT.LLL setlabelattrib (fd1) Volume_Name 08\nExample 2: ATTRIBFT.LLL setlabelattrib (fd1) VOLUME_NAME 0x28
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if exist volentry && set result=%volentry% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:getchainclus
#-#+  \n<getchainclus> [<1-4096>] Get clusters in cluster-chain of 'directory' in FILE\n Returns without parameter: number of clusters in cluster-chain\n Highest number: 4096 for 512-byte clusters\n Optional: get nth cluster-number in cluster-chain (lowest: 2)\n Returns with parameter: cluster-number of nth cluster in cluster-chain\nExample 1: ATTRIBFT.LLL getchainclus (fd1)/somedir/\nExample 2: ATTRIBFT.LLL getchainclus (fd1)/somedir/ 2\nExample 3: ATTRIBFT.LLL getchainclus (hd0,0)/ ('/' on FAT32 only)
set message=
setlocal && set *
set /l mode=%~1
call :main %*
if not exist message &; if %bytedone%>=%dataarea% && if exist chainnum && if exist chain && set "result=%chain%" ! if %bytedone%>=%dataarea% && if exist chainlen && if not exist chainnum && set /a result=%chainlen%/%clussize% ! set result=
if not exist message && endlocal && set "result=%result%" && set "output=%output%" ! endlocal && set result= && set "message=%message%"
goto :eof
::
:main
if exist mode && shift ! set result= && set "message=Function does not exist" && goto :eof
debug 1
debug msg=0
if "%~1"=="mdbase" && if not "%~2"=="" &; checkrange 0x220:0x3FFFF calc %~2 > nul && set mdbase=%~2 && shift && shift
if not exist mdbase && set /A mdbase=0x1FE00 ;; set /A basemem=%mdbase% * 0x200
if /i "%~1"=="input" && if "%~2"=="" && shift && shift
if /i "%~1"=="input" && if not "%~2"=="" && if not "%~3"=="" && if not "%~2"=="echo" && if not "%~3"=="echo" && set "input=%~2" && shift && shift
if not "%~2"=="" && if not "%~2"=="echo" &; if not %mode%==getattrib if not %mode%==getmoddate if not %mode%==getmodtime if not %mode%==getaccdate if not %mode%==getcreadate if not %mode%==getcreatime if not %mode%==getdatetimeall if not %mode%==getdatetimeattriball if not %mode%==attribecho if not %mode%==datetimeecho if not %mode%==datetimeallecho if not %mode%==datetimeattribecho if not %mode%==attriballecho if not %mode%==getsfn if not %mode%==getsfnpath if not %mode%==getsfnfile if not %mode%==getlfn if not %mode%==isdir if not %mode%==isreadonly if not %mode%==dellfn if not %mode%==getntcasebyte if not %mode%==geteapointer if not %mode%==calcsfnchecksum if not %mode%==calclfnhash if not %mode%==getlastclusnum if not %mode%==getsfnentry if not %mode%==getlfnentry if not %mode%==getfreeentry if not %mode%==getfreeentries if not %mode%==getdelsfnentry || set result= && set "message=Abort: too many arguments on command-line, check %~2" && goto :eof
if not "%~3"=="" && if not "%~3"=="echo" &; if not %mode%==setmoddate if not %mode%==setmodtime if not %mode%==setaccdate if not %mode%==setcreadate if not %mode%==setcreatime if not %mode%==makelfn if not %mode%==getlabel if not %mode%==setntcasebyte || set result= && set "message=Abort: too many arguments on command-line, check %~3" && goto :eof
if not "%~4"=="" && if not "%~4"=="echo" &; if not %mode%==setdatetime if not %mode%==setcreadatetime if not %mode%==setlabelattrib if not %mode%==getchainclus if not %mode%==getdelentry if not %mode%==getlabelentry || set result= && set "message=Abort: too many arguments on command-line, check %~4" && goto :eof
#NOTNOW#if not "%~5"=="" && if not "%~5"=="echo" && if not %mode%== || set result= && set "message=Abort: too many arguments on command-line, check %~5" && goto :eof
if exist input &; if "%~2"=="echo" && echo "input=%input%" ! if "%~3"=="echo" && echo "input=%input%" ! if "%~4"=="echo" && echo "input=%input%" ! if "%~5"=="echo" && echo "input=%input%" ! if "%~6"=="echo" && echo "input=%input%" ! if "%~7"=="echo" && echo "input=%input%" ! if "%~8"=="echo" && echo "input=%input%"
call :checkforbiddenchars "%~1" "%~2" &; if %forbiden%==Y && set "message=Forbidden chars found in %~1"
if not %mode%==makelfn |; if not %forbiden%==Y && call :checkforbiddenchars "%~2" "%~3" &; if %forbiden%==Y && set "message=Forbidden chars found in %~2"
if %forbiden%==Y && set result= && goto :eof ! set forbiden=
set "device=%~d1" &; if "%device%"=="(md)" && set "message=Device %device% is not valid" && set result= && goto :eof
set "path=%~p1" &; echo -e "%path%" | set path= &; set "path=%path:~1,-1%"
if %mode%==makelfn && if not "%path%"=="/" && call Fn.11 "%path%" "/ " && set "message=Abort: no starting space allowed in directories in path %path%" && set result= && goto :eof
set "name=%~n1"
if not exist name && if %mode%==setlabelattrib && set "name=%~n2"
if "%name:~-1,1%"=="\" && set "name=%name:~0,-1%"
if not exist name && if not %mode%==getsfnpath && if not %mode%==getnumclus && if not %mode:~0,11%==getfreeentr && if not %mode%==getlastclusnum && if not %mode:~0,10%==getdelentr && if not %mode%==getlabel && if not %mode%==getlabelentry && if not %mode%==getchainclus && set result= && set "message=Filename must exist" && goto :eof
call Fn.11 "%name:~0,1%" "\xE5" && echo -e "\x05%name:~1%" | set name= &; set "name=%name:~1,-1%"
set "ext=%~x1"
if exist ext && if "%ext:~-1,1%"=="\" && set "ext=%ext:~0,-1%"
echo -e "%name%" | set name= &; set "name=%name:~1,-1%"
## If trailing space exists, removed (in name too if no ext, starting spaces NOT removed :-)
if exist ext && if "%ext%"=="." && set ext=
if exist ext && echo -e "%ext%" | set ext= &; set "ext=%ext:~1,-1%"
:nospacedotloop
if exist ext && call Fn.11 "%ext:~-1,1%" " " && set "ext=%ext:~0,-1%" && goto :nospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" " " && set "name=%name:~0,-1%" && goto :nospacedotloop
if not exist ext && call Fn.11 "%name:~-1,1%" "." && set "name=%name:~0,-1%" && goto :nospacedotloop
if %mode%==makelfn && call Fn.11 "%name:~0,1%" " " && set "name=%name:~1%" && goto :nospacedotloop
if "%ext%"=="." && set ext=
if %mode%==makelfn && echo -n > (md)%mdbase%+1 && pause --wait=0 "%name%%%ext%" > (md)%mdbase%+1 && raw cat --locate=\x5C (md)%mdbase%+1 > nul && set result= && set "message=Forbidden chars found in %~1" && goto :eof
if %mode%==getdelsfnentry && if exist del && call :checksfn "%name%%%ext%" "%~2" &; if not %SFN%==N && set "name=%del%%%name:~1%" && set mode=getsfnentry && set del= ! set result= && set "message=%name%%%ext% is a Long File Name" && goto :eof
if exist input && setlocal &; %input% &; if not %checkdev%==%device% && endlocal && set input= ! endlocal && set filesys=%filesys% && set root=%root% && set dataarea=%dataarea% && set clussize=%clussize% && set fat1=%fat1% && set fat2=%fat2% && set secpfat=%secpfat% && set devsect=%devsect% && set secpclus=%secpclus% && set numclus=%numclus% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set entry=%entry% && set lfnindex=%lfnindex% && set sfnpath=%sfnpath%
if %mode%==calcsfnchecksum && set SFN= &; call :checksfn "%name%%%ext%" "%~2" &; if %SFN%==N && set result= && goto :eof
if %mode%==calcsfnchecksum && call :sfnchecksum "" "%~2" &; goto :eof
if %mode%==calclfnhash && call :lfnhash "%name%%%ext%" "%~2" &; goto :eof
if not exist input && call :filesystem "%device%" &; if not exist filesys && set "message=Target filesystem not found" && goto :eof ! if not /i %filesys:~0,3%==fat && set result= && set "message=Target filesystem %filesys% is not FAT" && goto :eof
if exist input &; if not exist filesys && set result= && set "message=Target filesystem not found" && goto :eof ! if not /i %filesys:~0,3%==fat && set result= && set "message=Target filesystem %filesys% is not FAT" && goto :eof
if not exist input && call :bootblockbase "%device%" &; if exist message && set result= && goto :eof
set "output=set checkdev=%device% && set filesys=%filesys% && set secpclus=%secpclus% && set clussize=%clussize% && set devsect=%devsect% && set secpfat=%secpfat% && set fat1=%fat1% && set fat2=%fat2% && set root=%root% && set dataarea=%dataarea% && set numclus=%numclus%" && set input=
if %mode%==getnumclus && goto :eof
if %mode%==setlabelattrib &; if not "%~2"=="08" if not "%~2"=="8" if not "%~2"=="0x08" if not "%~2"=="0x8" if not "%~3"=="08" if not "%~3"=="8" if not "%~3"=="0x08" if not "%~3"=="0x8" || set labeltyp=08
if %mode%==setlabelattrib &; if not "%~2"=="28" if not "%~2"=="0x28" if not "%~3"=="28" if not "%~3"=="0x28" || set labeltyp=28
if %mode%==setlabelattrib &; if not exist labeltyp && set "message=Error: label must be [0x][0]8|[0x]28" && set result= && goto :eof
if %mode%==getlabel &; if not "%~2"=="08" if not "%~2"=="8" if not "%~2"=="0x08" if not "%~2"=="0x8" if not "%~3"=="08" if not "%~3"=="8" if not "%~3"=="0x08" if not "%~3"=="0x8" || set labeltyp=08
if %mode%==getlabel &; if not "%~2"=="28" if not "%~2"=="0x28" if not "%~3"=="28" if not "%~3"=="0x28" || set labeltyp=28
if not %mode%==getlabel if not %mode%==setlabelattrib |; call :getsfnlabel "%labeltyp%" "%~3" "%~4" &; goto :eof
set chainlen=%clussize%
if %mode%==dellfn && call :dellfnfile "%~2" "%~3" &; goto :eof
if %mode:~0,7%==makelfn && call :makelfnfile "%~2" "%~3" &; goto :eof
if not exist bytedone && call :findpath "%path%" "%~2" &; if %clusnum%==0 && set result= && set "message=%~dp1 not found" && goto :eof
if not %mode%==getlastclusnum if not %mode%==getchainclus if not %mode:~0,11%==getfreeentr if not %mode:~0,10%==getdelentr || if /i %filesys%==fat32 && if "%path%"=="/" && if not exist clusnum && set clusnum=2
set chainlen=%clussize%
if %mode%==getchainclus && setlocal && call :getsfnchainclus "%~2" "%~3" &; endlocal && set chainlen=%chainlen% && set chain=%chain% && set chainnum=%chainnum% && set "message=%message%" && goto :eof
if not %mode:~0,11%==getfreeentr if not %mode%==getlastclusnum || call :freeentry "%clusnum%" "%bytedone%" "%dirlen%" "%~2" "%~3" && goto :eof
if %mode%==getdelentry && if not "%~2"=="" &; if not "%~2"=="echo" && checkrange 22:-1 calc %~2 > nul && set result= && set "message=%~2 is not in range 2-21" && goto :eof ! checkrange 22:-1 calc %~3 > nul && set result= && set "message=%~3 is not in range 2-21" && goto :eof
#badidea#if %mode%==getdelentries && if not "%~2"=="" &; if not "%~2"=="echo" && checkrange 22:-1 calc %~2 > nul && set result= && set "message=%~2 is not in range 1-21" && goto :eof ! checkrange 22:-1 calc %~3 > nul && set result= && set "message=%~3 is not in range 1-21" && goto :eof
if not %mode:~0,10%==getdelentr || call :delentry "%clusnum%" "%bytedone%" "%dirlen%" "%~2" "%~3" && goto :eof
if %mode%==getsfnpath && goto :eof
if %mode%==getlfn && call :getlfnfile "%name%%%ext%" "%~2" &; goto :eof
if not "%path%"=="/" && if not exist entry && set result= && set "message=%~dp1 not found" && goto :eof
if not exist bytedone && set result= && set "message=%~dp1 not found" && goto :eof
call :findfile "%name%%%ext%" "%~2" &; if not %mode:~0,10%==getlfnentr && if not %mode%==getsfn && if not exist entry && set result= && set "message=%~f1 not found" && goto :eof ! if %mode:~0,10%==getlfnentr && if not exist lfnentry && set result= && set "message=lfnentry of %~f1 not found" && goto :eof ! if %mode%==getsfn && if not exist lfnentry && set result= && set "message=LFN %~f1 not found" && goto :eof
if %mode%==setmoddate && call :setsfndate "%~2" "%~3" &; goto :eof
if %mode%==setmodtime && call :setsfntime "%~2" "%~3" &; goto :eof
if %mode%==setmoddatetime && setlocal && set mode=setmoddate && call :setsfndate "%~2" "%~3" "%~4" &; if not exist result && endlocal && goto :eof ! endlocal && shift
if %mode%==setmoddatetime && if exist entry && setlocal && set mode=setmodtime && echo -n > (md)%mdbase%+1 && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && call :setsfntime "%~2" "%~3" "%~4" &; endlocal && set result=%result% && set "message=%message%" && goto :eof
if %mode%==setaccdate && call :setsfndate "%~2" "%~3" &; goto :eof
if %mode%==setcreadate && setlocal && call :setsfndate "%~2" "%~3" &; endlocal && set result=%result% && set "message=%message%" && goto :eof
if %mode%==setcreatime && call :setsfntime "%~2" "%~3" &; goto :eof
if %mode%==setcreadatetime && setlocal && set mode=setcreadate && call :setsfndate "%~2" "%~3" "%~4" &; if not exist result && endlocal && set "message=%message%" && goto :eof ! endlocal && shift
if %mode%==setcreadatetime && if exist entry && setlocal && set mode=setcreatime && echo -n > (md)%mdbase%+1 && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && call :setsfntime "%~2" "%~3" "%~4" &; endlocal && set result=%result% && set "message=%message%" && goto :eof
if %mode%==getntcasebyte && call :sfnntcasebyte "%~2" &; goto :eof
if %mode%==setntcasebyte && call :sfnntcasebyte "%~2" "%~3" &; goto :eof
if %mode%==geteapointer && call :geteapointerbytes "%~2" &; goto :eof
if not %mode%==getsfn if not %mode%==getsfnfile || goto :eof
if %mode%==getlfnentry &; if exist lfnentry && goto :eof ! set result= && goto :eof
if %mode%==issfnreadonly &; if not exist entry && set "message=%~1 not found" && goto :eof ! call :issfnattrib "%entry%" "%~2" && goto :eof
if %mode%==issfndir &; if not exist entry && set "message=%~1 not found" && goto :eof ! call :issfnattrib "%entry%" "%~2" && goto :eof
if not %mode%==getsfnentry || goto :eof
if not exist entry && set "message=%~1 not found" && set result= && goto :eof
if %mode%==setattrib && if not "%~2"=="" && if not /i "%~2"=="echo" && set /l setattr=%~2 && shift &; if not "%~3"=="" && if not /i "%~3"=="echo" && set /l setattr=%setattr%%%~3 && shift &; if not "%~4"=="" && if not /i "%~4"=="echo" && set /l setattr=%setattr%%%~4 && shift &; if not "%~5"=="" && if not /i "%~5"=="echo" && set /l setattr=%setattr%%%~5 && shift &; if not "%~6"=="" && if not /i "%~6"=="echo" && set /l setattr=%setattr%%%~6 && shift &; if not "%~7"=="" && if not /i "%~7"=="echo" && set /l setattr=%setattr%%%~7 && shift &; if not "%~8"=="" && if not /i "%~8"=="echo" && set /l setattr=%setattr%%%~8 && shift
call Fn.11 "%mode%" "attrib" && call :attributes "%setattr%" "%~2"
if not %mode%==getmoddate if not %mode%==getmodtime if not %mode%==getaccdate if not %mode%==getcreadate if not %mode%==getcreatime if not %mode:~0,11%==getdatetime if not %mode:~0,8%==datetime if not %mode%==attriballecho || call :datetime "%~2"
if exist hundreth && if %hundreth%<=99 && set creasec=0 && set /a hundreth=%hundreth% ! if %hundreth%<=199 && set creasec=1 && set /a hundreth=%hundreth%-100 ! if %hundreth%>=200 && set creasec=1 && set hundreth=0
if exist creatime && call :getsfntime "%creatime%" "%creasec%" "%hundreth%" "%~2" &; if not exist result && set creatime= ! set creatime=%result% && set result=
if exist creadate && call :getsfndate "%creadate%" "%~2" &; if not exist result && set creadate= ! set creadate=%result% && set result=
if exist accdate && call :getsfndate "%accdate%" "%~2" &; if not exist result && set accdate= ! set accdate=%result% && set result=
if exist modtime && call :getsfntime "%modtime%" "%~2" &; if not exist result && set modtime= ! set modtime=%result% && set result=
if exist moddate && call :getsfndate "%moddate%" "%~2" &; if not exist result && set moddate= ! set moddate=%result% && set result=
goto :eof
::
:getsfnchainclus
if not %check%==:getsfnchainloop &; if not "%~1"=="echo" if not "%~2"=="echo" || set echo=echo
if not %check%==:getsfnchainloop &; if not "%~1"=="" && if not "%~1"=="echo" && set /a max=2m/%clussize% &; checkrange 1:%max% calc %~1 && set /a getclus=%~1
if not %check%==:getsfnchainloop &; if exist getclus && set chainnum=1
if not %check%==:getsfnchainloop &; if %echo%==echo && echo %0$[0x00]"$[]%*$[0x00]"$[]getclus=%getclus% chainnum=%chainnum% clusnum=%clusnum% dataarea=%dataarea% bytedone=%bytedone%
if not %check%==:getsfnchainloop &; set check=:getsfnchainloop
if %echo%==echo && echo A getclus=%getclus% chainnum=%chainnum% clusnum=%clusnum%
if exist getclus && if not %chainnum%>=%getclus% && if %clusnum%>=2 && if %bytedone%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" "%echo%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% && set /a chainnum=%chainnum%+1 && goto :getsfnchainclus
if not exist getclus && if %clusnum%>=2 && if %bytedone%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" "%echo%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% && goto :getsfnchainclus
if %chainnum%==%getclus% && if %clusnum%>=2 && set /a chain=%clusnum% ! if %chainnum%==%getclus% && set /a chain=%lastclus% ! set chain=
if %echo%==echo && echo B chain=%chain% getclus=%getclus% chainnum=%chainnum% clusnum=%clusnum% lastclus=%lastclus% dataarea=%dataarea%
goto :eof
::
:getsfnlabel
setlocal
if "%~2"=="echo" && set echo=echo
if %echo%==echo && echo %0 mode=%mode% labeltyp=%labeltyp% root=%root% dataarea=%dataarea% && pager off
if %mode%==setlabelattrib && set "name=%name:~0,8%" && set "ext=.%name:~8,3%" && set SFN= && call :checksfn &; if %SFN%==N && endlocal && set volentry= && set "message=Label %name%%%ext% is not a valid SFN" && goto :eof ! call :catfile "%name%%%ext%"
if %mode%==setlabelattrib && if not exist ENTRY && endlocal && set volentry= && set "message=ENTRY of Label %name%%%ext% is not made" && goto :eof
if %echo%==echo && echo A mode=%mode% ENTRY=%ENTRY% && pause
if exist root && set /A skipbyte=%root%+0xB && set /A dirlen=%dataarea%-%root% ! set /A skipbyte=%dataarea%+0xB && set dirlen=%clussize% && set clusnum=2
set /A endbyte=%skipbyte%+%dirlen%
:getsfnlabelloop
if %echo%==echo && echo B labeltyp=%labeltyp% skipbyte=%skipbyte% dirlen=%dirlen% endbyte=%endbyte% clusnum=%clusnum%
if %echo%==echo && echo C skipbyte=%skipbyte% volnum=%volnum% clusnum=%clusnum%
if %mode%==getlabel && if not %labeltyp%==08 && raw cat --skip=%skipbyte% --locate=\x28 --length=1 %device%%0+%devsect% | set volentry= &; if exist volentry && set /A volentry=0x%volentry%-0xB
if %mode%==getlabel && if not %labeltyp%==28 && if not exist volentry && raw cat --skip=%skipbyte% --locate=\x08 --length=1 %device%%0+%devsect% | set volentry= &; if exist volentry && set /A volentry=0x%volentry%-0xB
if %mode%==setlabelattrib && raw cat --skip=%skipbyte% --locate=\x28 --length=1 %device%%0+%devsect% | set volentry= &; if exist volentry && set /A volentry=0x%volentry%-0xB &; raw cat --skip=%volentry% --locatei="%ENTRY%" --length=11 %device%%0+%devsect% > nul || set volentry=
if %mode%==setlabelattrib && if not exist volentry && raw cat --skip=%skipbyte% --locate=\x08 --length=1 %device%%0+%devsect% | set volentry= &; if exist volentry && set /A volentry=0x%volentry%-0xB &; raw cat --skip=%volentry% --locatei="%ENTRY%" --length=11 %device%%0+%devsect% > nul || set volentry=
if not exist volentry && set /A skipbyte=%skipbyte%+0x20 &; if not %skipbyte%>=%endbyte% && goto :getsfnlabelloop
if %mode%==setlabelattrib && if exist volentry && if not %success%==Y && echo -n > (md)%mdbase%+1 && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%volentry% > nul && set success=Y
if not exist volentry && if %clusnum%>=2 && if %skipbyte%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" "%~2" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; set skipbyte=%bytedone%+0xB && set /A endbyte=%bytedone%+%dirlen% && goto :getsfnlabelloop
if %echo%==echo && echo D volentry=%volentry% skipbyte=%skipbyte% clusnum=%clusnum% success=%success% && pause
if %mode%==getlabel && if exist volentry && raw cat --skip=%volentry% --length=11 %device%%0+%devsect% | set label=
if %mode%==setlabelattrib && if exist volentry && if %labeltyp%==28 && set entry=%volentry% && call :attributes "+a" "%echo%" &; if not exist result && set volentry=
if %mode%==setlabelattrib && if exist volentry && if %labeltyp%==08 && set entry=%volentry% && call :attributes "-a" "%echo%" &; if not exist result && set volentry=
if %echo%==echo && echo E volentry=%volentry% label=%label% && pause
endlocal && set "label=%label%" && set volentry=%volentry% && set "message=%message%"
goto :eof
::
#OLD#:trailingzeros
echo %0
setlocal && set *
if %~2==ext && set mode=ext && set "EXT=%~1" ! set mode=name && set "NAME=%~1"
#OLD#:trailingzerosloop
if %mode%==ext && call Fn.11 "%EXT:~1,1%" " " && set "EXT=.%EXT:~2%" &; call Fn.11 "%EXT:~1,1%" " " && goto :trailingzerosloop ! set "result=%EXT%"
if %mode%==name && call Fn.11 "%NAME:~0,1%" " " && set "NAME=%NAME:~1%" &; call Fn.11 "%NAME:~0,1%" " " && goto :trailingzerosloop ! set "result=%NAME%"
if not "%~3"=="echo" if not "%~4"=="echo" || echo %0: %* && set && pause
endlocal && set "result=%result%"
goto :eof
::
:geteapointerbytes
setlocal
if /i %filesys%==fat32 && endlocal && set result= && set "message=Function %mode% not available on FAT32" && goto :eof
if not %entry%>=%root% && endlocal && set result= && goto :eof
if "%~1"=="echo" && echo A root=%root% dataarea=%dataarea% entry=%entry% basemem=%basemem%
set /A address=%basemem%+0x14 &; read %address% ;; set /A result=%@retval%&0xffff
if "%~1"=="echo" && echo B result=%result%
if "%~1"=="echo" && raw cat --hex --skip=%entry% --length=32 %device%%0+%devsect% && pause
endlocal && set result=%result%
goto :eof
::
:sfnntcasebyte
#OLD#:getsfnntcasebyte
setlocal
if not /i %filesys%==fat32 && if not %entry%>=%root% && endlocal && set result= && goto :eof
if /i %filesys%==fat32 && if not %entry%>=%dataarea% && endlocal && set result= && goto :eof
if not "%~1"=="echo" if not "%~2"=="echo" || echo A root=%root% dataarea=%dataarea% entry=%entry% basemem=%basemem%
set /A address=%basemem%+0xC &; read %address% ;; set /A result=%@retval%&0xff
if not "%~1"=="echo" if not "%~2"=="echo" || echo B result=%result%
if not "%~1"=="echo" if not "%~2"=="echo" || raw cat --hex --skip=%entry% --length=32 %device%%0+%devsect% && pause
if %mode%==setntcasebyte &; if "%~2"=="echo" && set /A ntcase=%~1 > nul ! if not "%~1"=="" && set /A ntcase=%~1 > nul &; if %result%==%ntcase% && set result=1 && set ntcase= ! if not %ntcase%==0x0 && if not %ntcase%==0x8 && if not %ntcase%==0x10 && if not %ntcase%==0x18 && set ntcase= && set result= && set "message=Error: setntcasebyte 0x0, 0x8, 0x10, 0x18 only"
if not "%~1"=="echo" if not "%~2"=="echo" || echo C entry=%entry% ntcase=%ntcase%
if %mode%==setntcasebyte && if exist ntcase && set /A NTentry=%entry%+12 > nul &; raw write --offset=%NTentry% %device%%0+%devsect% \x%ntcase:~2% > nul && set result=1 ! set "message=Error: can not write attribute %ntcase% to address %NTentry%" && set result=
if %mode%==setntcasebyte && if "%~1"=="echo" && raw cat --hex --skip=%entry% --length=32 %device%%0+%devsect% && pause
if not "%~1"=="echo" if not "%~2"=="echo" || echo C mode=%mode% result=%result%
endlocal && set result=%result% && set "message=%message%"
goto :eof
::
:setsfntime
setlocal
if not /i %filesys%==fat32 && if not %entry%>=%root% && endlocal && set result= && goto :eof
if /i %filesys%==fat32 && if not %entry%>=%dataarea% && endlocal && set result= && goto :eof
call :datetime
if %mode%==setmodtime && if not exist moddate && endlocal && set result= && set "message=Moddate not found" && goto :eof
if %mode%==setcreatime && if not exist creadate && endlocal && set result= && set "message=Creadate not found" && goto :eof
set hundreth=
set time=%~1 &; call Fn.11 "%time%" ":" && set colon=Y
if %colon%==Y &; if "%time:~2,1%"==":" && if "%time:~5,1%"==":" && if not "%time:~7%"=="" && set hour=%time:~0,2% && set minute=%time:~3,2% && set second=%time:~6,2% ! endlocal && set result= && set "message=Format of Time must be hh[:]mm[:]ss and not %time%" && goto :eof
if %colon%==Y && if %mode%==setcreatime && if not "%time:~8%"=="" &; if "%time:~8,1%"==":" && set /a hundreth=%time:~9,2%
if %colon%==Y && call Fn.11 "%hour%%%minute%%%second%%%hundreth%" ":" && echo Format of Time must be hh[:]mm[:]ss and not %time% && endlocal && set result= && goto :eof
if not %colon%==Y &; if not "%time:~5,1%"=="" && set hour=%time:~0,2% && set minute=%time:~2,2% && set second=%time:~4,2% ! endlocal && set result= && set "message=Format of Time must be hh[:]mm[:]ss and not %time%" && goto :eof
if not %colon%==Y && if %mode%==setcreatime &; if not "%time:~7%"=="" && if "%time:~8%"=="" && if %mode%==setcreatime && set hundreth=%time:~6,2%
if %mode%==setcreatime && if not exist hundreth && set hundreth=0
if %hour%>=24 && set "message=Hour %hour% is not valid" ;; if not exist message && if %minute%>=60 && set "message=Minute %minute% is not valid" ;; if not exist message && if %second%>=60 && set "message=Second %second% is not valid" ;; if exist message && endlocal && set "message=%message%" && set result= && goto :eof
if "%~2"=="echo" && echo %0 mode=%mode% time=%time% colon=%colon% hour=%hour% minute=%minute% second=%second% hundreth=%hundreth%
set /A hour=%hour%<<11 ;; set /A minute=%minute%<<5 ;; if %mode%==setcreatime && calc %second% % 2 && set /A hundreth=%hundreth%+100 && set /A second=%second%-1 ;; set /A second=%second%/2
set /A time=%hour%+%minute%+%second% ;; set time=0000%time:~2% ;; set time=\x%time:~-2,2%\x%time:~-4,2%
if %mode%==setmodtime && if exist entry && set /A skip=%entry%+0x16
if %mode%==setcreatime && if exist entry && set /A skip=%entry%+0xE
if "%~2"=="echo" && echo A entry=%entry% skip=%skip% hour=%hour% minute=%minute% second=%second%  hundreth=%hundreth% time=%time%
if "%~2"=="echo" && raw cat --hex --skip=%entry% --length=32 %device%%0+%devsect% && echo
if not %skip%>=0x200 && endlocal && set "message=Something went wrong in function %mode% skip=%skip%" && set result= && goto :eof
if "%~2"=="echo" && echo B entry=%entry% ENTRY=%ENTRY% && pause
if exist skip && raw cat --skip=%entry% --locate="%ENTRY%" --length=11 %device%%0+%devsect% > nul &; raw write --offset=%skip% %device%%0+%devsect% %time% > nul && set result=1
if "%~2"=="echo" && raw cat --hex --skip=%entry% --length=32 %device%%0+%devsect% && echo
set skip= &; if %mode%==setcreatime && if %result%==1 && if exist hundreth && if exist entry && set /A skip=%entry%+0xD && set result= && set /A hundreth=%hundreth% &; set hundreth=00%hundreth:~2% &; set hundreth=\x%hundreth:~-2,2%
if exist skip && if not %skip%>=0x200 && endlocal && set "message=Something went wrong in function %mode% skip=%skip%" && set result= && goto :eof
if %mode%==setcreatime && if exist skip && raw cat --skip=%entry% --locate=%ENTRY% --length=11 %device%%0+%devsect% > nul && raw write --offset=%skip% %device%%0+%devsect% %hundreth% > nul && set result=1
if "%~2"=="echo" && raw cat --hex --skip=%entry% --length=32 %device%%0+%devsect% && pause
endlocal && set result=%result%
goto :eof
::
:setsfndate
setlocal && set result=
if not /i %filesys%==fat32 && if not %entry%>=%root% && endlocal && set result= && goto :eof
if /i %filesys%==fat32 && if not %entry%>=%dataarea% && endlocal && set result= && goto :eof
set date=%~1 &; call Fn.11 "%date%" "-" && set hyphen=Y
if %hyphen%==Y &; if "%date:~4,1%"=="-" && if "%date:~7,1%"=="-" && if "%date:~10%"=="" && set year=%date:~0,4% && set month=%date:~5,2% && set day=%date:~8,2% ! endlocal && set result= && set "message=Format of Date must be yyyy[-]mm[-]dd and not %date%" && goto :eof
if %hyphen%==Y && call Fn.11 "%year%%%month%%%day%" "-" && echo Format of Date must be yyyy[-]mm[-]dd and not %date% && endlocal && set result= && goto :eof
if not %hyphen%==Y &; if "%date:~8%"=="" && set /a year=%date:~0,4% && set /a month=%date:~4,2% && set /a day=%date:~6,2% ! endlocal && set result= && set "message=Format of Date must be yyyy[-]mm[-]dd and not %date%" && goto :eof
if not %year%<=1979 if not %year%>=2108 || set "message=Year %year% is not valid" ;; if not exist message && if not %month%<=0 if not %month%>=13 || set "message=Month %month% is not valid" ;; if not exist message && if not %day%<=0 if not %day%>=32 || set "message=Day %day% is not valid" ;; if not exist message && if %day%==31 && checkrange 2,4,6,9,11 calc %month% && set "message=Date %date% is not valid" ;; if not exist message && if %day%==30 && if %month%==02 && set "message=Date %date% is not valid" ;; if not exist message && if %day%==29 && if %month%==02 && calc %year% % 4 && set "message=Date %date% is not valid" ;; if not exist message && if %year%==2100 && if %month%==02 && if %day%==29 && set "message=Date %date% is not valid" ;; if exist message && endlocal && set "message=%message%" && set result= && goto :eof
if "%~2"=="echo" && echo %0 mode=%mode% date=%date% hyphen=%hyphen% year=%year% month=%month% day=%day%
set /A year=%year%-1980 ;; set /A year=%year%<<9 ;; set /A month=%month%<<5 ;; set /A date=%year%+%month%+%day% ;; set date=0000%date:~2% ;; set date=\x%date:~-2,2%\x%date:~-4,2%
if %mode%==setmoddate && if exist entry && set /A skip=%entry%+0x18
if %mode%==setaccdate && if exist entry && set /A skip=%entry%+0x12
if %mode%==setcreadate && if exist entry && set /A skip=%entry%+0x10
if "%~2"=="echo" && echo A entry=%entry% skip=%skip% year=%year% month=%month% day=%day% date=%date%
if "%~2"=="echo" && raw cat --hex --skip=%entry% --length=32 %device%%0+%devsect% && echo
if not %skip%>=0x200 && endlocal && set "message=Something went wrong in function %mode% skip=%skip%" && set result= && goto :eof
if "%~2"=="echo" && echo B entry=%entry% skip=%skip% ENTRY=%ENTRY% date=%date% && pause
if exist skip && raw cat --skip=%entry% --locate="%ENTRY%" --length=11 %device%%0+%devsect% > nul &; raw write --offset=%skip% %device%%0+%devsect% %date% > nul && set result=1
if "%~2"=="echo" && raw cat --hex --skip=%entry% --length=32 %device%%0+%devsect% && pause
if "%~2"=="echo" && echo C result=%result%
endlocal && set result=%result%
goto :eof
::
:lfnhash
if "%~1"=="" && set result= && goto :eof
setlocal && set * && set mdbase=%mdbase%
pause --wait=0 %~1 > (md)%mdbase%+1
raw cat --locate=\x0A --number=1 (md)%mdbase%+1 > nul &; set /a n=%?%
set /A address=%mdbase% * 0x200
set checksum=0 && set c=1
:readcharchecksumloop
read %address% > nul &; set /A char=%@retval%&0xff
if exist char && call set /A checksum=0x25*%checksum%+%char%&0xffff
set /A address=%address%+0x1 && set /a c=%c%+1 && set char=
if %c%<=%n% && goto :readcharchecksumloop
calc 314159269*%checksum% ;; set /A temp1=%@retval%
#SAME RESULT#calc 314159269*%checksum% &; set /A temp1=%@retval%&0xffffffff
#BAD?#set /A temp1=314159269*%checksum%&0xffffffff
if /i "%~2"=="echo" && echo 1 temp1=%temp1%
if %temp1%<=0 && set /A temp1=-1*%temp1%
if /i "%~2"=="echo" && echo 2 temp1=%temp1%
set /A temp2=1152921497*%temp1%&0xffffffffffffffff>>60
if /i "%~2"=="echo" && echo 3 temp2=%temp2%
set /A temp3=1000000007*%temp2%
if /i "%~2"=="echo" && echo 4 temp3=%temp3%
set /A temp=%temp1%-%temp3%
if /i "%~2"=="echo" && echo 5 temp=%temp%
set checksum=%temp%
if /i "%~2"=="echo" && echo checksum=%checksum%
set /A nibble0=%checksum%&0xf000>>12
if /i "%~2"=="echo" && echo nibble0=%nibble0%
set /A nibble1=%checksum%&0x0f00>>4
if /i "%~2"=="echo" && echo nibble1=%nibble1%
set /A nibble2=%checksum%&0x00f0<<4
if /i "%~2"=="echo" && echo nibble2=%nibble2%
set /A nibble3=%checksum%&0x000f<<12
if /i "%~2"=="echo" && echo nibble3=%nibble3%
set /A checksum=%nibble3%+%nibble2%+%nibble1%+%nibble0%
set checksum=0000%checksum:~2%
set checksum=%checksum:~-4,4%
if /i "%~2"=="echo" && echo Final checksum=%checksum%
endlocal && set lfnhash=%checksum%
goto :eof
::
:issfnattrib
if "%~1"=="" && goto :eof
setlocal
set entry=%~1 &; raw cat --hex --skip=%entry% --length=16 %device%%0+%devsect% | set hexentry=
cat --hex --skip=0 --length=16 (md)%mdbase%+1 | set mementry=
if not "%hexentry:~9,52%"=="%mementry:~9,52%" && endlocal && set issfndir= && set issfnreo= && echo Entry %entry% of %name%%%ext% not found" && goto :eof
#BAD#if not "%hexentry:~9,52%"=="%mementry:~9,52%" && endlocal && set issfndir= && set issfnreo && echo Entry %entry% of %name%%%ext% not found" && goto :eof
if "%~2"=="echo" && if "%hexentry:~9,52%"=="%mementry:~9,52%" && echo Entry %entry% is in memory ! endlocal && set issfndir= && set issfnreo= && echo Entry %entry% of %name%%%ext% not found" && goto :eof
#BAD#if "%~2"=="echo" && if "%hexentry:~9,52%"=="%mementry:~9,52%" && echo Entry %entry% is in memory ! endlocal && set issfndir= && set issfnreo && echo Entry %entry% of %name%%%ext% not found" && goto :eof
if %mode%==issfndir && call :attributes "%~2" &; if %d%==d && set issfndir=1 ! set issfndir=0
if %mode%==issfnreadonly && call :attributes "%~2" &; if %r%==r && set issfnreo=1 ! set issfnreo=
endlocal && set issfndir=%issfndir% && set issfnreo=%issfnreo%
goto :eof
::
:getsfntime
if "%~1"="" && set result= && goto :eof
setlocal && set *
set /A time=%~1 ;; set /a creasec=%~2 ;; set hundreth=%~3 &; if exist hundreth && if %hundreth%<=9 && set hundreth=0%hundreth%
set /a seconds=%time%&31 * 2 + %creasec% &; if %seconds%<=9 && set seconds=0%seconds%
set /a minutes=%time%>>5
set /a minutes=%minutes%&63 &; if %minutes%<=9 && set minutes=0%minutes%
set /a hours=%time%>>11 &; if %hours%<=9 && set hours=0%hours%
set result=%hours%%%minutes%%%seconds%%%hundreth%
endlocal && set result=%result%
goto :eof
::
:getsfndate
if "%~1"="" && set result= && goto :eof
setlocal && set *
set /A date=%~1 &; if %date%==0 && endlocal && set result= && goto :eof
set /a day=%date%&31 &; if %day%<=9 && set day=0%day%
set /a month=%date%>>5
set /a month=%month%&0xf &; if %month%<=9 && set month=0%month%
set /a year=%date%>>9 + 1980
set result=%year%%%month%%%day%
endlocal && set result=%result%
goto :eof
::
:attributes
if "%~2"=="echo" && echo %0 %*
setlocal
set /A address=%basemem%+0xB &; read %address% ;; set /A attrib=%@retval%&0xff
if not exist attrib && endlocal && set result= && set entry= && goto :eof
set /a bit0=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit1=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit2=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit3=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit4=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit5=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit6=%attrib%&1
if %bit0%==1 && set r=r ;; if %bit1%==1 && set h=h ;; if %bit2%==1 && set s=s ;; if %bit3%==1 && set v=v ;; if %bit4%==1 && set d=d ;; if %bit5%==1 && set a=a
if not %mode%==setattrib && if not %mode%==setlabelattrib && endlocal && set r=%r% && set s=%s% && set h=%h% && set v=%v% && set d=%d% && set a=%a% && goto :eof
if not /i %filesys%==fat32 && if not %entry%>=%root% && endlocal && set result= && set entry= && goto :eof
if /i %filesys%==fat32 && if not %entry%>=%dataarea% && endlocal && set result= && set entry= && goto :eof
call Fn.11 "%~1" "a" || call Fn.11 "%~1" "r" || call Fn.11 "%~1" "s" || call Fn.11 "%~1" "h" || endlocal && set result= && set "message=Attribute(s) %~1 not set" && goto :eof
call Fn.11 "%~1" "-+" && endlocal && set result= && set "message=Attribute(s) %~1 not set" && set entry= && goto :eof
call Fn.11 "%~1" "+-" && endlocal && set result= && set "message=Attribute(s) %~1 not set" && set entry= && goto :eof
if %mode%==setlabelattrib && if %v%==v && call Fn.11 "%~1" "-a" && set bit5=0 && set changed=Y
if %mode%==setlabelattrib && if %v%==v && call Fn.11 "%~1" "+a" && set bit5=1 && set changed=Y
if "%~2"=="echo" && echo mode=%mode% entry=%entry% ENTRY=%ENTRY% v=%v% labeltyp=%labeltyp% bit5=%bit5% && pause
if %mode%==setattrib && if %v%==v && if not %changed%==Y && echo -e $[0x07]%ENTRY% | set ENTRY= &; endlocal && set result= && set "message=Volume label %ENTRY% found: attributes 'A' 'R' 'S' 'H' can not be changed on "%device%%%path%%%name%%%ext%"" && set entry= && goto :eof
if not %v%==v && call Fn.11 "%~1" "+a" && set bit5=1 && set changed=Y
if not %v%==v && call Fn.11 "%~1" "-a" && set bit5=0 && set changed=Y
if not %v%==v && call Fn.11 "%~1" "+r" && set bit0=1 && set changed=Y
if not %v%==v && call Fn.11 "%~1" "-r" && set bit0=0 && set changed=Y
if not %v%==v && call Fn.11 "%~1" "+s" && set bit2=1 && set changed=Y
if not %v%==v && call Fn.11 "%~1" "-s" && set bit2=0 && set changed=Y
if not %v%==v && call Fn.11 "%~1" "+h" && set bit1=1 && set changed=Y
if not %v%==v && call Fn.11 "%~1" "-h" && set bit1=0 && set changed=Y
if %changed%==Y && set /a bit0=1*%bit0% ;; set /a bit1=2*%bit1% ;; set /a bit2=4*%bit2% ;; set /a bit3=8*%bit3% ;; set /a bit4=16*%bit4% ;; set /a bit5=32*%bit5% ;; set /a bit6=64*%bit6%
if %changed%==Y && set /A addattr2=%bit0%+%bit1%+%bit2%+%bit3%+%bit4%+%bit5%+%bit6%
if not %entry%>=0x200 && endlocal && set "message=Something went wrong in function %mode% entry=%entry%" && set entry= && set result= && goto :eof
if "%~2"=="echo" && echo %0 entry=%entry% ENTRY=%ENTRY% && pause
if %changed%==Y && set /A attentry=%entry%+0xB &; raw cat --skip=%entry% --locate=%ENTRY% --length=11 %device%%0+%devsect% > nul &; raw write --offset=%attentry% %device%%0+%devsect% \x%addattr2:~2% > nul && set result=1 ! set "message=Error: can not write attribute %addattr2% to address %attentry%"
if "%~2"=="echo" && echo Written attributes to address attentry=%attentry% Value: addattr2=%addattr2% result=%result% && pause
endlocal && set result=%result% && set addattr2=%addattr2% && set "message=%message%"
goto :eof
::
:dellfnfile
setlocal
if not "%~1"=="echo" if not "%~2"=="echo" || set echo=echo
set "lfn=%name%%%ext%" &; set "lfn=%lfn%" &; set /a lfnlen=%@retval% &; if %lfnlen%>=256 && endlocal && set result= && set "message=LFN above 255 chars" && goto :eof
#NOTOKE#set SFN= && call :checksfn "%name%%%ext%" &; if not %SFN%==N && endlocal && set "message=%name%%%ext% is SFN" && goto :eof
setlocal && set mode=getsfnpath &; call :findpath "%path%" "%echo%" &; endlocal && set sfnpath=%sfnpath% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set success=%success% && set chainlen=%chainlen% &; if not exist sfnpath && endlocal && set "message=sfnpath not found" && goto :eof
set chainlen=%clussize%
if %echo%==echo && echo 1 clusnum=%clusnum% clusnum0=%clusnum0% clusnum1=%clusnum1% bytedone=%bytedone% dirlen=%dirlen% success=%success% sfnpath=%sfnpath%
#BAD!#if "%path%"=="/" && set clusnum=1
if "%path%"=="/" && set clusnum=2
:dellfnfileloop
set mode=getlfnentry &; call :findsfn "%name%%%ext%" "file" "%echo%" &; if not exist lfnentry &; if not %written%==Y && endlocal && set "message=Directory-entry of %device%%%path%%%name%%%ext% not found" && goto :eof ! endlocal && set "dellfn=%dellfn%" && goto :eof
if %echo%==echo && echo 2 clusnum=%clusnum% clusnum0=%clusnum0% clusnum1=%clusnum1% bytedone=%bytedone% dirlen=%dirlen% success=%success% sfnpath=%sfnpath% sfnfile=%sfnfile% sfn=$[0xF0]%sfn%
if %echo%==echo && echo 3$[0x00]"$[]lfnentry=%lfnentry% lfnent01=%lfnent01% lfnbyteA=%lfnbyteA% lfnbyteB=%lfnbyteB%$[0x00]" && pause
set mode=dellfn
if exist lfnbyteA && if %lfnbyteA%<=%lfnentry% && set lfnbyteA=
if exist lfnbyteB && if %lfnbyteB%<=%lfnentry% && set lfnbyteB=
if exist lfnbyteA && set /a lfnnumA=%lfnent01%+0x20-%lfnbyteA%/0x20 ! set lfnnumA=0
if exist lfnbyteB && set /a lfnnumB=%clussize%/0x20 ! set lfnnumB=0
if %echo%==echo && echo 4 device=%device% sfnpath=%sfnpath% sfnfile=%sfnfile% lfnnumA=%lfnnumA% lfnnumB=%lfnnumB%
set "lfn=%name%%%ext%" &; set "lfn=%lfn%" &; set /a lfnlen=%@retval% && set c=0 && set w=0
if %lfnlen%<=13 && set n=1 ! if %lfnlen%<=26 && set n=2 ! if %lfnlen%<=39 && set n=3 ! if %lfnlen%<=52 && set n=4 ! if %lfnlen%<=65 && set n=5 ! if %lfnlen%<=78 && set n=6 ! if %lfnlen%<=91 && set n=7 ! if %lfnlen%<=104 && set n=8 ! if %lfnlen%<=117 && set n=9 ! if %lfnlen%<=130 && set n=10 ! if %lfnlen%<=143 && set n=11 ! if %lfnlen%<=156 && set n=12 ! if %lfnlen%<=169 && set n=13 ! if %lfnlen%<=182 && set n=14 ! if %lfnlen%<=195 && set n=15 ! if %lfnlen%<=208 && set n=16 ! if %lfnlen%<=221 && set n=17 ! if %lfnlen%<=234 && set n=18 ! if %lfnlen%<=247 && set n=19 ! if %lfnlen%<=255 && set n=20 ! endlocal && set "message=LFN is above 255 chars" && set lfnentry= && goto :eof
set /a lfnnumC=%n%-%lfnnumA%-%lfnnumB% &; set /a lfnnumD=%lfnnumC%+%lfnnumB%
if %echo%==echo && echo 5$[0x00]"$[]lfn=%lfn% lfnlen=%lfnlen% n=%n% lfnentry=%lfnentry% lfnent01=%lfnent01% lfnnumA=%lfnnumA% lfnnumB=%lfnnumB%$[0x00]"
if %echo%==echo && echo lfnentry=%lfnentry% lfnnumC=%lfnnumC% lfnbyteB=%lfnbyteB% lfnnumB=%lfnnumB% lfnbyteA=%lfnbyteA% lfnnumA=%lfnnumA% lfnent01=%lfnent01%
if %echo%==echo && if exist lfnentry && raw cat --hex --skip=%lfnentry% --length=96 %device%%0+%devsect%
if /i %filesys%==FAT32 && if not %lfnentry%>=%dataarea% && endlocal && set "message=Something went wrong in function %mode%" && set lfnentry= && goto :eof
if not /i %filesys%==FAT32 && if not %lfnentry%>=%root% && endlocal && set "message=Something went wrong in function %mode%" && set lfnentry= && goto :eof
if not %lfnentry%>=%bytedone% && endlocal && set "message=Something went wrong in function %mode%" && set lfnentry= && goto :eof
if %echo%==echo && echo 6 lfnentry=%lfnentry% c=%c% n=%n% lfnnumC=%lfnnumC% lfnnumB=%lfnnumB% lfnnumA=%lfnnumA%
if %echo%==echo && echo Delete$[0x00]"$[]%device%%%path%%%name%%%ext%?$[0x00]"
if %echo%==echo && set /p /u "delete= Y/N > " && echo
if %echo%==echo && if not %delete%==Y && endlocal && goto :eof
set delentry=%lfnentry% && set /A ordinal=%n%+0x40
:dellfnloop
if not %delentry%>=0x200 && endlocal && set "message=Something went wrong in function %mode% delentry=%delentry%" && set lfnentry= && goto :eof
if exist lfnnumB && if %lfnnumB%>=1 && if %c%==%lfnnumC% && set delentry=%lfnbyteB% && set /a lfnnumC=%lfnnumC%+%lfnnumB% && set lfnnumB=
if exist lfnnumA && if %lfnnumA%>=1 && if %c%==%lfnnumD% && set delentry=%lfnbyteA% && set /a lfnnumC=%lfnnumC%+%lfnnumA% && set lfnnumA=
if not %echo%==echo && if exist delentry && set written= && set /A attentry=%delentry%+0xB &; raw cat --skip=%delentry% --locate=\x%ordinal:~2% --length=1 %device%%0+%devsect% > nul && raw cat --skip=%attentry% --locate=\x0F --length=1 %device%%0+%devsect% > nul && set check=Y && raw write --offset=%delentry% %device%%0+%devsect% \xE5 > nul && set written=Y && set w=0 && set /a c=%c%+1 && if not %ordinal%<=%n% && set ordinal=%n%
if not %check%==Y && endlocal && set "message=Abort: bad delete-lfn! No E5 written to %delentry%, first byte not expected %ordinal%, or %attentry% not 0F; check or run ScandiskW/ CHECKDSK from inside Windows etcetera" && set lfnentry= && goto :eof
if %echo%==echo && if exist delentry && set written= &; raw write --offset=%delentry% %device%%0+%devsect% \xE5 > nul && echo E5 written to %delentry% && set written=Y && set w=0 && set /a c=%c%+1
if %echo%==echo && echo 6 delentry=%delentry% c=%c% n=%n% lfnbyteB=%lfnbyteB% lfnbyteA=%lfnbyteA% lfnent01=%lfnent01% lfnnumC=%lfnnumC% lfnnumB=%lfnnumB% lfnnumA=%lfnnumA%
if %echo%==echo && if exist delentry && raw cat --hex --skip=%delentry% --length=32 %device%%0+%devsect% && pause
if %w%<=7 &; if not %written%==Y && set /a w=%w%+1 && goto :dellfnloop ! if not %c%>=%n% && set /A delentry=%delentry%+0x20 && set /A ordinal=%ordinal%-1 && set check= && set attentry= && goto :dellfnloop
if %w%>=8 && endlocal && set lfnentry= && set "message=LFN Not fully deleted! Check lfnentry=%lfnentry% lfnnumB=%lfnnumB% lfnbyteB=%lfnbyteB% lfnnumA=%lfnnumA% lfnbyteA=%lfnbyteA% lfnent01=%lfnent01%" && goto :eof
set "dellfn=set mode=%mode% && set sfnpath=%sfnpath% && set sfnfile=%sfnfile% && set lfnentry=%lfnentry% && set n=%n% && set lfnbyteB=%lfnbyteB% && set lfnbyteA=%lfnbyteA% && set lfnent01=%lfnent01% && set chainlen=%chainlen%"
set delntry= && set lfnentry= && set n= && set lfnbyteB= && set lfnbyteA= && set lfnent01= && set chainlen=%chainlen%
goto :dellfnfileloop
#ORG#if %w%>=8 && endlocal && set lfnentry= && set "message=LFN Not fully deleted! Check lfnentry=%lfnentry% lfnnumB=%lfnnumB% lfnbyteB=%lfnbyteB% lfnnumA=%lfnnumA% lfnbyteA=%lfnbyteA% lfnent01=%lfnent01%" ! endlocal && set mode=%mode% && set sfnpath=%sfnpath% && set sfnfile=%sfnfile% && set lfnentry=%lfnentry% && set n=%n% && set lfnbyteB=%lfnbyteB% && set lfnbyteA=%lfnbyteA% && set lfnent01=%lfnent01% && set chainlen=%chainlen%
#ORG#goto :eof
::
:makelfnfile
setlocal
if not "%~2"=="echo" if not "%~3"=="echo" || set echo=echo
set /u sfnfile=%~1 &; set /u sfnname=%~n1 &; set /u sfnext=%~x1
if not exist sfnfile && endlocal && set "message=Parameter Short File Name not exist" && goto :eof
#NOTOKE#set SFN= && call :checksfn "%name%%%ext%" &; if not %SFN%==N && endlocal && set "message=%name%%%ext% is SFN" && goto :eof
set "lfntotal=%path%%%name%%%ext%" &; set "lfntotal=%lfntotal%" &; set /a totallen=%@retval% &; if not %totallen%>=261 && set lfntotal= && set totallen= ! endlocal && set "message=Length of PATH+LFN is %totallen%: above 260 chars" && set result= && goto :eof
if %mode:~0,7%==makelfn && set SFN= && call :checksfn "%sfnfile%" &; if %SFN%==N && endlocal && set "message=%sfnfile% is LFN" && goto :eof
setlocal && set mode=getsfnpath &; call :findpath "%path%" "%echo%" &; endlocal && set sfnpath=%sfnpath% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set success=%success% && set chainlen=%chainlen% &; if not exist sfnpath && endlocal && set result= && set "message=sfnpath not found" && goto :eof
set chainlen=%clussize%
#BAD!#if "%path%"=="/" && set clusnum=1
if "%path%"=="/" && set clusnum=2
if %echo%==echo && echo 0$[0x00]"$[]clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% sfnentry=%sfnentry% entry=%entry% ENTRY=%ENTRY% success=%success% name=%name% ext=%ext%$[0x00]"
if %echo%==echo && echo device=%device% sfnpath=%sfnpath% sfnfile=%sfnfile%
if %echo%==echo && echo 1 clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% success=%success% checksum=%checksum% && pause
## NEW: result=1 if LFN with input-SFN exists, otherwise message#
setlocal && set mode=checklfn && set entry= && set sfnorg=%sfnfile% &; call :findsfn "%name%%%ext%" "file" "%echo%" &; endlocal && set sfnfile=%sfnfile% && set lfnentry=%lfnentry% && set sfnorg=%sfnorg% &; if exist sfnfile && if /i %sfnfile%==%sfnorg% && endlocal && set lfnentry=%lfnentry% && set result=1 && goto :eof ! if exist sfnfile && endlocal && set lfnentry=%lfnentry% && set "message=LFN %device%%%path%%%name%%%ext% exists already, with SFN %sfnfile%" && set result= && goto :eof
#DEBUG#setlocal && set mode=checklfn && set entry= && set sfnorg=%sfnfile% &; call :findsfn "%name%%%ext%" "file" "%echo%" &; endlocal && set sfnfile=%sfnfile% && set lfnentry=%lfnentry% && set sfnorg=%sfnorg% &; echo sfnorg=%sfnorg% sfnfile=%sfnfile% &; if exist sfnfile && if /i %sfnfile%==%sfnorg% && endlocal && set lfnentry=%lfnentry% && set result=1 && goto :eof ! if exist sfnfile && endlocal && set lfnentry=%lfnentry% && set "message=LFN %device%%%path%%%name%%%ext% exists already, with SFN %sfnfile%" && set result= && goto :eof
setlocal && set mode=getsfnentry && set name=%sfnname% && set ext=%sfnext% && set path=%sfnpath% &; call :findfile %name%%%ext% "%echo%" &; endlocal && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set sfnentry=%entry% && set ENTRY=%ENTRY% && set success=%success% && set dirclus0=%dirclus0% &; if not exist sfnentry && endlocal && set "message=sfnentry not found" && set lfnentry= && goto :eof
if %echo%==echo && echo 2$[0x00]"$[]clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% sfnentry=%sfnentry% entry=%entry% ENTRY=%ENTRY% success=%success% name=%name% ext=%ext%$[0x00]"
if not exist clusnum && endlocal && set "message=clusnum not found" && set lfnentry= && goto :eof ;; if not exist bytedone && endlocal && set "message=bytedone not found" && set lfnentry= && goto :eof ;; if not exist sfnentry && endlocal && set "message=sfnentry not found" && set lfnentry= && goto :eof
if %echo%==echo && echo 3$[0x00]"$[]clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% sfnentry=%sfnentry% entry=%entry% ENTRY=%ENTRY% success=%success% name=%name% ext=%ext%$[0x00]"
if %echo%==echo && raw cat --hex --skip=%sfnentry% --length=32 %device%%0+%devsect%
if %echo%==echo && echo 4$[0x00]"$[]clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% sfnentry=%sfnentry% entry=%entry% ENTRY=%ENTRY% success=%success% name=%name% ext=%ext%$[0x00]"
set "lfn=%name%%%ext%" &; set "lfn=%lfn%" &; set /a lfnlen=%@retval% &; if %lfnlen%>=256 && endlocal && set "message=LFN above 255 chars" && set result= && set lfnentry= && goto :eof
if %lfnlen%<=13 && set n=1 ! if %lfnlen%<=26 && set n=2 ! if %lfnlen%<=39 && set n=3 ! if %lfnlen%<=52 && set n=4 ! if %lfnlen%<=65 && set n=5 ! if %lfnlen%<=78 && set n=6 ! if %lfnlen%<=91 && set n=7 ! if %lfnlen%<=104 && set n=8 ! if %lfnlen%<=117 && set n=9 ! if %lfnlen%<=130 && set n=10 ! if %lfnlen%<=143 && set n=11 ! if %lfnlen%<=156 && set n=12 ! if %lfnlen%<=169 && set n=13 ! if %lfnlen%<=182 && set n=14 ! if %lfnlen%<=195 && set n=15 ! if %lfnlen%<=208 && set n=16 ! if %lfnlen%<=221 && set n=17 ! if %lfnlen%<=234 && set n=18 ! if %lfnlen%<=247 && set n=19 ! if %lfnlen%<=255 && set n=20 ! endlocal && set "message=LFN is above 255 chars" && set lfnentry= && goto :eof
set /A c=%n% && set i=1 && set l=0 && set "lfnorg=%lfn%" && set /a s=%n%-1
if %echo%==echo && echo $[0x00]"$[]lfnorg=%lfnorg% lfn=%lfn% lfnlen=%lfnlen% n=%n% c=%c% i=%i% l=%l% s=%s%$[0x00]"
if not exist bytedone && endlocal && set result= && set "message=bytedone not exist" && set lfnentry= && goto :eof
if not /i %filesys%==fat32 && if not %bytedone%>=%root% && endlocal && set result= && set "message=bytedone=%bytedone% not valid" && set lfnentry= && goto :eof
if /i %filesys%==fat32 && if not %bytedone%>=%dataarea% && endlocal && set result= && set "message=bytedone=%bytedone% not valid" && set lfnentry= && goto :eof
if %echo%==echo && echo lastclus=%lastclus% clusnum=%clusnum% dirclus0=%dirclus0% lfnentry=%lfnentry% endentry=%endentry% bytedone=%bytedone% dirlen=%dirlen% n=%n% numentry=%numentry%
if %bytedone%>=%dataarea% && set lfnentry= && set lastclus=%clusnum% &; setlocal && call :freeentry "%clusnum%" "%bytedone%" "%dirlen%" "%echo%" &; if exist result && if not %n%>=%numentry% && endlocal && set lfnentry=%result% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set endentry=%endentry% && set clusnum=%clusnum% && set numentry=%numentry% && set ASCII=%ASCII% ! if not exist message && endlocal && set ASCII=%ASCII% ! endlocal && endlocal && set "message=%message%" && goto :eof
if %echo%==echo && echo A lastclus=%lastclus% clusnum=%clusnum% lfnentry=%lfnentry% endentry=%endentry% bytedone=%bytedone% dirlen=%dirlen% n=%n% numentry=%numentry% && pause
if %bytedone%>=%dataarea% && if not exist lfnentry &; setlocal && set clusnum=%dirclus0% && set /a n=%n%+1 &; call :delentry "%clusnum%" "%bytedone%" "%dirlen%" "%n%" "%echo%" &; if exist result && endlocal && set lfnentry=%result% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set endentry=%endentry% && set numentry=%numentry% && set ASCII=%ASCII% ! endlocal
if not %bytedone%>=%dataarea% && if not /i %filesys:~0,3%==fat32 && set lfnentry= && set lastclus=%clusnum% &; setlocal && set /a n=%n%+1 &; call :delentry "%clusnum%" "%bytedone%" "%dirlen%" "%n%" "%echo%" &; if exist result && endlocal && set lfnentry=%result% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set endentry=%endentry% && set numentry=%numentry% && set ASCII=%ASCII% ! endlocal && set clusnum=%clusnum% && set lastclus=%lastclus% && set bytedone=%bytedone% && set dirlen=%dirlen%
if %echo%==echo && echo B lastclus=%lastclus% clusnum=%clusnum% lfnentry=%lfnentry% endentry=%endentry% bytedone=%bytedone% dirlen=%dirlen% n=%n% numentry=%numentry% && pause
if not exist lfnentry && set clusnum=%lastclus% &; setlocal && call :freeentry "%clusnum%" "%bytedone%" "%dirlen%" "%echo%" &; if exist result && endlocal && set lfnentry=%result% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set endentry=%endentry% && set clusnum=%clusnum% && set lastclus=%lastclus% && set numentry=%numentry% && set ASCII=%ASCII% ! if not exist message && endlocal && set ASCII=%ASCII% ! endlocal && endlocal && set "message=%message%" && goto :eof
if %echo%==echo && echo C lastclus=%lastclus% clusnum=%clusnum% lfnentry=%lfnentry% endentry=%endentry% bytedone=%bytedone% dirlen=%dirlen% n=%n% numentry=%numentry% && pause
if not %n%<=%numentry% && if %bytedone%>=%dataarea% && setlocal && call :lastcluster "%echo%" &; if exist message && endlocal && endlocal && set result= && set "message=Length of cluster-chain above 2MB" && set lfnentry= && goto :eof ! if not exist result && endlocal && endlocal && set result= && set "message=Abort: free clusters at FAT-end not found" && set lfnentry= && goto :eof ! endlocal
if %echo%==echo && echo D lastclus=%lastclus% clusnum=%clusnum% lfnentry=%lfnentry% endentry=%endentry% bytedone=%bytedone% dirlen=%dirlen% n=%n% numentry=%numentry% && pause
if not exist lfnentry && if %bytedone%>=%dataarea% && set clusnum=%lastclus% && call :adddircluster "%echo%" &; if %clusnum%>=2 && set lfnentry=%bytedone% && set /A endentry=%bytedone%+%dirlen%-0x20 && set lastclus=%clusnum%
if %echo%==echo && echo E lastclus=%lastclus% clusnum=%clusnum% lfnentry=%lfnentry% endentry=%endentry% bytedone=%bytedone% dirlen=%dirlen%
if %clusnum%==0 && endlocal && set result= && set "message=Abort: free cluster not found" && set lfnentry= && goto :eof
if not exist lfnentry && if not %bytedone%>=%dataarea% && endlocal && set result= && set "message=Root is FULL" && set lfnentry= && goto :eof
#bad?#if not exist lfnentry && if not %bytedone%>=%dataarea% && endlocal && endlocal && set result= && set "message=Root is FULL" && set lfnentry= && goto :eof
if not exist lfnentry && endlocal && set result= && set "message=lfnentry not found" && goto :eof
set lfnbyteC=%lfnentry% && set lfnbyte0=%lfnentry%
if %echo%==echo && echo G sfnentry=%sfnentry% lfnentry=%lfnentry% endentry=%endentry% bytedone=%bytedone% clusnum=%clusnum% lastclus=%lastclus% root=%root% dataarea=%dataarea% checksum=%checksum%
setlocal && set name=%sfnname% && set ext=%sfnext% &; call :sfnchecksum &; endlocal && set checksum=%checksum%
if not %lfnentry%>=%bytedone% && endlocal && set "message=Something went wrong in function %mode% lfnentry=%lfnentry%" && set lfnentry= && goto :eof
if %echo%==echo && echo H checksum=%checksum%
if %echo%==echo && echo Make$[0x00]"$[]%device%%%path%%%name%%%ext% for %sfnfile%$[0x00]"$[]?
if %echo%==echo && set /p /u "make= Y/N > " && echo
if %echo%==echo && if not %make%==Y && endlocal && goto :eof
:makelfnloop
setlocal && set /a s=13*%s% &; call set "lfn=%^lfnorg:~%s%,13%" &; endlocal && set "lfn=%lfn%"
setlocal && set i=1 && set l=0 && call :loopfindLFN &; endlocal && set "LFN=%LFNA%%%LFNB%%%LFNC%"
if not %lfnentry%<=%endentry% && set lfnentry= && if %bytedone%>=%dataarea% && set clusnum=%lastclus% && call :adddircluster "%echo%" &; if %clusnum%>=2 && set lfnentry=%bytedone% && set /A endentry=%bytedone%+%dirlen%-0x20 && set lastclus=%clusnum% ! endlocal && set "message=Abort: no free cluster added" && set result= && set lfnentry= && goto :eof
if not exist lfnentry && endlocal && set result= && set "message=Abort: new lfnentry not found" && goto :eof
if %echo%==echo && echo I$[0x00]"$[]lfnentry=%lfnentry% c=%c% s=%s% lfn=%lfn% LFN=%LFN%$[0x00]"
set writelfn=1 && set success=
:writelfnloop
if not %lfnentry%>=0x200 && endlocal && set "message=Something went wrong in function %mode% lfnentry=%lfnentry%" && set lfnentry= && goto :eof
cat --skip=%lfnentry% --locate=\x%ASCII% --length=1 %device%%0+%devsect% > nul && set check=Y && raw write --offset=%lfnentry% %device%%0+%devsect% %LFN% > nul && set success=Y
if not %check%==Y && endlocal && set "message=Abort: bad lfn-write! Not written to %lfnentry%, first byte not expected %ASCII%; check lfnbyteA=%lfnentryA% lfnbyteB=%lfnentryB% lfnbyteC=%lfnentryC% lfnent01=%lfnent01% or run ScandiskW/ CHECKDSK from inside Windows etcetera" && set lfnentry= && goto :eof
if not %success%==Y && if not %writelfn%<=7 && endlocal && set "message=Abort: bad lfn-write! Written %c% from %n% entries, latest to %lfnentry% Check from, and delete manually (write E5 to first byte) offset on disk/ partition: lfnbyteA=%lfnentryA% lfnbyteB=%lfnentryB% lfnbyteC=%lfnentryC% lfnent01=%lfnent01% or run ScandiskW/ CHECKDSK from inside Windows etcetera" && set lfnentry= && goto :eof
if not %success%==Y && if %writelfn%<=7 && set /a writelfn=%writelfn%+1 &; echo write %writelfn% lfn%c% && set check= && goto :writelfnloop
if %success%==Y && if not %lfnentry%==%lfnbyteC% &; if not exist lfnbyteB && set lfnbyteB=%lfnentry% ! set lfnbyteA=%lfnentry%
if %success%==Y && set /A lfnentry=%lfnentry%+0x20 &; set lfnbyteC=%lfnentry%
if %success%==Y && set success= && set check= && set writelfn=1 && set /A c=%c%-1 && set /a s=%s%-1 &; if %c%>=1 && goto makelfnloop
set entry=%lfnentry% && set lfnentry=%lfnbyte0%
if not %entry%<=%endentry% && if %bytedone%>=%dataarea% && set clusnum=%lastclus% && call :adddircluster "%echo%" &; if %clusnum%>=2 && set entry=%bytedone% ! endlocal && set "message=Abort no free cluster added" && set result= && set lfnentry= && goto :eof
if exist sfnentry && if exist entry && if not %sfnentry%==%entry% && echo -n > (md)%mdbase%+1
set writelfn= && set writesfn=1 && set success= && set check=
:writesfnfileloop1
if not %sfnentry%>=0x200 && endlocal && set "message=Something went wrong in function %mode% sfnentry=%sfnentry%" && set lfnentry= && goto :eof
if exist sfnentry && if exist entry && if not %sfnentry%==%entry% && raw cat --skip=%sfnentry% --locate=%ENTRY% --length=11 %device%%0+%devsect% > nul && set check=Y && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=0x1 count=0x20 skip=%sfnentry% seek=0x0 > nul && set success=Y
if not %check%==Y && endlocal && set "message=Abort: bad sfn-write! Not written to %sfnentry%, %ENTRY% not found, check or run ScandiskW/ CHECKDSK from inside Windows etcetera" && set lfnentry= && goto :eof
if exist sfnentry && if exist entry && if not %sfnentry%==%entry% && if not %success%==Y && if not %writesfn%<=7 && endlocal && set "message=Abort: bad sfn2mem-copy! Written %c% from %n% entries, latest to %lfnentry% Check from, and delete manually (write E5 to first byte) offset on disk/ partition: lfnbyteA=%lfnentryA% lfnbyteB=%lfnentryB% lfnbyteC=%lfnentryC% lfnent01=%lfnent01% or run ScandiskW/ CHECKDSK from inside Windows etcetera" && set lfnentry= && goto :eof
if exist sfnentry && if exist entry && if not %sfnentry%==%entry% && if not %success%==Y && if %writesfn%<=7 && set /a writesfn=%writesfn%+1 &; echo copy %writesfn% sfn2mem && set check= && goto :writesfnfileloop1
set writelfn= && set writesfn=1 && set success= && set check=
:writesfnfileloop2
if not %sfnentry%>=0x200 && endlocal && set "message=Something went wrong in function %mode% sfnentry=%sfnentry%" && set lfnentry= && goto :eof
if exist sfnentry && if exist entry && if not %sfnentry%==%entry% && raw cat --skip=%entry% --locate=\x%ASCII% --length=1 %device%%0+%devsect% > nul && set check=Y && raw dd if=(md)%mdbase%+1 of=%device%%0+%devsect% bs=0x1 count=0x20 skip=0x0 seek=%entry% > nul && set success=Y
if not %check%==Y && endlocal && set "message=Abort: bad sfn-write! %ENTRY% not written to %entry%, expected first byte %ASCII% not found, check or run ScandiskW/ CHECKDSK from inside Windows etcetera" && set lfnentry= && goto :eof
if exist sfnentry && if exist entry && if not %sfnentry%==%entry% && if not %success%==Y && if not %writesfn%<=7 && endlocal && set "message=Abort: bad mem2sfn2-copy! Written %c% from %n% entries, latest to %lfnentry% Check from, and delete manually (write E5 to first byte) offset on disk/ partition: lfnbyteA=%lfnentryA% lfnbyteB=%lfnentryB% lfnbyteC=%lfnentryC% lfnent01=%lfnent01% or run ScandiskW/ CHECKDSK from inside Windows etcetera" && set lfnentry= && goto :eof
if exist sfnentry && if exist entry && if not %sfnentry%==%entry% && if not %success%==Y && if %writesfn%<=7 && set /a writesfn=%writesfn%+1 &; echo copy %writesfn% sfn2disk && set check= && goto :writesfnfileloop2
set writesfn= && set delsfn=1 && set success= && set check=
:delsfnfileloop
if not %sfnentry%>=0x200 && endlocal && set "message=Something went wrong in function %mode% sfnentry=%sfnentry%" && set lfnentry= && goto :eof
if exist sfnentry && if not %sfnentry%==%entry% && raw cat --skip=%sfnentry% --locate=%ENTRY% --length=11 %device%%0+%devsect% > nul && set check=Y && raw write --offset=%sfnentry% %device%%0+%devsect% \xE5 > nul && set success=Y
if not %check%==Y && endlocal && set "message=Abort: bad sfn-del! %ENTRY% not found on %entry%, check or run ScandiskW/ CHECKDSK from inside Windows etcetera" && set lfnentry= && goto :eof
if exist sfnentry && if not %sfnentry%==%entry% && if not %success%==Y && if not %delsfn%<=7 && endlocal && set "message=Abort: original sfn-entry not deleted! Check from, and delete manually (write E5 to first byte) offset on disk/ partition: %sfnentry% or run ScandiskW/ CHECKDSK from inside Windows etcetera" && set lfnentry= && goto :eof
if exist sfnentry && if not %sfnentry%==%entry% && if not %success%==Y && if %delsfn%<=7 && set /a delsfn=%delsfn%+1 &; echo write %delsfn% E5 && set check= && goto :delsfnfileloop
if %echo%==echo && echo && raw cat --hex --skip=%sfnentry% --length=32 %device%%0+%devsect% && echo
if %echo%==echo && raw cat --hex --skip=%lfnentry% --length=32 %device%%0+%devsect% && echo
if %echo%==echo && if exist lfnbyteB && raw cat --hex --skip=%lfnbyteB% --length=32 %device%%0+%devsect% && echo
if %echo%==echo && if exist lfnbyteA && raw cat --hex --skip=%lfnbyteA% --length=32 %device%%0+%devsect% && echo
if %echo%==echo && raw cat --hex --skip=%entry% --length=32 %device%%0+%devsect% && echo
if not exist entry && endlocal ! endlocal && set mode=%mode% && set sfnpath=%sfnpath% && set sfnfile=%sfnfile% && set lfnentry=%lfnentry% && set n=%n% && set lfnbyteB=%lfnbyteB% && set lfnbyteA=%lfnbyteA% && set lfnent01=%lfnent01% && set chainlen=%chainlen%
goto :eof
::
:lastcluster
setlocal && set result=
if /i %filesys%==fat12 && set /A offset=%numclus% / 2 + %numclus% + %fat1% - 2 && set clus2len=6 ! if /i %filesys%==fat16 && set /A offset=%numclus% * 2 + %fat1% && set clus2len=4 ! if /i %filesys%==fat32 && set /A offset=%numclus% * 4 + %fat1% && set clus2len=8
if "%~1"=="echo" && echo %0 filesys=%filesys% numclus=%numclus% fat1=%fat1% offset=%offset% fat2=%fat2% root=%root% dataarea=%dataarea% clus2len=%clus2len%
raw cat --skip=%offset% --locate=\x00 --length=%clus2len% %device%%0+%devsect% > nul &; set /a result=%@retval% &; if %result%==%clus2len% && set result=Y ! set result=
#BAD#raw cat --skip=%fatend% --locate=\x00 --length=%clus2len% %device%%0+%devsect% > nul &; set /a result=%@retval% &; if %result%==%clus2len% && set result=Y
if %result%==Y && setlocal && set /a chainmax=%chainlen%+%clussize%+%clussize% &; if %chainmax%>=2m && echo chainmax=%chainmax% && endlocal && set result= && set "message=Length of cluster-chain above 2MB" ! endlocal
#BAD#if %result%==Y && setlocal && set /a chainmax=chainlen+%clussize%+%clussize% &; if %chainmax%>=2m && echo chainmax=%chainmax% && endlocal && set result= && set "message=Length of cluster-chain above 2MB" ! endlocal
if "%~1"=="echo" && echo result=%result%
#TEST#raw cat --hex --skip=%offset% --length=32 %device%%0+%devsect% && pause offset=%offset% result=%result%
if "%~1"=="echo" && raw cat --hex --skip=%offset% --length=32 %device%%0+%devsect% && pause
endlocal && set result=%result% && set "message=%message%"
goto :eof
::
:freeentry
setlocal
if "%~4"=="echo" && echo %0: %*
set clusnum=%~1 &; set bytedone=%~2 &; set /A endentry=%bytedone%+%~3-0x20 && set numentry=0 && set found=
set ASCII=00
:freeentryloop
if "%~4"=="echo" && echo 0 clusnum=%clusnum% skipbyte=%skipbyte% endentry=%endentry% dataarea=%dataarea% bytedone=%bytedone% dirlen=%dirlen% && pause
raw cat --skip=%endentry% --locate=\x%ASCII% --length=1 %device%%0+%devsect% > nul && set found=Y
if "%~4"=="echo" && echo 1 found=%found% clusnum=%clusnum% skipbyte=%skipbyte% endentry=%endentry% dataarea=%dataarea% bytedone=%bytedone% dirlen=%dirlen% && pause
if not %found%==Y && if exist clusnum && if not %clusnum%==0 && if %bytedone%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" "%~4" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; set skipbyte=%bytedone% && set /A endentry=%bytedone%+%dirlen%-0x20 && set lastclus=%clusnum% && goto :freeentryloop
if "%~4"=="echo" && echo 2 clusnum=%clusnum% skipbyte=%skipbyte% endentry=%endentry% && pause
if %clusnum%==0 && endlocal && set result= && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set numentry=%numentry% && set lastclus=%lastclus% && set endentry=%endentry% && set ASCII=%ASCII% && goto :eof
if %found%==Y && set found= && set /A search=%dirlen%-0x10 && set offset=%bytedone%
:get16ASCIIloop
if "%~4"=="echo" && echo 3 offset=%offset% skipbyte=%skipbyte% search=%search% endentry=%endentry% dataarea=%dataarea% bytedone=%bytedone% dirlen=%dirlen% clusnum=%clusnum% && pause
if exist search && set skipbyte= &; raw cat --skip=%offset% --locate=\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII%\x%ASCII% --length=%search% --number=1 %device%%0+%devsect% | set skipbyte= &; if exist skipbyte && if 0x%skipbyte%>=%offset% && set /A skipbyte=0x%skipbyte% && set found=Y &; calc 0x%skipbyte:~-2,2% % 0x20 &; set /A skipbyte=%skipbyte%-%@retval%+0x20 &; if not %skipbyte%<=%endentry% && set found= && set skipbyte=
if %found%==Y && if exist skipbyte && if %skipbyte%>=%bytedone% && raw cat --skip=%skipbyte% --locate=\x%ASCII% --length=1 %device%%0+%devsect% > nul || set found= && set /A offset=%skipbyte%+0x20 && set /A search=%endentry%-%skipbyte%+0x10-0x20 && set skipbyte= && goto :get16ASCIIloop
set search= && if not %found%==Y && raw cat --skip=%endentry% --locate=\x%ASCII% --length=1 %device%%0+%devsect% > nul && set skipbyte=%endentry% && set found=Y
if "%~4"=="echo" && echo 4 found=%founD% offset=%offset% skipbyte=%skipbyte% search=%search% endentry=%endentry% clusnum=%clusnum% && pause
:getfreeentryloop
if exist skipbyte && if %found%==Y && if %skipbyte%<=%endentry% && set /a numentry=%endentry%+0x20-%skipbyte%/32
if "%~4"=="echo" && if exist skipbyte && echo 5 numentry=%numentry% offset=%offset% skipbyte=%skipbyte% search=%search% endentry=%endentry% clusnum=%clusnum% lastclus=%lastclus%
if exist skipbyte && raw cat --skip=%skipbyte% --locate=\x%ASCII% --length=1 %device%%0+%devsect% > nul || set skipbyte= && set clusnum=0 && set "message=Bad :freentry"
if "%~4"=="echo" && if exist skipbyte && echo 6 numentry=%numentry% offset=%offset% skipbyte=%skipbyte% search=%search% endentry=%endentry% clusnum=%clusnum% lastclus=%lastclus%
if "%~4"=="echo" && if exist skipbyte && raw cat --hex --skip=%skipbyte% --length=0x40 %device%%0+%devsect%
if "%~4"=="echo" && echo Leaving %0 && pause
endlocal && set result=%skipbyte% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set numentry=%numentry% && set lastclus=%lastclus% && set endentry=%endentry% && set "message=%message%" && set ASCII=%ASCII%
goto :eof
::
:delentry
if "%~4"=="echo" && echo 0 %0 %* && pause
if "%~5"=="echo" && echo 0 %0 %* && pause
if "%~4"=="echo" && echo %0 mode=%mode% numentry=%numentry% clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% root=%root% dataarea=%dataarea%
if "%~5"=="echo" && echo %0 mode=%mode% numentry=%numentry% clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% root=%root% dataarea=%dataarea%
setlocal
set numentry=0 && set found= && set E5=0 && set ASCII=E5 && if not %clusnum%>=2 && set clusnum=2
if not "%~4"=="" && checkrange 2:21 calc %~4 && set delcon=%~4 && shift
if %bytedone%>=%dataarea% && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% ! set /A bytedone=%root% && set /A dirlen=%dataarea%-%root%
set /A endentry=%bytedone%+%dirlen%-0x20 && set offset=%bytedone% && set /A search=%dirlen%-0x10
if "%~4"=="echo" && echo 1 E5=%E5% delcon=%delcon% offset=%offset% endentry=%endentry% dirlen=%dirlen% search=%search% && pause
:delentryloop
if "%~4"=="echo" && echo 1A E5=%E5% delcon=%delcon% clusnum=%clusnum% offset=%offset% skipbyte=%skipbyte% endentry=%endentry% search=%search% && pause
raw cat --skip=%offset% --locate=\x%ASCII% --length=%search% --number=1 %device%%0+%devsect% | set skipbyte= &; if exist skipbyte && if 0x%skipbyte%>=%offset% && set /A skipbyte=0x%skipbyte% &; calc 0x%skipbyte:~-2,2% % 0x20 &; set /A skipbyte=%skipbyte%-%@retval%+0x20 &; raw cat --skip=%skipbyte% --locate=\x00 --length=1 %device%%0+%devsect% > nul |; if %skipbyte%<=%endentry% && set offset=%skipbyte% && set /A search=%endentry%-%skipbyte%+0x10 && set skipbyte= && goto :delentryloop ! set skipbyte=
if not %skipbyte%<=%endentry% && set skipbyte=
if not exist skipbyte && raw cat --skip=%endentry% --locate=\x00 --length=1 %device%%0+%devsect% > nul && set clusnum=0
if "%~4"=="echo" && echo 2 clusnum=%clusnum% E5=%E5% delcon=%delcon% offset=%offset% skipbyte=%skipbyte% endentry=%endentry% search=%search% && pause
if not exist skipbyte && if exist clusnum && if not %clusnum%==0 && if %bytedone%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" "%~4" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set dirlen=%clussize% &; set /A endentry=%bytedone%+%dirlen%-0x20 && set offset=%bytedone% && set /A search=%dirlen%-0x10 && set lastclus=%clusnum% && set E5=0 && goto :delentryloop
if "%~4"=="echo" && echo 3 E5=%E5% delcon=%delcon% root=%root% dataarea=%dataarea% skipbyte=%skipbyte% endentry=%endentry% search=%search% && pause
if "%~4"=="echo" && if exist skipbyte && raw cat --hex --skip=%skipbyte% --length=32 %device%%0+%devsect%
if "%~4"=="echo" && echo 3A numentry=%numentry% E5=%E5% delcon=%delcon% root=%root% dataarea=%dataarea% skipbyte=%skipbyte% endentry=%endentry% search=%search% && pause
if not exist skipbyte && endlocal && set result= && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set numentry=%numentry% && set lastclus=%lastclus% && set endentry=%endentry% && goto :eof
:getdelentryloop
if exist skipbyte && raw cat --skip=%skipbyte% --locate=\x00 --length=1 %device%%0+%devsect% > nul && endlocal && set result= && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set numentry=%numentry% && set lastclus=%lastclus% && set endentry=%endentry% && goto :eof
if "%~4"=="echo" && echo 4 E5=%E5% delcon=%delcon% clusnum=%clusnum% skipbyte=%skipbyte% endentry=%endentry% search=%search%
if "%~4"=="echo" && if exist skipbyte && if %E5%>=1 && raw cat --hex --skip=%skipbyte% --length=32 %device%%0+%devsect%
if exist skipbyte && raw cat --skip=%skipbyte% --locate=\x%ASCII% --length=1 %device%%0+%devsect% > nul || set found=N
if %found%==N && if exist skipbyte && set /A offset=%skipbyte%+0x20 &; if %offset%<=%endentry% && set /A search=%endentry%-%skipbyte%+0x10 && set found= && set skipbyte= && set E5=0 && goto :delentryloop ! set skipbyte=
if exist skipbyte && raw cat --skip=%skipbyte% --locate=\x00 --length=1 %device%%0+%devsect% > nul && set skipbyte= && set clusnum=0
if "%~4"=="echo" && echo 5 E5=%E5% delcon=%delcon% clusnum=%clusnum% skipbyte=%skipbyte% search=%search%
if %E5%>=1 && if exist skipbyte && raw cat --skip=%skipbyte% --locate=\x%ASCII% --length=1 %device%%0+%devsect% > nul || set found=N
if exist delcon && if exist skipbyte && if not %E5%>=%delcon% && set /A skipbyte=%skipbyte%+0x20 &; set /A search=%endentry%-%skipbyte%+0x10 &; if not %found%==N && set /a E5=%E5%+1 ! if %skipbyte%<=%endentry% && set E5=0 && goto :getdelentryloop ! set E5=0 && set skipbyte=
#badidea#if %mode%==getdelentries && if "%~4"=="echo" && if %E5%>=%delcon% && echo 5A Leaving :delentry E5=%E5% delcon=%delcon% skipbyte=%skipbyte% && pause
#badidea#if %mode%==getdelentries && if exist delcon && if exist skipbyte && if %E5%>=%delcon% && endlocal && set result=%skipbyte% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set numentry=%numentry% && set lastclus=%lastclus% && set endentry=%endentry% && set ASCII=%ASCII% && goto :eof
if "%~4"=="echo" && echo 6 E5=%E5% delcon=%delcon% skipbyte=%skipbyte% search=%search%
if exist delcon && if exist skipbyte && if %E5%>=1 && if not %E5%>=%delcon% &; if %skipbyte%<=%endentry% && set found= && goto :getdelentryloop ! set skipbyte=
if "%~4"=="echo" && if %mode:~0,10%==getdelentr && echo 7 E5=%E5% delcon=%delcon% skipbyte=%skipbyte%
if not exist skipbyte && raw cat --skip=%endentry% --locate=\x00 --length=1 %device%%0+%devsect% > nul && set clusnum=0
if not exist skipbyte && if exist clusnum && if not %clusnum%==0 && if %bytedone%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" "%~4" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; set /A endentry=%bytedone%+%dirlen%-0x20 && set offset=%bytedone% && set /A search=%dirlen%-0x10 && set lastclus=%clusnum% && set E5=0 && goto :delentryloop
if exist skipbyte && if exist delcon &; if %E5%>=%delcon% && set /A skipbyte=-%delcon% * 0x20 + %skipbyte% && set numentry=%E5% && set E5= && set delcon= ! set skipbyte=
if "%~4"=="echo" && echo 8 E5=%E5% numentry=%numentry% n=%n% dataarea=%dataarea% bytedone=%bytedone% endentry=%endentry% skipbyte=%skipbyte% search=%search% found=%found% clusnum=%clusnum% lastclus=%lastclus%
if exist skipbyte && raw cat --skip=%skipbyte% --locate=\x%ASCII% --length=%search% --number=1 %device%%0+%devsect% > nul || set skipbyte=
if "%~4"=="echo" && echo 9 E5=%E5% numentry=%numentry% n=%n% dataarea=%dataarea% bytedone=%bytedone% endentry=%endentry% skipbyte=%skipbyte% search=%search% found=%found% clusnum=%clusnum% lastclus=%lastclus%
if "%~4"=="echo" && if exist skipbyte && raw cat --hex --skip=%skipbyte% --length=0xA0 %device%%0+%devsect% && pause
#badidea#if %mode%==getdelentries && if exist delcon && if exist skipbyte && if not %E5%>=%delcon% && set skipbyte=
if "%~4"=="echo" && echo Leaving :delentry E5=%E5% delcon=%delcon% skipbyte=%skipbyte% && pause
endlocal && set result=%skipbyte% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set numentry=%numentry% && set lastclus=%lastclus% && set endentry=%endentry% && set ASCII=%ASCII%
goto :eof
::
:adddircluster
setlocal
if "%~1"=="echo" && echo %0: fat1=%fat1% fat2=%fat2% numclus=%numclus% clusnum=%clusnum% lastclus=%lastclus%
if "%~1"=="echo" && echo 1 %0: fat1=%fat1% fat2=%fat2% numclus=%numclus% clusnum=%clusnum% lastclus=%lastclus%
if exist clusnum && if not %clusnum%==0 && if %bytedone%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" "%~1" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; raw cat --skip=%bytedone% --locate=\x00 --length=1 %device%%0+%devsect% > nul && endlocal && set lastclus=%lastclus% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && goto :eof
if "%~1"=="echo" && echo 2 %0: fat1=%fat1% fat2=%fat2% numclus=%numclus% clusnum=%clusnum% lastclus=%lastclus%
if not %clusnum%>=2 && set clusnum=%lastclus% &; if not %clusnum%>=2 && endlocal && set clusnum=0 && goto :eof
if "%~1"=="echo" && set makeclus= &; set /p /u "makeclus= Add new cluster? Y/N > " && echo
if "%~1"=="echo" && if not %makeclus%==Y && endlocal && set clusnum=0 && goto :eof
set clusbyte= && set freebyte= && set freeclus= && set nextclus= && set fatsize= && set makeclus=
if exist numclus &; if /i %filesys%==fat12 && set /A fatsize=%numclus% * 3 / 2 + 3 ! if /i %filesys%==fat16 && set /A fatsize=%numclus% * 4 + 4 ! if /i %filesys%==fat32 && set /A fatsize=%numclus% * 8 + 8
if not exist fatsize &; if exist fat2 && set /A fatsize=%fat2%-%fat1% ! if exist root && set /A fatsize=%root%-fat1% ! if exist dataarea && set /A fatsize=%dataarea%-%fat1%
if "%~1"=="echo" && echo 1 clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% fatsize=%fatsize%
if not exist fatsize && endlocal && set clusnum=0 && goto :eof
if /i %filesys%%==fat12 && call :clustersfat12 "%~1" &; if not %freeclus%==0 && set clusnum=%freeclus% && set freeclus= ! endlocal && set clusnum=0 && goto :eof
if /i %filesys%%==fat16 && call :clustersfat16 "%~1" &; if not %freeclus%==0 && set clusnum=%freeclus% && set freeclus= ! endlocal && set clusnum=0 && goto :eof
if /i %filesys%%==fat32 && call :clustersfat32 "%~1" &; if not %freeclus%==0 && set clusnum=%freeclus% && set freeclus= ! endlocal && set clusnum=0 && goto :eof
## writing to FAT1: cluster number of freeclus and terminate freeclus
if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% ! endlocal && set clusnum=0 && goto :eof
if not "%~1"=="echo" && setlocal && set /a devstart=%bytedone%/0x200 && set /a clussect=%clussize%/0x200 &; set clean=Y
if "%~1"=="echo" && setlocal && set /a devstart=%bytedone%/0x200 && set /a clussect=%clussize%/0x200 &; echo Clean %device%%%devstart%+%clussect%? && raw cat --hex --skip=%bytedone% --length=96 %device%%0+%devsect% && set clean= &; set /p /u "clean=Y/N > " && echo
if not %clean%==Y && endlocal && endlocal && set clusnum=0 && goto :eof
if not "%~1"=="echo" && echo -n > %device%%%devstart%+%clussect% && endlocal
if "%~1"=="echo" && echo -n > %device%%%devstart%+%clussect% && raw cat --hex --skip=%bytedone% --length=96 %device%%0+%devsect% && endlocal
if "%~1"=="echo" && echo 2 bytedone=%bytedone% dirlen=%dirlen% fatsize=%fatsize%
if "%~1"=="echo" && raw cat --hex --skip=%bytedone% --length=32 %device%%0+%devsect%
if "%~1"=="echo" && echo lastclus=%lastclus% clusbyte=%clusbyte% clusnum=%clusnum% freebyte=%freebyte%
if "%~1"=="echo" && echo %device%%0+%devsect% TE=%TE% EC=%EC%
if "%~1"=="echo" && raw cat --hex --skip=%clusbyte% --length=16 %device%%0+%devsect% && echo
if "%~1"=="echo" && raw cat --hex --skip=%freebyte% --length=16 %device%%0+%devsect%
if "%~1"=="echo" && set makeclus= &; set /p /u "makeclus= Write to FAT1? Y/N > " && echo
if "%~1"=="echo" && if not %makeclus%==Y && endlocal && set clusnum=0 && goto :eof
set makeclus= && set w=3
:write2fat1
if exist fat1 if %fat1%>=0x200 if %clusbyte%>=%fat1% if %freebyte%>=%fat1% || endlocal && set clusnum=0 && set "message=Something went wrong in function %mode% fat1=%fat1% clusbyte=%clusbyte% freebyte=%freebyte%" && goto :eof
raw write --offset=%clusbyte% %device%%0+%devsect% %TE% > nul && set written1=Y
raw write --offset=%freebyte% %device%%0+%devsect% %EC% > nul && set written2=Y
if "%~1"=="echo" && echo FAT1 written1=%written1% written2=%written2%
if %w%>=1 &; if %written1%==Y if %written2%==Y || set /a w=%w%-1 && goto :write2fat1
if "%~1"=="echo" && raw cat --hex --skip=%clusbyte% --length=16 %device%%0+%devsect% && echo
if "%~1"=="echo" && raw cat --hex --skip=%freebyte% --length=16 %device%%0+%devsect%
if not exist fat2 && if /i %filesys%%==fat32 && if %written2%==Y && call :driverFSinfo "%~1" &; if %result%==1 && set result= ! endlocal && set clusnum=0 && goto :eof
if exist fat2 && set written1= && set written2= ! endlocal && set lastclus=%lastclus% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set chainlen=%chainlen% && goto :eof
set /A fatlen=%fat2%-%fat1%
## writing to FAT2: cluster number of freeclus and terminate freeclus
set /A clusbyte=%clusbyte%+%fatlen% && set /A freebyte=%freebyte%+%fatlen%
if "%~1"=="echo" && echo clusbyte=%clusbyte% freebyte=%freebyte%
if "%~1"=="echo" && echo TE=%TE% EC=%EC%
if "%~1"=="echo" && set makeclus= &; set /p /u "makeclus= Write to FAT2? Y/N > " && echo
if "%~1"=="echo" && if not %makeclus%==Y && endlocal && set clusnum=0 && goto :eof
set w=3
:write2fat2
if exist fat2 if %fat2%>=0x200 if %clusbyte%>=%fat2% if %freebyte%>=%fat2% || endlocal && set clusnum=0 && set "message=Something went wrong in function %mode% fat2=%fat2% clusbyte=%clusbyte% freebyte=%freebyte%" && goto :eof
raw write --offset=%clusbyte% %device%%0+%devsect% %TE% > nul && set written1=Y
raw write --offset=%freebyte% %device%%0+%devsect% %EC% > nul && set written2=Y
if "%~1"=="echo" && echo FAT2 written1=%written1% written2=%written2%
if %w%>=1 &; if %written1%==Y if %written2%==Y || set /a w=%w%-1 && goto :write2fat2
if "%~1"=="echo" && raw cat --hex --skip=%clusbyte% --length=16 %device%%0+%devsect% && echo
if "%~1"=="echo" && raw cat --hex --skip=%freebyte% --length=16 %device%%0+%devsect%
if /i %filesys%%==fat32 && if %written2%==Y && call :driverFSinfo "%~1" &; if %result%==1 && set result= ! endlocal && set clusnum=0 && goto :eof
endlocal && set lastclus=%lastclus% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set chainlen=%chainlen%
goto :eof
::
:driverFSinfo
## FSinfo: unknown number of free clusters: 0x3E8=0xFFFFFFFF; unknown next free cluster: 0x3EC=0xFFFFFFFF; Remark: clusnum = +1, next_free is using count of total number of used clusters (so start with 1)
setlocal && set * && set device=%device% && set devsect=%devsect% && set fatsize=%fatsize% && set freebyte=%freebyte% && set fat1=%fat1%
set /A address=0x3E8 &; call :readendian "%address%" "%~1" &; if  exist result && set /A clusfree=%result%-1 &; set CF=00000000%clusfree:~2%
if "%~1"=="echo" && echo %0: result=%result% clusfree=%clusfree% CF=%CF% \x%CF:~-2,2%\x%CF:~-4,2%\x%CF:~-6,2%\x%CF:~-8,2%
if not "%~1"=="echo" && set makeclus=Y
if "%~1"=="echo" && set makeclus= &; set /p /u "makeclus= Write free clusters to FSinfo sector? Y/N > " && echo
if "%~1"=="echo" && if not %makeclus%==Y && endlocal && set result= && goto :eof
if %makeclus%==Y && if %clusfree%<=0xFFFFFF6 && raw write --offset=0x3E8 %device%%0+2 \x%CF:~-2,2%\x%CF:~-4,2%\x%CF:~-6,2%\x%CF:~-8,2% > nul && set successF=Y
if not %clusfree%<=0xFFFFFF6 && set successF=Y
if %successF%==Y && set result= && set /A address=0x3EC &; call :readendian "%address%" "%~1" &; if  exist result && set /A nextfree=%result% &; if %nextfree%<=0xFFFFFF6 && set /A nextbyte=%nextfree%+1*4 &; set /A fatsize=%fatsize%-%nextbyte% && set /A fat1skip=%nextbyte%+%fat1%
:driverFSinfoloop
if "%~1"=="echo" && echo fat1skip=%fat1skip% bytefree=%bytefree%
if "%~1"=="echo" && raw cat --hex --skip=%fat1% --length=32 %device%%0+%devsect% && pause
raw cat --skip=%fat1skip% --locate=\x00\x00\x00\x00 --number=1 --length=%fatsize% %device%%0+%devsect% > nul &; set /A bytefree=%?% &; set /A fatbyte=%bytefree%-%fat1% &; calc %fatbyte% % 4 &; set /A fat1skip=%bytefree%-%@retval%+2 && set bytefree= && set fatbyte= && goto :driverFSinfoloop
if not exist bytefree && if not exist loopnum && set fat1skip=%fat1% && set fatsize=%nextbyte% && set loopnum=2 && goto :driverFSinfoloop
if exist bytefree && set /A nextfree=%bytefree%-%fat1%/4-1 &; set NF=00000000%nextfree:~2%
if "%~1"=="echo" && echo %0: result=%result% freebyte=%freebyte% nextbyte=%nextbyte% bytefree=%bytefree% nextfree=%nextfree% NF=%NF% \x%NF:~-2,2%\x%NF:~-4,2%\x%NF:~-6,2%\x%NF:~-8,2%
if not "%~1"=="echo" && set makeclus=Y
if "%~1"=="echo" && set makeclus= &; set /p /u "makeclus= Write next free cluster to FSinfo sector? Y/N > " && echo
if "%~1"=="echo" && if not %makeclus%==Y && endlocal && set result= && goto :eof
if exist NF && if %makeclus%==Y && raw write --offset=0x3EC %device%%0+2 \x%NF:~-2,2%\x%NF:~-4,2%\x%NF:~-6,2%\x%NF:~-8,2% > nul && set successN=Y
if not %nextfree%<=0xFFFFFF6 && set successN=Y
if %successF%==Y && if %successN%==Y && set result=1 ! set result=
endlocal && set result=%result%
goto :eof
::
:clustersfat12
## cluster codes. Free: 000, reserved -do not use: 001, in use: 002-FEF, last: FF8-FFF, reserved: FF0-FF6, bad: FF7
setlocal
if "%~1"=="echo" && echo %0: clusnum=%clusnum% lastclus=%lastclus%
set /A clusbyte=%clusnum% / 2 + %clusnum%
set freeclus=\x00\x00 && set /A fat1skip=%fat1%+%clusbyte% && set /A fatsize=%fatsize%-%clusbyte%
if "%~1"=="echo" && echo fat1skip=%fat1skip% clusnum=%clusnum% clusbyte=%clusbyte% fatsize=%fatsize%
:clustersfat12loop
if "%~1"=="echo" && echo fat1skip=%fat1skip%
if "%~1"=="echo" && raw cat --hex --skip=%fat1skip% --length=32 %device%%0+%devsect%
raw cat --skip=%fat1skip% --locate=%freeclus% --length=%fatsize% --number=1 %device%%0+%devsect% > nul &; set /A freebyte=%?% &; set /A fatbyte=%freebyte%-%fat1% &; calc %fatbyte% % 3 &; set /A fat1skip=%freebyte%-%@retval%+3 && set freebyte= && set fatbyte= && goto :clustersfat12loop
if not exist freebyte && if not exist loopnum && set fat1skip=%fat1% && set fatsize=%clusbyte% && set loopnum=2 && goto :clustersfat12loop
if not exist freebyte && endlocal && set "message=No free entries found in FAT-table" && set freeclus=0 && goto :eof
#INTESTPHASE#if exist freebyte && setlocal && calc %freebyte% % 3 && set /A checkbyt=%freebyte%-2 &; call :readendian "%checkbyte%" "%~1" &; set /A check=%result%&0xffff>>4 && set /A exist=%result%&0xf &; set result= && pause freebyte=%freebyte% checkbyt=%checkbyt% check=%check% exist=%exist% key.. && endlocal
#INTESTPHASE#calc %freebyte% % 3 |; set /A freeclus=%freebyte% - %fat1% * 2 / 3 &; set FC=000%freeclus:~2% && set EC=\xFF\x0F && if "%~1"=="echo" && echo even freeclus number
#INTESTPHASE#calc %freebyte% % 3 &; set /A freeclus=%freebyte% - %fat1% * 2 / 3 + 1 &; set FC=000%freeclus:~2% && set EC=\xF0\xFF && if "%~1"=="echo" && echo odd freeclus number
set /A freeclus=%freebyte% - %fat1% * 2 / 3 &; set FC=000%freeclus:~2% && set EC=\xFF\x0F && calc %freeclus% % 2 && set EC=\xF0\xFF && if "%~1"=="echo" && echo odd freeclus number
if "%~1"=="echo" && debug 1 && debug msg=1
#NEEDED?# check for bad clusters etc.
calc %clusnum% % 2 &; set /A address=%clusnum% / 2 + %clusnum% + %fat1% &; call :readendian "%address%" "%~1" &; set /A twoentry=%result%&0xffff &; set result= && set TE=0000%twoentry:~2% &; set TE=\x%FC:~-1,1%%%TE:~-1,1%\x%FC:~-3,2% && if "%~1"=="echo" && echo odd chosen
calc %clusnum% % 2 |; set /A address=%clusnum% / 2 + %clusnum% + %fat1% &; call :readendian "%address%" "%~1" &; set /A twoentry=%result%&0xffffff &; set result= && set TE=000000%twoentry:~2% &; set TE=\x%FC:~-2,2%\x%TE:~-4,1%%%FC:~-3,1%\x%TE:~-6,2% && if "%~1"=="echo" && echo even chosen
set /A clusbyte=%clusbyte%+%fat1%
if "%~1"=="echo" && debug msg=0
if "%~1"=="echo" && echo clusnum=%clusnum% clusbyte=%clusbyte% TE=%TE% twoentry=%twoentry%
if "%~1"=="echo" && raw cat --hex --skip=%clusbyte% --length=16 %device%%0+%devsect%
if "%~1"=="echo" && echo freeclus=%freeclus% freebyte=%freebyte% EC=%EC%
if "%~1"=="echo" && raw cat --hex --skip=%freebyte% --length=16 %device%%0+%devsect%
endlocal && set clusbyte=%clusbyte% && set freeclus=%freeclus% && set freebyte=%freebyte% && set TE=%TE% && set EC=%EC% && set chainlen=%chainlen%
goto :eof
::
:clustersfat16
setlocal
if "%~1"=="echo" && echo %0: lastclus=%lastclus%
set /A clusbyte=%clusnum% * 2
set freeclus=\x00\x00 && set /A fat1skip=%fat1%+%clusbyte% && set /A fatsize=%fatsize%-%clusbyte%
:clustersfat16loop
if "%~1"=="echo" && echo fat1skip=%fat1skip% clusnum=%clusnum%
if "%~1"=="echo" && raw cat --hex --skip=%fat1% --length=32 %device%%0+%devsect%
raw cat --skip=%fat1skip% --locate=%freeclus% --length=%fatsize% --number=1 %device%%0+%devsect% > nul &; set /A freebyte=%?% &; set /A fatbyte=%freebyte%-%fat1% &; calc %fatbyte% % 2 &; set /A fat1skip=%freebyte%-%@retval%+2 && set freebyte= && set fatbyte= && goto :clustersfat16loop
if not exist freebyte && if not exist loopnum && set fat1skip=%fat1% && set fatsize=%clusbyte% && set loopnum=2 && goto :clustersfat16loop
if not exist freebyte && endlocal && set "message=No free entries found in FAT-table" && set freeclus=0 && goto :eof
set /A freeclus=%freebyte% - %fat1% / 2 &; set FC=0000%freeclus:~2% && set EC=\xFF\xFF
if "%~1"=="echo" && debug 1 && debug msg=1
set /A address=%clusnum% * 2 + %fat1% &; call :readendian "%address%" "%~1" &; set /A fatentry=%result%&0xffff &; set result= && if %fatentry%>=0xFFF0 && set TE=\x%FC:~-2,2%\x%FC:~-4,2% && set /A clusbyte=%address% ! endlocal && set freeclus=0 && goto :eof
if "%~1"=="echo" && debug msg=0
if "%~1"=="echo" && echo lastclus=%lastclus% clusnum=%clusnum% clusbyte=%clusbyte% freeclus=%freeclus% freebyte=%freebyte% TE=%TE% EC=%EC%
if "%~1"=="echo" && echo clusbyte=%clusbyte% freeclus=%freeclus% freebyte=%freebyte% TE=%TE% EC=%EC%
if "%~1"=="echo" && pager on && raw cat --hex --skip=%fat1% --length=32 %device%%0+%devsect% && pager off
endlocal && set clusbyte=%clusbyte% && set freeclus=%freeclus% && set freebyte=%freebyte% && set TE=%TE% && set EC=%EC% && set chainlen=%chainlen%
goto :eof
::
:clustersfat32
setlocal
if "%~1"=="echo" && echo %0: lastclus=%lastclus%
set /A clusbyte=%clusnum% * 4
set freeclus=\x00\x00\x00\x00 && set /A fat1skip=%fat1%+%clusbyte% && set /A fatsize=%fatsize%-%clusbyte%
:clustersfat32loop
if "%~1"=="echo" && echo fat1skip=%fat1skip% clusnum=%clusnum%
if "%~1"=="echo" && raw cat --hex --skip=%fat1% --length=32 %device%%0+%devsect%
raw cat --skip=%fat1skip% --locate=%freeclus% --length=%fatsize% --number=1 %device%%0+%devsect% > nul &; set /A freebyte=%?% &; set /A fatbyte=%freebyte%-%fat1% &; calc %fatbyte% % 4 &; set /A fat1skip=%freebyte%-%@retval%+4 && set freebyte= && set fatbyte= && goto :clustersfat32loop
if not exist freebyte && if not exist loopnum && set fat1skip=%fat1% && set fatsize=%clusbyte% && set loopnum=2 && goto :clustersfat32loop
if not exist freebyte && endlocal && set "message=No free entries found in FAT-table" && set freeclus=0 && goto :eof
set /A freeclus=%freebyte% - %fat1% / 4 &; set FC=00000000%freeclus:~2% && set EC=\xFF\xFF\xFF\x0F
#NOTSTANDARD#set /A freeclus=%freebyte% - %fat1% / 4 &; set FC=00000000%freeclus:~2% && set EC=\xFF\xFF\xFF\xFF
if "%~1"=="echo" && debug 1 && debug msg=1
set /A address=%clusnum% * 4 + %fat1% &; call :readendian "%address%" "%~1" &; set /A fatentry=%result%&0xffffffff &; set result= && if %fatentry%>=0xFFFFFF7 && set TE=\x%FC:~-2,2%\x%FC:~-4,2%\x%FC:~-6,2%\x%FC:~-8,2% && set /A clusbyte=%address% ! endlocal && set freeclus=0 && goto :eof
if "%~1"=="echo" && debug msg=0
if "%~1"=="echo" && echo clusbyte=%clusbyte% freeclus=%freeclus% freebyte=%freebyte% TE=%TE% EC=%EC%
if "%~1"=="echo" && pager on && raw cat --hex --skip=%fat1% --length=32 %device%%0+%devsect% && pager off
endlocal && set clusbyte=%clusbyte% && set freeclus=%freeclus% && set freebyte=%freebyte% && set TE=%TE% && set EC=%EC% && set chainlen=%chainlen%
goto :eof
::
:datetime
if not %success%==Y && if not exist entry && set result= && goto :eof
setlocal
set /A address=%basemem%+0x16 &; read %address% ;; set /A modtime=%@retval%&0xffff
set /A address=%basemem%+0x18 &; read %address% ;; set /A moddate=%@retval%&0xffff &; if %moddate%==0 && set moddate= && set modtime=
set /A address=%basemem%+0xD &; read %address% ;; set /A hundreth=%@retval%&0xff
set /A address=%basemem%+0xE &; read %address% ;; set /A creatime=%@retval%&0xffff
set /A address=%basemem%+0x10 &; read %address% ;; set /A creadate=%@retval%&0xffff &; if %creadate%==0 && set creadate= && set creatime=
set /A address=%basemem%+0x12 &; read %address% ;; set /A accdate=%@retval%&0xffff &; if %accdate%==0 && set accdate=
endlocal && set hundreth=%hundreth% && set creatime=%creatime% && set creadate=%creadate% && set accdate=%accdate% && set modtime=%modtime% && set moddate=%moddate%
goto :eof
::
:getlfnfile
if not exist bytedone && set lfnfile= && goto :eof
if not exist lfnindex && set /A mdlfnA=%mdbase% + 1 * 0x200 &; set mem=%dirlen% &; call Fn.24 %mdlfnA% 0x00 %mem%
set mdlfnA= && set mem=
if "%~2"=="echo" && echo %0 clusnum=%clusnum%
set chainlen=%clussize%
if "%~2"=="echo" && echo lfnindex=%lfnindex% clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% && pause
if "%~2"=="echo" && call :findfile file "%~2" &; echo A && pager on && set && echo && if not exist entry && set lfnfile= && goto :eof
if not "%~2"=="echo" && call :findfile "file" &; if not exist entry && set lfnfile= && set "message=SFN %device%%%path%%%name%%%ext% not found" && goto :eof ! if %entry%<=0x200 && set lfnfile= && set "message=%device%%%path%%%name%%%ext% not found, entry=%entry%" && goto :eof
setlocal && set * && set mdbase=%mdbase% && set root=%root% && set dataarea=%dataarea% && set device=%device% && set "path=%path%" && set "name=%name%" && set "ext=%ext%" && set bytedone=%bytedone% && set dirlen=%dirlen% && set lfnindex=%lfnindex% && set entry=%entry% && set ENTRY=%ENTRY% && set filesys=%filesys% && set clussize=%clussize% && set clusnum=%clusnum%
if "%~2"=="echo" && pager on && echo B && set && echo && pager off
#NOT#call :sfnchecksum "%ENTRY%" "%~2" &; if not exist checksum && endlocal && set lfnfile= && set "message=SFN-checksum of %device%%%path%%%name%%%ext% not found" && goto :eof
#ORG#
call :sfnchecksum "%ENTRY%" &; if not exist checksum && endlocal && set lfnfile= && set "message=SFN-checksum of %device%%%path%%%name%%%ext% not found" && goto :eof
if "%~2"=="echo" && echo checksum=%checksum%
set /A mdlfnA=%mdbase%+1 &; if not /i %filesys%==fat32 && if "%path%"=="/" && set /a lfnsect=%dirlen% / 512 ! set /A lfnsect=%lfnindex% * %dirlen% / 512
if /i %filesys%==fat32 &; set /A lfnsect=%lfnindex% * %dirlen% / 512
if %lfnindex%>=2 && set /A sfnentry=%lfnindex% - 2 * %dirlen% + %entry% - %bytedone% ! set /A sfnentry=%entry%-%bytedone%
#notreallyneeded#set /A skiplfn=%lfnindex% - 2 * %dirlen% + %entry% - %bytedone%
#notreallyneeded#raw cat --skip=%skiplfn% --locate="%ENTRY%" --length=11 (md)%mdlfnA%+%lfnsect% > nul &; set /A sfnentry=%?%
if "%~2"=="echo" && echo skiplfn=%skiplfn% lfnindex=%lfnindex% clussize=%clussize% dirlen=%dirlen% bytedone=%bytedone% entry=%entry% sfnentry=%sfnentry%
#BAD#if "%~2"=="echo" && skiplfn=%skiplfn% lfnindex=%lfnindex% clussize=%clussize% dirlen=%dirlen% bytedone=%bytedone% entry=%entry% sfnentry=%sfnentry%
if not exist sfnentry && endlocal && set lfnfile= && goto :eof
set /A memlfn=%mdlfnA% * 0x200 &; set /A entry=%memlfn% + %sfnentry%
if "%~2"=="echo" && echo memlfn=%memlfn% entry=%entry%
if "%~2"=="echo" && echo attrib=%attrib%
if "%~2"=="echo" && echo check=%check% checksum=%checksum%
set /A lfnentry=%sfnentry%-0x20
set lfnfile=.
:getlfnloop
if %ordinal%>=0x40 && endlocal && set "lfnfile=%lfnfile:~1%" && goto :eof
cat --hex --skip=%lfnentry% --length=16 (md)%mdlfnA%+%lfnsect% | set hexA=
set "hexA=%hexA:~10,50%"
set /A ordinal=0x%hexA:~0,2%
if %ordinal%==0xE5 && endlocal && set lfnfile= && set "message=LFN of %device%%%path%%%name%%%ext% not found" && goto :eof
set /A attrib=0x%hexA:~35,2% &; if not %attrib%==0xF && endlocal && set lfnfile= && set "message=LFN of %device%%%path%%%name%%%ext% not found" && goto :eof
set /A check=0x%hexA:~42,2% &; if not %check%==0x%checksum% && endlocal && set lfnfile= && set "message=LFN of %device%%%path%%%name%%%ext% not found" && goto :eof
set /A lfnentry=%lfnentry%+0x10
cat --hex --skip=%lfnentry% --length=16 (md)%mdlfnA%+%lfnsect% | set hexB=
set "hexB=%hexB:~10,50%"
setlocal && set * && set "hexA=%hexA%" && set "hexB=%hexB%"
set "char1=\x%hexA:~3,2%" ;; if "%char1%"=="\x00" && set char1= ;; if "%char1%"=="\xFF" && set char1=
set "char2=\x%hexA:~9,2%" ;; if "%char2%"=="\x00" && set char2= ;; if "%char2%"=="\xFF" && set char2=
set "char3=\x%hexA:~16,2%" ;; if "%char3%"=="\x00" && set char3= ;; if "%char3%"=="\xFF" && set char3=
set "char4=\x%hexA:~22,2%" ;; if "%char4%"=="\x00" && set char4= ;; if "%char4%"=="\xFF" && set char4=
set "char5=\x%hexA:~29,2%" ;; if "%char5%"=="\x00" && set char5= ;; if "%char5%"=="\xFF" && set char5=
set "char6=\x%hexA:~45,2%" ;; if "%char6%"=="\x00" && set char6= ;; if "%char6%"=="\xFF" && set char6=
set "char7=\x%hexB:~0,2%" ;; if "%char7%"=="\x00" && set char7= ;; if "%char7%"=="\xFF" && set char7=
set "char8=\x%hexB:~6,2%" ;; if "%char8%"=="\x00" && set char8= ;; if "%char8%"=="\xFF" && set char8=
set "char9=\x%hexB:~13,2%" ;; if "%char9%"=="\x00" && set char9= ;; if "%char9%"=="\xFF" && set char9=
set "char10=\x%hexB:~19,2%" ;; if "%char10%"=="\x00" && set char10= ;; if "%char10%"=="\xFF" && set char10=
set "char11=\x%hexB:~26,2%" ;; if "%char11%"=="\x00" && set char11= ;; if "%char11%"=="\xFF" && set char11=
set "char12=\x%hexB:~39,2%" ;; if "%char12%"=="\x00" && set char12= ;; if "%char12%"=="\xFF" && set char12=
set "char13=\x%hexB:~45,2%" ;; if "%char13%"=="\x00" && set char13= ;; if "%char13%"=="\xFF" && set char13=
set "allchars=%char1%%%char2%%%char3%%%char4%%%char5%%%char6%%%char7%%%char8%%%char9%%%char10%%%char11%%%char12%%%char13%"
endlocal && set "allchars=%allchars%"
call Fn.11 "%allchars%" "\x25" && endlocal && set lfnfile= && set "message=Char '%' in Long File Names not supported" && goto :eof
set lfnfileA=
echo -n > (md)%mdbase%+1
write --offset=0 (md)%mdbase%+1 "%allchars%" > nul
cat (md)%mdbase%+1 | set lfnfileA= &; set "lfnfileA=%lfnfileA:~1,-1%" &; set "lfnfile=%lfnfile%%%lfnfileA%"
#OKE_EXCEPT_COLOR_CODES#echo -e "%allchars%" | set lfnfileA= &; set "lfnfileA=%lfnfileA:~1,-1%" &; set "lfnfile=%lfnfile%%%lfnfileA%"
set /A lfnentry=%lfnentry%-0x30
goto :getlfnloop
#OLD#
if "%~2"=="echo" && echo $[0x00]"$[]ordinal=%ordinal% sfnentry=%sfnentry% address=%address lfnfile=%lfnfile%$[0x00]" && echo
if %ordinal%>=0x40 && endlocal && set "lfnfile=%lfnfile%" && goto :eof
read %address% &; set /A ordinal=%@retval%&0xff && set /A address=%address%+0x1
if %ordinal%==0xE5 && endlocal && set lfnfile= && set "message=LFN of %device%%%path%%%name%%%ext% not found" && goto :eof
set /A skiplfn=%lfnentry%+0x1 &; raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x3 && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x5 && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x7 && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x9 && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A address=%address%+0x4 &; read %address% ;; set /A check=%@retval%&0xff &; if not %check%==0x%checksum% && endlocal && set lfnfile= && goto :eof
set /A skiplfn=%lfnentry%+0xE && set /A address=%address%+0x1 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x10 && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x12 && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x14 && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x16 && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x18 && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x1C && set /A address=%address%+0x4 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A skiplfn=%lfnentry%+0x1E && set /A address=%address%+0x2 &; read %address% ;; set /A lfnbyte=%@retval%&0xff ;; if not %lfnbyte%==0 && if not %lfnbyte%==0xFF && raw cat --skip=%skiplfn% --length=1 (md)%mdlfnA%+%lfnsect% | set lfnfile=%lfnfile%
set /A lfnentry=%lfnentry% - 0x20 && set /A address=%address% - 0x1E - 0x20
goto :getlfnloop
#ENDofOLD#
::
:findfile
#BADECHO?#if "%~2"=="echo" && #echo %0:$[0x00]"$[]%* name=%name%$[0x00]"
set SFN= &; call :checksfn "%name%%%ext%"
if %mode%==getlfn && if %SFN%==N && set entry= && goto :eof
if "%path%"=="/" && set clusnum=2
set sfn= &; if %SFN%==N && call :findsfn "%name%%%ext%" "file" "%~2" &; set "ENTRY=%sfn%" &; if exist sfn && goto :eof ! set clusnum=0 && goto :eof
if not %SFN%==N && if %mode%==getlfnentry && call :findsfn "%name%%%ext%" "file" "%~2" &; set "ENTRY=%sfn%" &; if exist sfn && goto :eof ! set clusnum=0 && goto :eof
if not %SFN%==N && if %mode%==getsfn && call :findsfn "%name%%%ext%" "file" "%~2" &; set "ENTRY=%sfn%" &; if exist sfn && goto :eof ! set clusnum=0 && goto :eof
set chainlen=%clussize% && if not exist dirclus0 && set dirclus0=%clusnum%
setlocal && set offset= && set search= && set endentry=
set chainlen=%clussize%
if not %SFN%==N && call :catfile "%name%%%ext%"
if %mode%==getlfn && if exist lfnindex && set offset=%bytedone% && set search=%dirlen% && set /A endentry=%bytedone%+%dirlen%-0x20 && goto :skipcopygetlfn
setlocal && set * && set mode=%mode% && set mdbase=%mdbase% && set device=%device% && set devsect=%devsect% && set bytedone=%bytedone% && set dirlen=%dirlen% && set "path=%path%" && set filesys=%filesys%
#debug#echo %0 "if %mode%==getlfn && if "%path%"=="/" && if not /i %filesys%==fat32 && set lfnindex=0 && set skipcopy=0 && set /A mdlfnA=%mdbase%+1 && set /a lfnsect=%dirlen%/512 &; raw dd if=%device%%0+%devsect% of=(md)%mdlfnA%+%lfnsect% bs=1 count=%dirlen% skip=%bytedone% > nul && pause KEY...
if %mode%==getlfn && if "%path%"=="/" && if not /i %filesys%==fat32 && set lfnindex=0 && set skipcopy=0 && set /A mdlfnA=%mdbase%+1 && set /a lfnsect=%dirlen%/512 &; raw dd if=%device%%0+%devsect% of=(md)%mdlfnA%+%lfnsect% bs=1 count=%dirlen% skip=%bytedone% > nul
if "%~2"=="echo" && if %mode%==getlfn && if not /i %filesys%==fat32 && raw cat --hex --length=96 --skip=%skipcopy% (md)%mdlfnA%+%lfnsect%
if %mode%==getlfn && if "%path%"=="/" && if /i %filesys%==fat32 && set lfnindex=1
if %mode%==getlfn && if not "%path%"=="/" && set lfnindex=1
if "%~2"=="echo" && if %lfnindex%==0 && raw cat --hex --length=96 (md)%mdlfnA%+%lfnsect% && pause
endlocal && set lfnindex=%lfnindex%
:findfileloop
setlocal && set * && set mode=%mode% && set mdbase=%mdbase% && set device=%device% && set devsect=%devsect% && set bytedone=%bytedone% && set dirlen=%dirlen% && set lfnindex=%lfnindex% && set secpclus=%secpclus%
if "%~2"=="echo" && echo 0 mode=%mode% mdbase=%mdbase% device=%device% devsect=%devsect% bytedone=%bytedone% dirlen=%dirlen% lfnindex=%lfnindex% secpclus=%secpclus%
if %mode%==getlfn && if %lfnindex%>=1 &; set /A mdlfnA=%mdbase%+1 && set /a lfnsect=%lfnindex% * %dirlen% / 512 &; set /A mdlfnB=%lfnindex% - 1 * %lfnsect% + %mdlfnA% &; echo -n > (md)%mdlfnB%+%secpclus% && set /A skipcopy=%lfnindex% - 1 * %dirlen% && set /a lfnindex=%lfnindex%+1 &; raw dd if=%device%%0+%devsect% of=(md)%mdlfnA%+%lfnsect% bs=1 count=%dirlen% skip=%bytedone% seek=%skipcopy% > nul
if "%~2"=="echo" && if %mode%==getlfn && if /i %filesys%==fat32 && raw cat --hex --length=96 --skip=%skipcopy% (md)%mdlfnA%+%lfnsect%
endlocal && set lfnindex=%lfnindex%
set offset=%bytedone% && set search=%dirlen% && set /A endentry=%bytedone%+%dirlen%-0x20
:skipcopygetlfn
if "%~2"=="echo" && echo 1 ENTRY=%ENTRY% entry=%entry% lfnindex=%lfnindex% offset=%offset% search=%search% endentry=%endentry% && pause
set entry= && set success=
raw cat --skip=%offset% --locate="%ENTRY%" --length=%search% --number=1 %device%%0+%devsect% | set entry= &; if exist entry && if 0x%entry%>=%offset% && set /A entry=0x%entry% &; calc 0x%entry:~-2,2% % 0x20 &; set /A offset=%entry%-%@retval%+0x20 &; if %offset%<=%endentry% && set /A search=%bytedone%-%offset%+%dirlen% && goto :skipcopygetlfn ! set entry=
if exist entry && if not %entry%>=%offset% && endlocal && set "message=BAD search in :findfile" && set entry= && goto :eof
if exist entry && if not %entry%>=0x200 && echo BAD entry=%entry% && endlocal && set "message=BAD entry=%entry%" && set entry= && goto :eof
if "%~2"=="echo" && echo 2 entry=%entry% ENTRY=%ENTRY%
if exist entry && if not %success%==Y && echo -n > (md)%mdbase%+1 && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && set success=Y
if "%~2"=="echo" && echo 3 clusnum=%clusnum% bytedone=%bytedone% root=%root% dataarea=%dataarea% entry=%entry% ENTRY=%ENTRY% success=%success%
if not exist entry && if exist clusnum && if %bytedone%>=%dataarea% && call :lookupFAT "%clusnum%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; set offset=%bytedone% && set search=%dirlen% && set /A endentry=%bytedone%+%dirlen%-0x20 && goto :findfileloop
if "%~2"=="echo" && echo 4 clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% entry=%entry% ENTRY=%ENTRY% lfnindex=%lfnindex% && pause
if exist entry && set sfnfile=%name%%%ext%
endlocal && set success=%success% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set entry=%entry% && set ENTRY=%ENTRY% && set sfnpath=%sfnpath% && set sfnfile=%sfnfile% && set lfnindex=%lfnindex% && set lastclus=%lastclus% && set chainlen=%chainlen% && set dirclus0=%dirclus0%
if "%~2"=="echo" && echo 5 clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% entry=%entry% ENTRY=%ENTRY% lfnindex=%lfnindex% && pause
goto :eof
::
:findsfn
#BADECHO?#if "%~3"=="echo" && #echo %0:$[0x00]"$[0x07]%* lfn=%~1$[0x00]"
setlocal && set SFN= && set address= && set clusnumL= && set clusnumH= && set argname= && set offset= && set search= && set endentry=
set chainlen=%clussize% && if "%~2"=="file" && if not exist dirclus0 && set dirclus0=%clusnum%
set "lfn=%~1" &; set /a lfnlen=%@retval%
if %lfnlen%<=13 && set n=1 ! if %lfnlen%<=26 && set n=2 ! if %lfnlen%<=39 && set n=3 ! if %lfnlen%<=52 && set n=4 ! if %lfnlen%<=65 && set n=5 ! if %lfnlen%<=78 && set n=6 ! if %lfnlen%<=91 && set n=7 ! if %lfnlen%<=104 && set n=8 ! if %lfnlen%<=117 && set n=9 ! if %lfnlen%<=130 && set n=10 ! if %lfnlen%<=143 && set n=11 ! if %lfnlen%<=156 && set n=12 ! if %lfnlen%<=169 && set n=13 ! if %lfnlen%<=182 && set n=14 ! if %lfnlen%<=195 && set n=15 ! if %lfnlen%<=208 && set n=16 ! if %lfnlen%<=221 && set n=17 ! if %lfnlen%<=234 && set n=18 ! if %lfnlen%<=247 && set n=19 ! if %lfnlen%<=255 && set n=20
set /A c=1 && set i=1 && set l=0 && set "lfnorg=%lfn%" && set lfnnum=1 && set lfndone=%bytedone% && set clustail=%dirlen%
if "%~3"=="echo" && echo $[0x00]"$[0x07]clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% lfn=%lfn% lfnlen=%lfnlen% n=%n% c=%c% i=%i% l=%l%$[0x00]"
set entry= && set sfn= && set lfnent01= && set ENTRY= && set clusnum0= && set clusnum1= && set lfnbyteA= && set lfnbyteB= && set success= && set clusnum2=
:loopfindLFN
set lfnentry= && set entryA= && set entryB= && set entryC= && set LFNA= && set LFNB= && set LFNC= && set ordinal= && set skipentr= && set sfnfile=
if "%~3"=="echo" && echo n=%n% c=%c% i=%i% l=%l%
if %c%==%n% && set /A ordinal=%c%+0x40 &; set ordinal=\x%ordinal:~2%
if not %c%>=%n% &; if %c%<=15 && set ordinal=\x0%c:~2% ! set ordinal=\x%c:~2%
setlocal && set * && set "lfn=%lfn%" && set lfnlen=%lfnlen% && set ordinal=%ordinal% && set i=%i% && set l=%l% && set c=%c% && set checksum=%checksum%
:loopsetLFNABC
call set "LFN%i%=%^lfn:~%l%,1%" &; if exist LFN%i% && call set "LFN%i%=%^LFN%i%%%\x00"
if "%~3"=="echo" && call echo $[0x00]"$[]LFN%i%=%^LFN%i%%%$[0x00]|"
set /a l=%l%+1 && set /a i=%i%+1 &; if %i%<=13 && goto :loopsetLFNABC
if exist LFN5 && set "LFNA=%ordinal%%%LFN1%%%LFN2%%%LFN3%%%LFN4%%%LFN5%\x0F\x00" ! if exist LFN4 && set "LFNA=%ordinal%%%LFN1%%%LFN2%%%LFN3%%%LFN4%\x00\x00\x0F\x00" ! if exist LFN3 && set "LFNA=%ordinal%%%LFN1%%%LFN2%%%LFN3%\x00\x00\xFF\xFF\x0F\x00" ! if exist LFN2 && set "LFNA=%ordinal%%%LFN1%%%LFN2%\x00\x00\xFF\xFF\xFF\xFF\x0F\x00" ! if exist LFN1 && set "LFNA=%ordinal%%%LFN1%\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\x0F\x00"
if exist checksum && set "LFNA=%LFNA%\x%checksum%"
if exist LFN11 && set "LFNB=%LFN6%%%LFN7%%%LFN8%%%LFN9%%%LFN10%%%LFN11%" ! if exist LFN10 && set "LFNB=%LFN6%%%LFN7%%%LFN8%%%LFN9%%%LFN10%\x00\x00" ! if exist LFN9 && set "LFNB=%LFN6%%%LFN7%%%LFN8%%%LFN9%\x00\x00\xFF\xFF" ! if exist LFN8 && set "LFNB=%LFN6%%%LFN7%%%LFN8%\x00\x00\xFF\xFF\xFF\xFF" ! if exist LFN7 && set "LFNB=%LFN6%%%LFN7%\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF" ! if exist LFN6 && set "LFNB=%LFN6%\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF" ! if exist LFN5 && set "LFNB=\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF" ! set "LFNB=\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
if exist LFN13 && set "LFNC=\x00\x00%LFN12%%%LFN13%" ! if exist LFN12 && set "LFNC=\x00\x00%LFN12%\x00\x00" ! if exist LFN11 && set "LFNC=\x00\x00\x00\x00\xFF\xFF" ! set "LFNC=\x00\x00\xFF\xFF\xFF\xFF"
endlocal && set "LFNA=%LFNA%" && set "LFNB=%LFNB%" && set "LFNC=%LFNC%"
if "%~3"=="echo" && if %c%==%n% && echo LFNENTRY%c:~2%=%LFNA%%%LFNB%%%LFNC%
if "%~3"=="echo" && echo LFNA=%LFNA% LFNB=%LFNB% LFNC=%LFNC%
if %mode:~0,7%==makelfn && goto :eof
if exist LFNA if exist LFNB if exist LFNC |; endlocal && set "message=Problem with var LFNA/B/C" && set lfnentry= && goto :eof
raw cat --skip=%lfndone% --locatei="%LFNA%" --length=%clustail% --number=1 %device%%0+%devsect% | set entryA= &; if exist entryA && set entryA=0x%entryA% &; set /A skipentr=%entryA%+14 &; raw cat --skip=%skipentr% --locatei="%LFNB%" --length=26 %device%%0+%devsect% | set entryB= &; if exist entryB && set entryB=0x%entryB% &; set /A skipentr=%entryB%+12 &; raw cat --skip=%skipentr% --locatei="%LFNC%" --length=6 %device%%0+%devsect% | set entryC= &; if exist entryC && set entryC=0x%entryC% &; set /A lfnentry=%entryC%-26
if exist lfnentry && if %c%==1 && if not %mode:~3%==lfnentry && set lfnent01=%lfnentry% && set clusnum2=%clusnum% && set lfndone=%lfnentry% &; setlocal && call :checklfnentry "%echo%" &; if exist entry && endlocal && set "sfn=%sfn%" && set entry=%entry% && set checksum=%checksum% && set clusnum=%clusnum% && set clusnum2=%clusnum2% ! if %clustail%>=0x20 && endlocal && set lfnentry= && set sfn= && set checksum= && set clusnum=%clusnum% && set clusnum2=%clusnum2% && set bytedone=%bytedone% && set dirlen=%dirlen% && set lfndone=%lfndone% && set lfnent01= && set clustail=%clustail% && set "lfn=%lfnorg%" && set /a lfnnum=%lfnnum%+1 && set /A c=0x1 && set i=1 && set l=0 && goto :loopfindLFN
if exist lfnentry && if %c%==1 && if %mode:~3%==lfnentry && if %~2==dir && set lfnent01=%lfnentry% && set clusnum2=%clusnum% && set lfndone=%lfnentry% &; setlocal && call :checklfnentry "%echo%" &; if exist entry && endlocal && set "sfn=%sfn%" && set entry=%entry% && set checksum=%checksum% && set clusnum=%clusnum% && set clusnum2=%clusnum2% ! if %clustail%>=0x20 && endlocal && set lfnentry= && set sfn= && set checksum= && set clusnum=%clusnum% && set clusnum2=%clusnum2% && set bytedone=%bytedone% && set dirlen=%dirlen% && set lfndone=%lfndone% && set lfnent01= && set clustail=%clustail% && set "lfn=%lfnorg%" && set /a lfnnum=%lfnnum%+1 && set /A c=0x1 && set i=1 && set l=0 && goto :loopfindLFN
if exist lfnentry && if %c%==1 &; if %mode:~3%==lfnentry && if %~2==file && set lfnent01=%lfnentry% && set lfndone=%lfnentry% && set clusnum2=%clusnum%
if exist lfnentry && if not %c%>=%n% && if %lfnentry%==%bytedone% &; if not exist lfnbyteA && set lfnbyteA=%lfnentry% ! if not exist lfnbyteB && set lfnbyteB=%lfnentry%
if exist lfnentry && if not %c%>=%n% && if %lfnentry%==%bytedone% && if %bytedone%>=%dataarea% &; if exist clusnum1 && set clusnum=%clusnum1% && set /A lfndone=%clusnum1% - 0x2 * %clussize% + %dataarea% && set /A clustail=%clussize% ! if exist clusnum0 && set clusnum=%clusnum0% && set /A lfndone=%clusnum0% - 0x2 * %clussize% + %dataarea% && set /A clustail=%clussize%
if exist lfnentry && if not %c%>=%n% && if %lfnentry%==%bytedone% &; set bytedone=%lfndone% && set dirlen=%clustail% &; set /A lfndone=%bytedone%+%dirlen%
if "%~3"=="echo" && echo lfnentry=%lfnentry% c=%c% n=%n% clusnum=%clusnum% clusnum1=%clusnum1% clusnum0=%clusnum0% clusnum2=%clusnum2% lfnent01=%lfnent01% bytedone=%bytedone% dirlen=%dirlen% lfndone=%lfndone% clustail=%clustail% entry=%entry% checksum=%checksum% sfn=%sfn%
if exist lfnentry && if not %c%>=%n% && if not %lfndone%<=%bytedone% && set /A c=%c%+1 && set i=1 && set l=0 && set "lfn=%lfn:~13%" && set /A lfndone=%lfndone%-0x20 && set clustail=0x20 && goto :loopfindLFN
if "%~3"=="echo" && echo LFNA=%LFNA% lfnentry=%lfnentry% c=%c% n=%n% clusnum=%clusnum% clusnum2=%clusnum2% clusnum1=%clusnum1% clusnum0=%clusnum0% lfnent01=%lfnent01%
if "%~3"=="echo" && echo entry=%entry% entryA=%entryA% entryB=%entryB% entryC=%entryC% skipentr=%skipentr% lfnentry=%lfnentry% c=%c% n=%n% lfndone=%lfndone% clustail=%clustail%
if not exist lfnentry && if exist lfnent01 &; if not %clusnum%==%clusnum1% if not %clusnum%==%clusnum0% |; set clusnum1= && set clusnum0=
## lfnbyteA can be below ultimate lfnentry!
if not exist lfnentry && if exist lfnbyteA && set lfnbyteA=
if not exist lfnentry && if exist lfnbyteB && set lfnbyteB=
if not exist lfnentry && if not %mode%==getlfnentry && set checksum=
if not exist lfnentry && set entry= && set sfn= && if exist lfnent01 &; if %bytedone%>=%dataarea% && set /A bytedone=%clusnum2% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% && set clusnum=%clusnum2% && set clusnum2= ! set clusnum=%clusnum2% &; setlocal && set /A bytemax=%bytedone%+%dirlen% && set /A lfndone=%lfnent01%+0x20 &; set /A clustail=%bytemax%-%lfndone% &; endlocal && set lfndone=%lfndone% && set clustail=%clustail% &; set lfnent01= && if %clustail%>=0x20 && set "lfn=%lfnorg%" && set /a lfnnum=%lfnnum%+1 && set /A c=0x1 && set i=1 && set l=0 && goto :loopfindLFN
if not exist lfnentry && set entry= &; if exist entryA && setlocal && set /A bytemax=%bytedone%+%dirlen% && set /A lfndone=%c% * 32 + %entryA% &; set /A clustail=%bytemax%-%lfndone% &; endlocal && set lfndone=%lfndone% && set clustail=%clustail% &; set entryA= && if %clustail%>=0x20 && set "lfn=%lfnorg%" && set /a lfnnum=%lfnnum%+1 && set /A c=0x1 && set i=1 && set l=0 && goto :loopfindLFN
if exist lfnentry && if exist entry && call :getsfnfilename &; if exist sfnfile && if %~2==dir && set sfnpath=%sfnpath%%%sfnfile%/ &; if exist %device%%%sfnpath:~0,-1% && endlocal && set sfn= && set sfnpath= && set "message=%device%%%sfnpath% not found" && set lfnentry= && goto :eof
#DEBUG#if %mode%==checklfn && if exist sfnfile && if %~2==file && endlocal && set sfnfile=%sfnfile% && set lfnentry=%lfnentry% && set dirclus0=%dirclus0% && set sfn=%sfn% && set entry=%entry% && set ENTRY=%ENTRY% && goto :eof
if %mode%==checklfn && if exist sfnfile && if %~2==file && endlocal && set sfnfile=%sfnfile% && set lfnentry=%lfnentry% && set dirclus0=%dirclus0% && goto :eof
#BAD???#if exist lfnentry && if exist entry && call :getsfnfilename &; if exist sfnfile && if %~2==dir && set sfnpath=%sfnpath%%%sfnfile%/ &; if exist %device%%%sfnpath:~0,-1% && endlocal && set sfn= && set sfnpath= && set "message=%device%%%sfnpath% not found" && set lfnentry= && goto :eof
if "%~3"=="echo" && if exist lfnentry && raw cat --hex --skip=%lfnentry% --length=96 %device%%0+%devsect%
if exist lfnentry && if exist entry && echo -n > (md)%mdbase%+1 && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && set success=Y
#BUGGY#if exist lfnentry && if exist entry && echo -n > (md)%mdbase%+%clussect% && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && set success=Y
if "%~3"=="echo" && echo A success=%success% clusnum=%clusnum% clusnum1=%clusnum1% clusnum0=%clusnum0%
if %~2==dir && if %success%==Y && set /A address=%basemem%+0x1A && if /i %filesys%==fat32 && set clusnumH=0x0
if %~2==dir && if %success%==Y && if /i %filesys%==fat32 && read %address% &; set /A clusnumL=%@retval%&0xffff &; set clusnumL=0000%clusnumL:~2% && set /A address=%address%-0x6 &; read %address% &; set /A clusnumH=%@retval%&0xffff
if %~2==dir && if %success%==Y && if /i %filesys%==fat32 &; if %clusnumH%==0x0 && set /A clusnum=0x%clusnumL:~-4,4% && set clusnumH= && set clusnumL= && set address= ! set clusnum=%clusnumH%%%clusnumL:~-4,4% && set clusnumL= && set clusnumH= && set address=
if %~2==dir && if %success%==Y && if not /i %filesys%==fat32 && read %address% &; set /A clusnum=%@retval%&0xffff && set address=
if %mode:~3%==lfnentry && if %~2==file && if not exist lfnentry && if %bytedone%>=%dataarea% &; if not exist clusnum0 && set clusnum0=%clusnum% ! if not exist clusnum1 && set clusnum1=%clusnum% ! set clusnum0=%clusnum1% && set clusnum1=%clusnum%
if not %mode:~3%==lfnentry && if not exist entry && if %bytedone%>=%dataarea% &; if not exist clusnum0 && set clusnum0=%clusnum% ! if not exist clusnum1 && set clusnum1=%clusnum% ! set clusnum0=%clusnum1% && set clusnum1=%clusnum%
if %mode:~3%==lfnentry && if %~2==dir && if not exist entry && if %bytedone%>=%dataarea% &; if not exist clusnum0 && set clusnum0=%clusnum% ! if not exist clusnum1 && set clusnum1=%clusnum% ! set clusnum0=%clusnum1% && set clusnum1=%clusnum%
if "%~3"=="echo" && echo B success=%success% clusnum=%clusnum% clusnum1=%clusnum1% clusnum0=%clusnum0%
if %mode:~3%==lfnentry && if %~2==file && if not exist lfnentry && if exist clusnum && if not %clusnum%==0 && if %bytedone%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" "%~3" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; set lfndone=%bytedone% && set clustail=%dirlen% && set "lfn=%lfnorg%" && set /a lfnnum=%lfnnum%+1 && set /A c=0x1 && set i=1 && set l=0 && goto :loopfindLFN
if not %mode:~3%==lfnentry && if not exist entry && if exist clusnum && if not %clusnum%==0 && if %bytedone%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; set lfndone=%bytedone% && set clustail=%dirlen% && set "lfn=%lfnorg%" && set /a lfnnum=%lfnnum%+1 && set /A c=0x1 && set i=1 && set l=0 && goto :loopfindLFN
if %mode:~3%==lfnentry && if %~2==dir && if not exist entry && if exist clusnum && if not %clusnum%==0 && if %bytedone%>=%dataarea% && set lastclus=%clusnum% && call :lookupFAT "%clusnum%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; set lfndone=%bytedone% && set clustail=%dirlen% && set "lfn=%lfnorg%" && set /a lfnnum=%lfnnum%+1 && set /A c=0x1 && set i=1 && set l=0 && goto :loopfindLFN
if exist lfnentry && if exist entry && if %success%==Y && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize%
if not %~2==file && set lfnentry=
if %mode:~3%==lfnentry && if %~2==file && if %bytedone%>=%dataarea% &; if %clusnum%>=2 && set lastclus=%clusnum% ! if exist clusnum1 && set lastclus=%clusnum1% ! if exist clusnum0 && set lastclus=%clusnum0% ! set lastclus=
if "%~3"=="echo" && echo $[0x00]"$[]Leaving %0: clusnum=%clusnum% bytedone=%bytedone% dirlen=%dirlen% clusnum0=%clusnum0% clusnum1=%clusnum1% lastclus=%lastclus% lfnentry=%lfnentry% lfnbyteA=%lfnbyteA% lfnbyteB=%lfnbyteB% lfnent01=%lfnent01% success=%success% $[0xF0]sfn=%sfn% $[0x07]entry=%entry% name=%name% ext=%ext% n=%n% sfnpath=%sfnpath% $[0x00]"
endlocal && set "sfn=%sfn%" && set entry=%entry% && set bytedone=%bytedone% && set dirlen=%dirlen% && set clusnum=%clusnum% && set success=%success% && set sfnfile=%sfnfile% && set sfnpath=%sfnpath% && set lfnentry=%lfnentry% && set lfnent01=%lfnent01% && set lfnbyteA=%lfnbyteA% && set lfnbyteB=%lfnbyteB% && set lastclus=%lastclus% && set chainlen=%chainlen% && set n=%n% && set dirclus0=%dirclus0%
goto :eof
::
:checklfnentry
setlocal
set /A endentry=%bytedone%+%dirlen%-0x20
if %lfnent01%==%endentry% && if exist clusnum && if %bytedone%>=%dataarea% && call :lookupFAT "%clusnum%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; set entry=%bytedone% && set lfndone=%bytedone% && set clustail=%dirlen% && set clusnum2=%clusnum%
if not %clusnum%>=2 && set clusnum=%clusnum2%
if not exist entry && set /A entry=%lfnent01%+0x20
raw cat --skip=%entry% --locate=\x25 --length=11 %device%%0+%devsect% > nul && endlocal && set clusnum=0 && set entry= && set "message=Char '%' in Short File Names not supported" && goto :eof
raw cat --skip=%entry% --locate=\xE5 --length=1 %device%%0+%devsect% > nul || raw cat --skip=%entry% --length=11 %device%%0+%devsect% | set sfn=
if "%~1"=="echo" && raw cat --hex --skip=%entry% --length=0x20 %device%%0+%devsect%
#NoDiff#if exist sfn && call :getsfnfilename &; if exist sfnfile && call :sfnchecksum "%sfnfile%"
#NOT#if exist sfn && call :sfnchecksum "%sfn%" "%~2"
#ORG#
if exist sfn && call :sfnchecksum "%sfn%" "%~1"
if "%~1"=="echo" && echo $[0x00]"$[]sfn=$[0xF0]%sfn%$[0x07] checksum=%checksum% entry=%entry% name=%name% ext=%ext% lfn=%lfn%$[0x00]"
if "%~1"=="echo" && raw cat --hex --skip=%lfnent01% --length=0x20 %device%%0+%devsect%
if exist checksum && set /A skipsum=%lfnent01%+0xD
if exist checksum && raw cat --skip=%skipsum% --locate=\x%checksum% --length=1 %device%%0+%devsect% > nul && set lfncheck=Y
if not %lfncheck%==Y && set /A lfndone=%entry%+0x20 && set entry= && set /A clustail=%clustail%-0x20
if "%~1"=="echo" && echo entry=%entry% skipsum=%skipsum% lfncheck=%lfncheck% entry=%entry% lfndone=%lfndone% lfnent01=%lfnent01%
endlocal && set "sfn=%sfn%" && set entry=%entry% && set checksum=%checksum% && set lfncheck=%lfncheck% && set bytedone=%bytedone% && set dirlen=%dirlen% && set clusnum=%clusnum% && set lfndone=%lfndone% && set clustail=%clustail% && set lfnentry=%lfnentry% && set lfnent01=%lfnent01% && set clusnum2=%clusnum2% && set lastclus=%lastclus% && set chainlen=%chainlen%
goto :eof
::
:getsfnfilename
if not exist sfn && goto :eof
setlocal
call Fn.11 "%sfn:~0,8%" " " &; raw cat --skip=%entry% --locate=\x20 --length=8 --number=1 %device%%0+%devsect% | set namelen= &; if exist namelen && set /A namelen=0x%namelen%-%entry% &; raw cat --skip=%entry% --length=%namelen% %device%%0+%devsect% | set sfnname=
call Fn.11 "%sfn:~0,8%" " " |; set sfnname=%sfn:~0,8%
if exist %sfn:~8,3% && call Fn.11 "%sfn:~8,3%" " " &; set /A entry=%entry%+8 &; raw cat --skip=%entry% --locate=\x20 --length=3 --number=1 %device%%0+%devsect% | set extlen= &; if exist extlen && set /A extlen=0x%extlen%-%entry% &; raw cat --skip=%entry% --length=%extlen% %device%%0+%devsect% | set sfnext=
if exist %sfn:~8,3% && call Fn.11 "%sfn:~8,3%" " " |; set sfnext=%sfn:~8,3%
if not exist sfnext && set sfnfile=%sfnname% ! set sfnfile=%sfnname%.%sfnext%
endlocal && set sfnfile=%sfnfile%
goto :eof
::
:sfnchecksum
#BADECHO?#if "%~2"=="echo" && #echo %0$[0x00]"$[0x07]%*$[0x00]"
setlocal
if not "%~1"=="" && set "sfn=%~1"
if "%~2"=="echo" && echo 1 $[0xF0]sfn=%sfn%
if not exist sfn && call :catfile "%name%%%ext%" &; if not exist ENTRY && endlocal && set checksum= && goto :eof
if exist sfn && set "ENTRY=%sfn%"
if "%~2"=="echo" && echo 2 $[0xF0]sfn=%sfn%$[0x07] $[0xF0]ENTRY=%ENTRY%
echo -e $[0x07]%ENTRY% > (md)%mdbase%+1
#GOOD#
raw cat --hex --skip=0 --length=11 (md)%mdbase%+1 | set hexsfn= &; set "hexsfn=%hexsfn:~0,-13%"
#BAD#raw cat --hex --skip=0 --length=11 (md)%mdbase%+1 | set hexsfn=
if "%~2"=="echo" && echo 3 hexsfn=%hexsfn%
#DEBUG#echo %0 hexsfn=%hexsfn%
call Fn.11 "%hexsfn%" "25" && endlocal && set checksum= && set "message=Char '%' in Short File Names not supported" && goto :eof
#BAD#call Fn.11 "%hexsfn%" "25" && endlocal && set checksum= && set "message=Char '%' in Short File Names not supported" && goto :eof
if exist hexsfn && setlocal && set * && set "hexsfn=%hexsfn%"
echo -e \x2000\x20%hexsfn:~9,35% | call :checksumSFN
if exist hexsfn && endlocal && set checksum=%sum%
#BAD??#if exist hexsfn && setlocal && set sum= &; echo -e \x2000\x20%hexsfn:~9,35% | call :checksumSFN &; endlocal && set checksum=%sum%
if %checksum%<=0xF && set checksum=0%checksum:~2% ! set checksum=%checksum:~2%
if "%~2"=="echo" && echo 4 sfn=%sfn% checksum=%checksum% && pause
#DEBUG#echo 4 $[0xF0]sfn=%sfn%$[0x07] checksum=%checksum% sum=%sum% && pause
endlocal && set checksum=%checksum%
goto :eof
::
:checksumSFN
## Version: Wonko the Sane
if "%~2"=="" && goto :eof
set /A first=%sum%>>1
set /A second=%sum%&1<<7
shift
set /A sum=%first%+%second%+0x%~1&0xff
goto :checksumSFN
::
#OLD#:checksumSFN
## Own version, traded for Wonko's above
echo %*
#maybe_&0xff_first?#set /A sum=%rotate%+0x%~1 && shift
set /A sum=%rotate%+0x%~1 && shift
echo sum=%sum% && pause
set /A sum=%sum%&0xff
if "%~1"=="" && goto :eof
calc %sum% % 2 && set /A rotate=%sum%-1/2+128
calc %sum% % 2 || set /A rotate=%sum%/2
goto :checksumSFN
::
:checkforbiddenchars
if not "%~2"=="echo" if not "%~3"=="echo" || set echo=echo
#BADECHO?# && #echo %0$[0x00]"$[0x07]%*$[0x00]"
setlocal && set *
set forbiden=Y &; call Fn.11 "%~1" "\x22" || set forbiden=
#TESTresult# call Fn.11 has 'if'-properties with 'call Fn.11 "%var%" "chars" && cmdA ! cmdB'
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "%" || set forbiden=
if not %forbiden%==Y && call Fn.11 "%~1" "\x01" && set forbiden=Y
#NOTGOOD#if not %forbiden%==Y && call Fn.11 "%~1" "%c" && set forbiden=Y
#NOTGOOD#if not %forbiden%==Y && call Fn.11 "%~1" "%s" && set forbiden=Y
#NOTGOOD#if not %forbiden%==Y && call Fn.11 "%~1" "%u" && set forbiden=Y
#NOTGOOD#if not %forbiden%==Y && call Fn.11 "%~1" "%x" && set forbiden=Y
#NOTGOOD#if not %forbiden%==Y && call Fn.11 "%~1" "%X" && set forbiden=Y
#ONEinstanceONLY??#if not %forbiden%==Y && call Fn.11 "%~1" "3551489" && set forbiden=Y
#ONEinstanceONLY??#if not %forbiden%==Y && call Fn.11 "%~1" "363101" && set forbiden=Y
#NOTGOODFOR_%s_\xCC_\x0F_too#if not %forbiden%==Y && call Fn.11 "%~1" "\xE9" && set forbiden=Y
#REALLYbad'$['#
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "$[" || set forbiden=
#OLD#if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "$[0x" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "|" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" ">" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\a" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\b" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\f" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\n" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\r" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\t" || set forbiden=
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\v" || set forbiden=
#NOTPOSSIBLE# call Fn.11 "%~1" "\x" or call Fn.11 "%~1" "\ "
if not %forbiden%==Y && set forbiden=Y &; call Fn.11 "%~1" "\\" || set forbiden=
if %forbiden%==Y && endlocal && set forbiden=%forbiden% && goto :eof
call Fn.11 "%~1" "*" && endlocal && set forbiden=Y && goto :eof
call Fn.11 "%~1" ":" && endlocal && set forbiden=Y && goto :eof
call Fn.11 "%~1" "<" && endlocal && set forbiden=Y && goto :eof
call Fn.11 "%~1" "?" && endlocal && set forbiden=Y && goto :eof
#LATER#if %mode%==makelfn && echo -n > (md)%mdbase%+1 && pause --wait=0 "%~1" > (md)%mdbase%+1 && raw cat --locate=\x5C (md)%mdbase%+1 > nul && set forbiden=Y
#BADTOO#call Fn.11 "%~1" " " || call Fn.11 "%~1" "\x5C" && endlocal && set forbiden=Y && goto :eof
## Removes'\'-sameas'\ '#echo -e "$[0x07]%~1" | set arg=
#TODO??#if /i %mode%==makelfn && set forbiden=Y && set /u "arg=#%#~1" &; call Fn.11 "%arg%" "CON" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || call Fn.11 "%arg%" "" || set forbiden=
if "%echo%"=="echo" && echo "%~1" forbiden=%forbiden% && pause
endlocal && set forbiden=%forbiden%
goto :eof
::
:checksfn
setlocal && set *
set "arg=%~1" &; set larg=%@retval% &; set /a larg=%larg%
set "argname=%~n1" &; set largname=%@retval% &; set /a largname=%largname%
set "argext=%~x1" &; set largext=%@retval% &; set /a largext=%largext%
if %larg%>=13 && endlocal && set SFN=N && goto :eof
if %largname%>=9 && endlocal && set SFN=N && goto :eof
if %largext%>=5 && endlocal && set SFN=N && goto :eof
call Fn.11 "%arg%" " " && endlocal && set SFN=N && goto :eof
call Fn.11 "%arg%" "\ " && endlocal && set SFN=N && goto :eof
#NOTGOOD???#call Fn.11 "%arg%" "\ " && endlocal && set SFN=N && goto :eof
call Fn.11 "%argname:~1%" " " && endlocal && set SFN=N && goto :eof
call Fn.11 "%argext:~2%" " " && endlocal && set SFN=N && goto :eof
call Fn.11 "%argname%" "." && endlocal && set SFN=N && goto :eof
if not %SFN%==N && set SFN=N &; call Fn.11 "%arg%" "[" || call Fn.11 "%arg%" "]" || call Fn.11 "%arg%" "+" || call Fn.11 "%arg%" "=" || call Fn.11 "%arg%" ";" || call Fn.11 "%arg%" "," || set SFN=Y
endlocal && set SFN=%SFN%
goto :eof
::
:findpath
setlocal
if not "%~2"=="echo" if not "%~3"=="echo" || set echo=echo
set "path=%~1"
if /i %filesys%==fat32 && set bytedone=%dataarea% && set /A dirlen=%clussize%
if not /i %filesys%==fat32 && set bytedone=%root% && set /A dirlen=%dataarea%-%root%
if "%path%"=="/" && endlocal && set bytedone=%bytedone% && set dirlen=%dirlen% && set sfnpath=/ && set clusnum=2 && goto :eof
echo "%path%" > (md)%mdbase%+1
raw cat --locate=\x3D --replace=\x3F (md)%mdbase%+1 > nul
call Fn.11 "%path%" " " && call :lsspaces "%echo%"
raw cat --locate=/ --replace=\x20 (md)%mdbase%+1 > nul
raw cat --locate=\x22 --replace=\x20 (md)%mdbase%+1 > nul
if %echo%==echo && echo %0$[0x00]"$[]path=%path% filesys=%filesys%$[0x00]"
set clusnum=2 && set sfnpath=/ && raw cat (md)%mdbase%+1 | call :finddirectory
#BAD?#set clusnum=0 && set sfnpath=/ && raw cat (md)%mdbase%+1 | call :finddirectory
#still bad#echo %0 "endlocal && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set entry=%entry% && set sfnfile=%sfnfile% && set sfnpath=%sfnpath% && set lfnentry=%lfnentry% && set chainlen=%chainlen% && set "message=%message%"
endlocal && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set entry=%entry% && set sfnfile=%sfnfile% && set sfnpath=%sfnpath% && set lfnentry=%lfnentry% && set chainlen=%chainlen% && set "message=%message%"
goto :eof
::
:lsspaces
if %echo%==echo && echo %0
setlocal
set numspace= && set /A skip=0
raw cat --locate=\x20 (md)%mdbase%+1 > nul ;; set /a numspace=%@retval%
if %numspace%==0 && endlocal && goto :eof
:looplsspaces
if %echo%==echo && echo numspace=%numspace%
#NOTneeded?#if %numspace%==0 && endlocal && set lsspaces=Y && goto :eof
raw cat --skip=%skip% --locate=\x20 --number=1 (md)%mdbase%+1 > nul &; set /a skip=%?%
set /A seek=%skip%+1
raw dd if=(md)%mdbase%+1 of=(md)%mdbase%+1 bs=1 skip=%skip% seek=%seek% > nul
raw cat --skip=%skip% --locate=\x20 --replace=\x5C --number=1 (md)%mdbase%+1 > nul
set /a numspace=%numspace% - 1
if %numspace%==0 && endlocal && goto :eof
set /A skip=%skip% + 2
goto :looplsspaces
::
:finddirectory
if "%~1"=="" && goto :eof
set chainlen=%clussize%
#BADECHO?#if %echo%==echo && #echo %*
set "argname=%~n1" && set "argext=%~x1"
## Still dangerous with names with include \n , \t , \r : Call Fn.11 cannot found "\" - only \t etc
echo -e "%argname%" | set argname= &; set "argname=%argname:~1,-1%" ;; if exist argext && echo -e "%argext%" | set argext= &; set "argext=%argext:~1,-1%"
call Fn.11 "%argname:~0,1%" "\xE5" && echo -e "\x05%argname:~1%" | set argname= &; set "argname=%argname:~1,-1%"
call Fn.11 "%argname%" "\x3F" && echo "%argname%" > (md)%mdbase%+1 &; raw cat --locate=\x3F --replace=\x3D (md)%mdbase%+1 > nul && cat (md)%mdbase%+1 | set argname= &; set "argname=%argname:~1,-1%"
if exist argext && call Fn.11 "%argext%" "\x3F" && echo "%argext%" > (md)%mdbase%+1 &; raw cat --locate=\x3F --replace=\x3D (md)%mdbase%+1 > nul && cat (md)%mdbase%+1 | set argext= &; set "argext=%argext:~1,-1%"
set SFN= &; call :checksfn "%argname%%%argext%"
if not %SFN%==N && set sfnpath=%sfnpath%%%argname%%%argext%/ &; if not exist %device%%%sfnpath:~0,-1% && set ENTRY= && call :catfile "%argname%%%argext%" ! set bytedone= && set sfnpath= && set entry= && set "message=%device%%%sfnpath% not found" && goto :eof
#BADexceptGetLfnEntry#set sfn= &; if %SFN%==N && setlocal && set mode=getsfnentry && call :findsfn "%argname%%%argext%" "dir" "%echo%" &; endlocal && set "ENTRY=%sfn%" && set entry=%entry% && set bytedone=%bytedone% && set dirlen=%dirlen% && set clusnum=%clusnum% && set sfn=%sfn% &; if not exist sfn && set clusnum=0 && goto :eof
set sfn= &; if %SFN%==N && call :findsfn "%argname%%%argext%" "dir" "%echo%" &; set "ENTRY=%sfn%" &; if not exist sfn && set clusnum=0 && set bytedone= && set entry= && set sfnfile= && goto :eof
if %echo%==echo && echo sfnfile=%sfnfile% clusnum=%clusnum% bytedone=%bytedone% entry=%entry% sfn=%sfn% ENTRY=%ENTRY% argname.argext=%argname%%%argext%
if exist sfn && set argname= && set argext= && shift && goto :finddirectory
set offset=%bytedone% && set search=%dirlen% && set /A endentry=%bytedone%+%dirlen%-0x20
:finddirectoryloop
set entry= && set success= && set argname= && set argext=
#DEBUG=STILLBAD#raw cat --skip=%offset% --locate="%ENTRY%" --length=%search% --number=1 %device%%0+%devsect% | set entry= &; if exist entry && set /A "entry=0x%entry%" &; if %entry%>=%offset% && echo %0 entry=%entry% &; calc 0x%entry:~-2,2% % 0x20 &; set /A offset=%entry%-%@retval%+0x20 &; if %offset%<=%endentry% && set /A search=%bytedone%-%offset%+%dirlen% && goto :finddirectoryloop ! set entry=
raw cat --skip=%offset% --locate="%ENTRY%" --length=%search% --number=1 %device%%0+%devsect% | set entry= &; if exist entry && if 0x%entry%>=%offset% && set /A entry=0x%entry% &; calc 0x%entry:~-2,2% % 0x20 &; set /A offset=%entry%-%@retval%+0x20 &; if %offset%<=%endentry% && set /A search=%bytedone%-%offset%+%dirlen% && goto :finddirectoryloop ! set entry=
if exist entry && if not %entry%>=%offset% && set "message=BAD search in :finddirectory" && set entry= && set clusnum=0 && set sfnfile= && goto :eof
if %echo%==echo && echo clusnum=%clusnum% bytedone=%bytedone% entry=%entry%
if exist entry && if not %success%==Y && echo -n > (md)%mdbase%+1 && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && set success=Y
#BUGGY#if exist entry && if not %success%==Y && echo -n > (md)%mdbase%+%clussect% && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && set success=Y
if %success%==Y && set /A address=%basemem%+0x1A && set clusnumH=0x0
if %success%==Y && if /i %filesys%==fat32 && read %address% &; set /A clusnumL=%@retval%&0xffff &; set clusnumL=0000%clusnumL:~2% && set /A address=%address%-0x6 &; read %address% &; set /A clusnumH=%@retval%&0xffff
if %success%==Y && if /i %filesys%==fat32 &; if %clusnumH%==0x0 && set /A clusnum=0x%clusnumL:~-4,4% && set clusnumH= && set clusnumL= ! set clusnum=%clusnumH%%%clusnumL:~-4,4% && set clusnumH= && set clusnumL=
if %success%==Y && if not /i %filesys%==fat32 && read %address% &; set /A clusnum=%@retval%&0xffff
if not exist entry && if exist clusnum && if %bytedone%>=%dataarea% && call :lookupFAT "%clusnum%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% &; set offset=%bytedone% && set search=%dirlen% && set /A endentry=%bytedone%+%dirlen%-0x20 && goto :finddirectoryloop
if exist entry && if %success%==Y && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize%
if %echo%==echo && if %clusnum%==0 && echo %0 clusnum=%clusnum% sfnfile=%sfnfile%
if not %clusnum%==0 && shift ! set sfnfile= && set "message=%device%%%sfnpath% not found" && goto :eof
if %echo%==echo && echo In :finddirectory: bytedone=%bytedone% dirlen=%dirlen% sfn=%sfn% ENTRY=%ENTRY% entry=%entry% clusnum=%clusnum% success=%success% result=%result% sfnfile=%sfnfile%
if %echo%==echo && if not exist entry && set clusnum=0 && set bytedone= && set sfn= && set sfnfile= && set ENTRY= && set "message=%device%%%sfnpath% not found" && echo result=%result% && goto :eof
if not exist entry && set clusnum=0 && set bytedone= && set sfn= && set sfnfile= && set ENTRY= && set "message=%device%%%sfnpath% not found" && goto :eof
goto :finddirectory
::
:lookupFAT
setlocal
if "%~2"=="echo" && echo %0 clusnum=%~1 lastclus=%lastclus% fat1=%fat1%
set clusnum=%~1 &; set lastclus=%clusnum%
if /i %filesys%==fat12 && set FATbytes=1.5 ! if /i %filesys%==fat16 && set FATbytes=2 ! if /i %filesys%==fat32 && set FATbytes=4
if /i %filesys%==fat32 && set success= && set /A address=%clusnum% * %FATbytes% + %fat1% &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0xffffffff &; set result= && if %nextclus%<=0xFFFFFF6 && set clusnum=%nextclus% ! set clusnum=0
if /i %filesys%==fat16 && set success= && set /A address=%clusnum% * %FATbytes% + %fat1% &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0xffff &; set result= && if %nextclus%<=0xFFEF && set clusnum=%nextclus% ! set clusnum=0
if /i %filesys%==fat12 &; calc %lastclus% % 2 |; set /A address=%clusnum% / 2 + %clusnum% + %fat1% && set even=Y &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0x0fff &; set result= && if %nextclus%>=0xFF0 && set clusnum=0 ! set clusnum=%nextclus% && set "success=Done"
if /i %filesys%==fat12 &; calc %lastclus% % 2 &; set /A address=%clusnum% / 2 + %clusnum% + %fat1% && set even=N &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0xffff>>4 &; set result= && if %nextclus%>=0xFF0 && set clusnum=0 ! set clusnum=%nextclus% && set "success=Done"
#badifoutcomeisodd#if /i %filesys%==fat12 &; calc %clusnum% % 2 |; set /A address=%clusnum% / 2 + %clusnum% + %fat1% && set even=Y &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0x0fff &; set result= && if %nextclus%>=0xFF0 && set clusnum=0 ! set clusnum=%nextclus% && set "success=Done"
#badifoutcomeofevenisodd#if /i %filesys%==fat12 &; calc %clusnum% % 2 &; set /A address=%clusnum% / 2 + %clusnum% + %fat1% && set even=N &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0xffff>>4 &; set result= && if %nextclus%>=0xFF0 && set clusnum=0 ! set clusnum=%nextclus% && set "success=Done"
if %clusnum%==1 && set clusnum=0 && set success=
if %clusnum%>=2 && set /a chainlen=%chainlen%+%clussize% &; if %chainlen%>=2m && set clusnum=0
if "%~2"=="echo" && echo clusnum=%clusnum% even=%even% success=%success%
endlocal && set clusnum=%clusnum% && set lastclus=%lastclus% && set chainlen=%chainlen%
goto :eof
::
:readendian
if "%~2"=="echo" && echo %0 %*
setlocal && set * && set device=%device% && set devsect=%devsect% &; set /A skip=%~1 &; set /a s=%@retval%
raw cat --hex --skip=%skip% --length=4 %device%%0+%devsect% | set LE= &; if %s%<=10 && set "LE=%LE:~10,11%" ! call set "LE=%^LE:~%s%,11%" &; if "%LE:~0,1%"==" " && set "LE=%LE:~1%"
if not "%LE:~9,1%"==" " && set result=0x%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~6,1%"==" " && set result=0x%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~3,1%"==" " && set result=0x%LE:~3,2%%%LE:~0,2% ! if not "%LE:~0,1%"==" " && set result=0x%LE:~0,2%
if "%~2"=="echo" && echo result=%result% LE=%LE% litleend=%litleend:~0,21%
endlocal && set result=%result%
goto :eof
::
:catfile
setlocal && set *
set /u NAME=%~n1 &; set /a namelen=%@retval% &; if %namelen%<=7 && call :spread "NAME" "%namelen%" &; set NAME=%NAME%%%spread% && set spread=
set /u EXT=%~x1 ;; set EXT=%EXT:~1% ;; set /a extlen=%@retval% &; if exist EXT && if %extlen%<=2 && call :spread "EXT" "%extlen%" &; set EXT=%EXT%%%spread% && set spread=
if %namelen%>=1 && if %namelen%<=8 &; if not exist EXT && set ENTRY=%NAME%\x20\x20\x20 ! if %extlen%<=3 && set ENTRY=%NAME%%%EXT%
endlocal && set ENTRY=%ENTRY%
goto :eof
::
:filesystem
setlocal && set * && set mdbase=%mdbase%
set device=%~1
echo -n > (md)%mdbase%+1
errorcheck off
debug msg=1
if exist device && vol %device% > (md)%mdbase%+1
debug msg=0
cat --locate=\x0A --number=1 (md)%mdbase%+1 > nul &; set /a skip=%?%
if exist device && if exist skip && set filesys=fat12 &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=fat16 &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=fat32 &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=ntfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=exfat &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=ext2fs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=iso9660 &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=reiserfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=udf &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=initrdfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=minix &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=vstafs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=jfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=xfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=
if exist device && if exist skip && if not exist filesys &; set filesys=ufs2 &; cat --skip=%skip% --locate=%esys% (md)%mdbase%+1 > nul || set filesys=ffs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=fb &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=tftp &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=pxe &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=ipxe &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=
#BAD#if exist device && set filesys=fat12 &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=fat16 &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=fat32 &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=ntfs &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=exfat &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=ext2fs &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=iso9660 &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=reiserfs &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=udf &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=initrdfs &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=minix &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=vstafs &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=jfs &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=xfs &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=ufs2 &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=ffs &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=fb &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=tftp &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=pxe &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=ipxe &; raw cat --locatei=%filesys% (md)%mdbase%+1 > nul |; set filesys=
endlocal && set filesys=%filesys%
goto :eof
::
:bootblockbase
setlocal && set * && set mdbase=%mdbase% && set filesys=%filesys%
set device=%~1
echo -n > (md)%mdbase%+1
raw dd if=%device%%0+1 of=(md)%mdbase%+1 > nul
set /A base=%mdbase% * 0x200
set /A address=%base%+0xB
read %address% > nul ;; set /A bytepsec=%@retval%&0xffff
calc %bytepsec% % 0x200 && endlocal && set "message=%bytepsec% bytes per sector not supported on %filesys%" && set result= && goto :eof
set /A address=%base%+0xD
read %address% > nul ;; set /A secpclus=%@retval%&0xff
set /A address=%base%+0xE
read %address% > nul ;; set /A reserved=%@retval%&0xffff
set /A address=%base%+0x10
read %address% > nul ;; set /A numfats=%@retval%&0xff
#DEBUG#echo %0 numfats=%numfats%
if not %numfats%>=1 && endlocal && set "message=Abort: number of fat's is zero" && set result= && goto :eof
if %numfats%>=3 && endlocal && set "message=Abort: %numfats% File Allocation Tables unsupported" && set result= && goto :eof
set /A address=%base%+0x11
read %address% > nul ;; set /A rootentr=%@retval%&0xffff
if not %rootentr%==0 &; calc %rootentr% % 16 && endlocal && set "message=%rootentr% rootentries not supported on %filesys%" && set result= && goto :eof
set /A address=%base%+0x13
read %address% > nul ;; set /A totsect=%@retval%&0xffff
set /A address=%base%+0x15
read %address% > nul ;; set /A mediabyt=%@retval%&0xff
checkrange 0xF0:0xFF calc %mediabyt% || endlocal && set filesys= && set "message=Mediabyte %mediabyt% is not valid" && goto :eof
set /A address=%base%+0x16
read %address% > nul ;; set /A secpfat=%@retval%&0xffff
#noneed#set /A address=%base%+0x18
#noneed#read %address% > nul ;; set /A secptrac=%@retval%&0xffff
#noneed#set /A address=%base%+0x1A
#noneed#read %address% > nul ;; set /A numheads=%@retval%&0xffff
#noneed#set /A address=%base%+0x1C
#noneed#read %address% > nul ;; set /A hiddsect=%@retval%&0xffffffff
if %totsect%==0 && set /A address=%base%+0x20
if %totsect%==0 && read %address% > nul &; set /A totsect=%@retval%&0xffffffff
if %secpfat%==0 && if /i %filesys%==fat32 && set /A address=%base%+0x24
if %secpfat%==0 && if /i %filesys%==fat32 && read %address% > nul &; set /A secpfat=%@retval%&0xffff
set /A rootbyte=%rootentr% * 32
if %numfats%>=1 && set /A fatbyte=%numfats% * %secpfat% * %bytepsec%
#BAD#if %numfats%==2 && set /A fatbyte=%numfats% * %secpfat% * %bytepsec%
set /A rsrvbyte=%reserved% * %bytepsec%
if not /i %filesys%==fat32 && set /A root=%fatbyte% + %rsrvbyte%
set /A dataarea=%rootbyte% + %fatbyte% + %rsrvbyte%
set /A clussize=%secpclus% * %bytepsec%
set /A fat1=%rsrvbyte%
if exist fatbyte &; if %numfats%==2 && set /A fat2=%fatbyte% / 2 + %rsrvbyte%
#BAD#if exist fatbyte && set /A fat2=%fatbyte% / 2 + %rsrvbyte%
if exist fat1 && raw cat --skip=%fat1% --locate=\x%mediabyt:~2% --length=1 %device%%0+%totsect% > nul || endlocal && set filesys= && set "message=Mediabyte %mediabyt% in fat1 does not match" && goto :eof
#NOTTOBEUSED#if exist fat2 && cat --skip=%fat2% --locate=\x%mediabyt:~2% --length=1 %device%%0+%totsect% > nul || endlocal && set filesys= && set "message=Mediabyte %mediabyt% in fat1 does not match" && goto :eof
set /A numclus=-%dataarea% / 0x200 + %totsect% / %secpclus%
#DEBUG#echo %0 fat1=%fat1% fat2=%fat2%
endlocal && set root=%root% && set dataarea=%dataarea% && set clussize=%clussize% && set fat1=%fat1% && set fat2=%fat2% && set secpfat=%secpfat% && set devsect=%totsect% && set secpclus=%secpclus% && set numclus=%numclus%
goto :eof
::
:spread
setlocal && set *
set "message1=%~1"
set /a len=%~2 ;; if not exist len && set len=0
if %message1%==NAME && set /a spaces=8-%len% && set "char=\x20"
if %message1%==EXT && set /a spaces=3-%len% && set "char=\x20"
set c=1
:spreadloop
if %c%<=%spaces% && set "spread=%spread%%%char%" && set /a c=%c%+1 && goto :spreadloop
endlocal && set "spread=%spread%"
goto :eof
::
:help
set message=
setlocal && set *
if not "%~2"=="echo" if not "%~3"=="echo" || set echo=echo && echo %0 %*
set "file=%~f0"
if /i "%~1"=="" && set mode=plus && set offset=5
if /i "%~1"=="help" && if "%~2"=="" && set mode=plus && set offset=5
if /i "%~1"=="help" && if not "%~2"=="" && set search=%~2 && set mode=search && set offset=5
if /i "%~1"=="help" && if "%~2"=="+" && set mode=plus && set offset=5
if "%mode%"=="plus" && raw cat --locate=\x23\x2D\x23\x2B\x20 %file% | call :showhelp
if "%mode%"=="search" && raw cat --locatei=\x0A:%search:~0,14% %file% | call :showhelp
#NOTOKE#if "%mode%"=="search" && raw cat --locatei=:%search:~0,15% %file% | call :showhelp
echo && endlocal && goto :eof
::
:showhelp
if %echo%==echo && echo %0 %*
if "%~1"=="" && goto :eof
if %mode%==search && set /A skip=0x%1+1 > nul
if %mode%==search && raw cat --skip=%skip% --locate=#-#+\x20 --length=40 --number=1 %file% > nul || shift && goto :showhelp
if %mode%==search && raw cat --skip=%skip% --locate=\x0A --number=1 %file% > nul &; set /A start=%?%+%offset%+1 > nul
if %mode%==search && raw cat --skip=%start% --locate=\x0A --number=1 %file% > nul &; set /a length=%?%+1 > nul
if %mode%==search && if not exist length && goto :eof
if %mode%==search && set /a length=%length%-%start% > nul
if %mode%==search && raw cat --skip=%start% --length=%length% %file% | set echohelp= &; if exist echohelp && echo -e %echohelp% && set echohelp=
if %mode%==search && shift && set start= && set length= && goto :showhelp
set /a skip=0x%1+%offset% > nul
cat --skip=%skip% --locate=\x0A --number=1 %file% > nul &; set length=%?%
if not exist length && goto :eof
set /a length=%length%-%skip% > nul
if not %mode%==search && raw cat --skip=%skip% --length=%length% %file% | set echohelp= &; if exist echohelp && echo -e $[0x0F]%echohelp% && set echohelp=
if %mode%==search && raw cat --skip=%skip% --locatei=\x20%search:~0,16% --length=%length% %file% > nul && raw cat --skip=%skip% --length=%length% %file% | set echohelp= &; if exist echohelp && echo $[0x0F]%echohelp% && set found=Y && set echohelp=
if %mode%==help && call :search
set length= && set found=
shift
goto :showhelp
::
:search
#SubUnused?#echo && echo $[0xf0]:search && echo
if not exist near &; if %echo%==echo && echo -e %0 %thisline%
set near=
cat --skip=%skip% --locate=\x23\x2D\x23\x2B\x20 --length=165 %file% > nul &; set /A near=%?%+5 > nul
if not exist near && goto :eof
cat --skip=%near% --locate=\x0A --number=1 %file% > nul &; set length=%?%
set /a length=%length%-%near% > nul
cat --skip=%near% --length=%length% %file% && echo -e $[]
if %echo%==echo && echo -e %thisline%
set skip=%near%
goto :search
